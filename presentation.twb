<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='16.9'>
        <calculation class='tableau' formula='16.9' />
      </column>
    </datasource>
    <datasource caption='food_banks_USA.csv+ (Multiple Connections)' inline='true' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MMG2020_2018county' name='textscan.00u036v1pp693e13iwpg008qjvoe'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data/Map the Meal Gap data' filename='MMG2020_2018county.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_banks_by_state' name='textscan.16xqeu61wkjun51ghzj4c1f1mpor'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_banks_by_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_banks_USA' name='textscan.0hucxfp1l2de8313xbg701cg463q'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_banks_USA.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_pop_state' name='textscan.0xru2a60yw3aqc1054uze0qtbh6y'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_pop_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='fi_rates_5yr' name='textscan.0yr55cu1lrxejt19knwo01wvbphj'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='fi_rates_5yr.csv' password='' server='' />
          </named-connection>
          <named-connection caption='median_income_hh' name='textscan.1t6fwrc0iizon815jfgrj0s5an48'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='median_income_hh.csv' password='' server='' />
          </named-connection>
          <named-connection caption='income_18' name='textscan.0jdg3q00eshtd111cyluk0ftwobt'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='income_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_waste_percents' name='textscan.0qhuosv1ywr38214aputw0ie78av'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_waste_percents.csv' password='' server='' />
          </named-connection>
          <named-connection caption='financials_18' name='textscan.187vbbv0393s1b14vpfnz0jrf6vh'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='financials_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_poverty_18' name='textscan.1kd29ao0d5cczz0zwx9790l7a5o3'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_poverty_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='income_18 (2)' name='textscan.00krgsn0wuxld51cqa8f71ry5lof'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='income_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child poverty by race' name='textscan.0g5bcoy0feqird12y8to60lp2xe8'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child poverty by race.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_public_asst_18' name='textscan.1268ntb0mx7nlo1bavmf70arbk3z'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_public_asst_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='physical health' name='textscan.1by0ali063vpph1ddombw120mxmp'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='physical health.csv' password='' server='' />
          </named-connection>
          <named-connection caption='medb' name='textscan.0b85csq0g8nusr100fwjg16xz00x'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='medb.csv' password='' server='' />
          </named-connection>
          <named-connection caption='fb_per100000' name='textscan.10djsbc144a22s12ismq50nnsd9r'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='fb_per100000.csv' password='' server='' />
          </named-connection>
          <named-connection caption='grant_allocation' name='textscan.19c1y8q1wbp0o216mjkch0rz3raa'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='grant_allocation.csv' password='' server='' />
          </named-connection>
          <named-connection caption='waste_donate_percent' name='textscan.1hgom7b1qcxro3156l2100wntaei'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='waste_donate_percent.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='FIPS' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County, State' ordinal='2' />
            <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
            <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
            <column datatype='real' name='Low Threshold in state' ordinal='5' />
            <column datatype='string' name='Low Threshold Type' ordinal='6' />
            <column datatype='real' name='High Threshold in state' ordinal='7' />
            <column datatype='string' name='High Threshold Type' ordinal='8' />
            <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
            <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
            <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
            <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
            <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
            <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
            <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
            <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
            <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0hucxfp1l2de8313xbg701cg463q' name='food_banks_USA.csv' table='[food_banks_USA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Organization' ordinal='0' />
              <column datatype='string' name='Address' ordinal='1' />
              <column datatype='string' name='City' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='zipcode' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018state.csv' table='[MMG2020_2018state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='State Name' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='real' name='2018 Food Insecurity Rate' ordinal='3' />
              <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
              <column datatype='real' name='Low Threshold in state' ordinal='5' />
              <column datatype='string' name='Low Threshold Type' ordinal='6' />
              <column datatype='real' name='High Threshold in state' ordinal='7' />
              <column datatype='string' name='High Threshold Type' ordinal='8' />
              <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
              <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
              <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
              <column datatype='real' name='2018 Child Food Insecurity Rate' ordinal='12' />
              <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
              <column datatype='real' name='% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016' ordinal='14' />
              <column datatype='real' name='% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016' ordinal='15' />
              <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
              <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='County, State' ordinal='2' />
              <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
              <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
              <column datatype='real' name='Low Threshold in state' ordinal='5' />
              <column datatype='string' name='Low Threshold Type' ordinal='6' />
              <column datatype='real' name='High Threshold in state' ordinal='7' />
              <column datatype='string' name='High Threshold Type' ordinal='8' />
              <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
              <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
              <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
              <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
              <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
              <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
              <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
              <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
              <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1kd29ao0d5cczz0zwx9790l7a5o3' name='child_poverty_18.csv' table='[child_poverty_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='string' name='dataform' ordinal='2' />
              <column datatype='real' name='amount' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1268ntb0mx7nlo1bavmf70arbk3z' name='child_public_asst_18.csv' table='[child_public_asst_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='amount' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.10djsbc144a22s12ismq50nnsd9r' name='fb_per100000.csv' table='[fb_per100000#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state_ab' ordinal='0' />
              <column datatype='integer' name='pop' ordinal='1' />
              <column datatype='integer' name='num_foodbanks' ordinal='2' />
              <column datatype='real' name='food_banks_per_100000' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0yr55cu1lrxejt19knwo01wvbphj' name='fi_rates_5yr.csv' table='[fi_rates_5yr#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state_name' ordinal='0' />
              <column datatype='real' name='fi_18' ordinal='1' />
              <column datatype='real' name='fi_17' ordinal='2' />
              <column datatype='real' name='fi_16' ordinal='3' />
              <column datatype='real' name='fi_15' ordinal='4' />
              <column datatype='real' name='fi_14' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.187vbbv0393s1b14vpfnz0jrf6vh' name='financials_18.csv' table='[financials_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='weighted_annual_dollars' ordinal='1' />
              <column datatype='real' name='dollars_waste' ordinal='2' />
              <column datatype='integer' name='income' ordinal='3' />
              <column datatype='real' name='perc_waste' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.19c1y8q1wbp0o216mjkch0rz3raa' name='grant_allocation.csv' table='[grant_allocation#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='non_medicaid_dollar' ordinal='1' />
              <column datatype='real' name='non_medicaid_per_capita' ordinal='2' />
              <column datatype='real' name='non_medicaid_pc_percent_us' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0b85csq0g8nusr100fwjg16xz00x' name='medb.csv' table='[medb#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='real' name='1 or more reported MEDB problems' ordinal='1' />
              <column datatype='real' name='no medb problems' ordinal='2' />
              <column datatype='integer' name='F4' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1by0ali063vpph1ddombw120mxmp' name='physical health.csv' table='[physical health#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='STATE' ordinal='0' />
              <column datatype='real' name='Excellent or Very Good' ordinal='1' />
              <column datatype='real' name='Good' ordinal='2' />
              <column datatype='real' name='Fair or Poor' ordinal='3' />
              <column datatype='integer' name='Total' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1hgom7b1qcxro3156l2100wntaei' name='waste_donate_percent.csv' table='[waste_donate_percent#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='tons_surplus' ordinal='1' />
              <column datatype='real' name='dollars_surplus' ordinal='2' />
              <column datatype='real' name='tons_waste' ordinal='3' />
              <column datatype='real' name='tons_donated' ordinal='4' />
              <column datatype='real' name='dollars_per_ton' ordinal='5' />
              <column datatype='real' name='dollars_donated' ordinal='6' />
              <column datatype='real' name='dollars_waste' ordinal='7' />
              <column datatype='real' name='waste_to_surplus_percent' ordinal='8' />
              <column datatype='real' name='donation_to_surplus_percent' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[# of Food Insecure Children in 2018]' />
          <map key='[# of Food Insecure Children in 2018]' value='[MMG2020_2018state.csv].[# of Food Insecure Children in 2018]' />
          <map key='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[# of Food Insecure Persons in 2018]' />
          <map key='[# of Food Insecure Persons in 2018]' value='[MMG2020_2018state.csv].[# of Food Insecure Persons in 2018]' />
          <map key='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI &gt; High Threshold]' />
          <map key='[% FI &gt; High Threshold]' value='[MMG2020_2018state.csv].[% FI &gt; High Threshold]' />
          <map key='[% FI ? Low Threshold (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI ? Low Threshold]' />
          <map key='[% FI ? Low Threshold]' value='[MMG2020_2018state.csv].[% FI ? Low Threshold]' />
          <map key='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI Btwn Thresholds]' />
          <map key='[% FI Btwn Thresholds]' value='[MMG2020_2018state.csv].[% FI Btwn Thresholds]' />
          <map key='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' value='[MMG2020_2018state.csv].[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' />
          <map key='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' value='[MMG2020_2018state.csv].[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' />
          <map key='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' value='[MMG2020_2018county.csv].[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' />
          <map key='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' value='[MMG2020_2018county.csv].[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' />
          <map key='[1 or more reported MEDB problems]' value='[medb.csv].[1 or more reported MEDB problems]' />
          <map key='[2018 Child Food Insecurity Rate]' value='[MMG2020_2018state.csv].[2018 Child Food Insecurity Rate]' />
          <map key='[2018 Child food insecurity rate]' value='[MMG2020_2018county.csv].[2018 Child food insecurity rate]' />
          <map key='[2018 Cost Per Meal (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Cost Per Meal]' />
          <map key='[2018 Cost Per Meal]' value='[MMG2020_2018state.csv].[2018 Cost Per Meal]' />
          <map key='[2018 Food Insecurity Rate (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Food Insecurity Rate]' />
          <map key='[2018 Food Insecurity Rate]' value='[MMG2020_2018state.csv].[2018 Food Insecurity Rate]' />
          <map key='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Weighted Annual Food Budget Shortfall]' />
          <map key='[2018 Weighted Annual Food Budget Shortfall]' value='[MMG2020_2018state.csv].[2018 Weighted Annual Food Budget Shortfall]' />
          <map key='[Address]' value='[food_banks_USA.csv].[Address]' />
          <map key='[City]' value='[food_banks_USA.csv].[City]' />
          <map key='[County, State]' value='[MMG2020_2018county.csv].[County, State]' />
          <map key='[Excellent or Very Good]' value='[physical health.csv].[Excellent or Very Good]' />
          <map key='[F4]' value='[medb.csv].[F4]' />
          <map key='[FIPS (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[FIPS]' />
          <map key='[FIPS]' value='[MMG2020_2018state.csv].[FIPS]' />
          <map key='[Fair or Poor]' value='[physical health.csv].[Fair or Poor]' />
          <map key='[Good]' value='[physical health.csv].[Good]' />
          <map key='[High Threshold Type (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[High Threshold Type]' />
          <map key='[High Threshold Type]' value='[MMG2020_2018state.csv].[High Threshold Type]' />
          <map key='[High Threshold in state (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[High Threshold in state]' />
          <map key='[High Threshold in state]' value='[MMG2020_2018state.csv].[High Threshold in state]' />
          <map key='[Low Threshold Type (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[Low Threshold Type]' />
          <map key='[Low Threshold Type]' value='[MMG2020_2018state.csv].[Low Threshold Type]' />
          <map key='[Low Threshold in state (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[Low Threshold in state]' />
          <map key='[Low Threshold in state]' value='[MMG2020_2018state.csv].[Low Threshold in state]' />
          <map key='[Organization]' value='[food_banks_USA.csv].[Organization]' />
          <map key='[STATE]' value='[physical health.csv].[STATE]' />
          <map key='[State (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[State]' />
          <map key='[State (medb.csv)]' value='[medb.csv].[State]' />
          <map key='[State Name]' value='[MMG2020_2018state.csv].[State Name]' />
          <map key='[State]' value='[MMG2020_2018state.csv].[State]' />
          <map key='[Total]' value='[physical health.csv].[Total]' />
          <map key='[amount (child_public_asst_18.csv)]' value='[child_public_asst_18.csv].[amount]' />
          <map key='[amount]' value='[child_poverty_18.csv].[amount]' />
          <map key='[dataform]' value='[child_poverty_18.csv].[dataform]' />
          <map key='[dollars_donated]' value='[waste_donate_percent.csv].[dollars_donated]' />
          <map key='[dollars_per_ton]' value='[waste_donate_percent.csv].[dollars_per_ton]' />
          <map key='[dollars_surplus]' value='[waste_donate_percent.csv].[dollars_surplus]' />
          <map key='[dollars_waste (waste_donate_percent.csv)]' value='[waste_donate_percent.csv].[dollars_waste]' />
          <map key='[dollars_waste]' value='[financials_18.csv].[dollars_waste]' />
          <map key='[donation_to_surplus_percent]' value='[waste_donate_percent.csv].[donation_to_surplus_percent]' />
          <map key='[fi_14]' value='[fi_rates_5yr.csv].[fi_14]' />
          <map key='[fi_15]' value='[fi_rates_5yr.csv].[fi_15]' />
          <map key='[fi_16]' value='[fi_rates_5yr.csv].[fi_16]' />
          <map key='[fi_17]' value='[fi_rates_5yr.csv].[fi_17]' />
          <map key='[fi_18]' value='[fi_rates_5yr.csv].[fi_18]' />
          <map key='[food_banks_per_100000]' value='[fb_per100000.csv].[food_banks_per_100000]' />
          <map key='[income]' value='[financials_18.csv].[income]' />
          <map key='[no medb problems]' value='[medb.csv].[no medb problems]' />
          <map key='[non_medicaid_dollar]' value='[grant_allocation.csv].[non_medicaid_dollar]' />
          <map key='[non_medicaid_pc_percent_us]' value='[grant_allocation.csv].[non_medicaid_pc_percent_us]' />
          <map key='[non_medicaid_per_capita]' value='[grant_allocation.csv].[non_medicaid_per_capita]' />
          <map key='[num_foodbanks]' value='[fb_per100000.csv].[num_foodbanks]' />
          <map key='[perc_waste]' value='[financials_18.csv].[perc_waste]' />
          <map key='[pop]' value='[fb_per100000.csv].[pop]' />
          <map key='[state (child_poverty_18.csv)]' value='[child_poverty_18.csv].[state]' />
          <map key='[state (child_public_asst_18.csv)]' value='[child_public_asst_18.csv].[state]' />
          <map key='[state (financials_18.csv)]' value='[financials_18.csv].[state]' />
          <map key='[state (grant_allocation.csv)]' value='[grant_allocation.csv].[state]' />
          <map key='[state (waste_donate_percent.csv)]' value='[waste_donate_percent.csv].[state]' />
          <map key='[state]' value='[food_banks_USA.csv].[state]' />
          <map key='[state_ab]' value='[fb_per100000.csv].[state_ab]' />
          <map key='[state_name]' value='[fi_rates_5yr.csv].[state_name]' />
          <map key='[tons_donated]' value='[waste_donate_percent.csv].[tons_donated]' />
          <map key='[tons_surplus]' value='[waste_donate_percent.csv].[tons_surplus]' />
          <map key='[tons_waste]' value='[waste_donate_percent.csv].[tons_waste]' />
          <map key='[waste_to_surplus_percent]' value='[waste_donate_percent.csv].[waste_to_surplus_percent]' />
          <map key='[weighted_annual_dollars]' value='[financials_18.csv].[weighted_annual_dollars]' />
          <map key='[year (child_poverty_18.csv)]' value='[child_poverty_18.csv].[year]' />
          <map key='[zipcode]' value='[food_banks_USA.csv].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child_public_asst_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fb_per100000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[grant_allocation.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[medb.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[physical health.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Organization</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Organization]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>Organization</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Food Insecurity Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Food Insecurity Rate]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Food Insecurity Rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Persons in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Persons in 2018]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias># of Food Insecure Persons in 2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low Threshold in state]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>Low Threshold in state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Low Threshold Type]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>Low Threshold Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High Threshold in state]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>High Threshold in state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High Threshold Type]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>High Threshold Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI ? Low Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI ? Low Threshold]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI ? Low Threshold</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI Btwn Thresholds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI Btwn Thresholds]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI Btwn Thresholds</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI &gt; High Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI &gt; High Threshold]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI &gt; High Threshold</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Child Food Insecurity Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Child Food Insecurity Rate]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Child Food Insecurity Rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Children in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Children in 2018]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias># of Food Insecure Children in 2018</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Cost Per Meal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Cost Per Meal]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Cost Per Meal</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Weighted Annual Food Budget Shortfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Weighted Annual Food Budget Shortfall]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Weighted Annual Food Budget Shortfall</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County, State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County, State]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>County, State</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Food Insecurity Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2018 Food Insecurity Rate (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Food Insecurity Rate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Persons in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias># of Food Insecure Persons in 2018</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low Threshold in state (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>Low Threshold in state</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Low Threshold Type (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>Low Threshold Type</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High Threshold in state (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>High Threshold in state</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High Threshold Type (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>High Threshold Type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI ? Low Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI ? Low Threshold (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI ? Low Threshold</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI Btwn Thresholds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI Btwn Thresholds (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI Btwn Thresholds</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI &gt; High Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI &gt; High Threshold (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI &gt; High Threshold</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Child food insecurity rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Child food insecurity rate]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Child food insecurity rate</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Children in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias># of Food Insecure Children in 2018</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure children in HH w/ HH incomes below 185 FPL in 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% food insecure children in HH w/ HH incomes below 185 FPL in 2018</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure children in HH w/ HH incomes above 185 FPL in 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% food insecure children in HH w/ HH incomes above 185 FPL in 2018</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Cost Per Meal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Cost Per Meal (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Cost Per Meal</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Weighted Annual Food Budget Shortfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Weighted Annual Food Budget Shortfall</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (child_poverty_18.csv)]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (child_poverty_18.csv)]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dataform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dataform]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>dataform</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[amount]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>amount</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (child_public_asst_18.csv)]</local-name>
            <parent-name>[child_public_asst_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_public_asst_18.csv_73211EF64D1F4E4F9C8354183BD9C047]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[amount (child_public_asst_18.csv)]</local-name>
            <parent-name>[child_public_asst_18.csv]</parent-name>
            <remote-alias>amount</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_public_asst_18.csv_73211EF64D1F4E4F9C8354183BD9C047]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_ab</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_ab]</local-name>
            <parent-name>[fb_per100000.csv]</parent-name>
            <remote-alias>state_ab</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[fb_per100000.csv]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_foodbanks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_foodbanks]</local-name>
            <parent-name>[fb_per100000.csv]</parent-name>
            <remote-alias>num_foodbanks</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_banks_per_100000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[food_banks_per_100000]</local-name>
            <parent-name>[fb_per100000.csv]</parent-name>
            <remote-alias>food_banks_per_100000</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_18]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_18</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_17]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_17</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_16]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_16</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_15]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_15</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_14]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_14</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (financials_18.csv)]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weighted_annual_dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weighted_annual_dollars]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>weighted_annual_dollars</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_waste]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>dollars_waste</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_waste]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>perc_waste</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (grant_allocation.csv)]</local-name>
            <parent-name>[grant_allocation.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_medicaid_dollar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_medicaid_dollar]</local-name>
            <parent-name>[grant_allocation.csv]</parent-name>
            <remote-alias>non_medicaid_dollar</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_medicaid_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_medicaid_per_capita]</local-name>
            <parent-name>[grant_allocation.csv]</parent-name>
            <remote-alias>non_medicaid_per_capita</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_medicaid_pc_percent_us</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_medicaid_pc_percent_us]</local-name>
            <parent-name>[grant_allocation.csv]</parent-name>
            <remote-alias>non_medicaid_pc_percent_us</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (medb.csv)]</local-name>
            <parent-name>[medb.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[medb.csv_5CBD385CB3504E5193237BC2ED129B73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 or more reported MEDB problems</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 or more reported MEDB problems]</local-name>
            <parent-name>[medb.csv]</parent-name>
            <remote-alias>1 or more reported MEDB problems</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[medb.csv_5CBD385CB3504E5193237BC2ED129B73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no medb problems</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no medb problems]</local-name>
            <parent-name>[medb.csv]</parent-name>
            <remote-alias>no medb problems</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[medb.csv_5CBD385CB3504E5193237BC2ED129B73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[medb.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[medb.csv_5CBD385CB3504E5193237BC2ED129B73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[physical health.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physical health.csv_38B906642E1C426797BD5D6DFC845F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excellent or Very Good</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Excellent or Very Good]</local-name>
            <parent-name>[physical health.csv]</parent-name>
            <remote-alias>Excellent or Very Good</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physical health.csv_38B906642E1C426797BD5D6DFC845F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Good</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Good]</local-name>
            <parent-name>[physical health.csv]</parent-name>
            <remote-alias>Good</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physical health.csv_38B906642E1C426797BD5D6DFC845F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fair or Poor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fair or Poor]</local-name>
            <parent-name>[physical health.csv]</parent-name>
            <remote-alias>Fair or Poor</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physical health.csv_38B906642E1C426797BD5D6DFC845F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[physical health.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physical health.csv_38B906642E1C426797BD5D6DFC845F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (waste_donate_percent.csv)]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tons_surplus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tons_surplus]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>tons_surplus</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_surplus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_surplus]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>dollars_surplus</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tons_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tons_waste]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>tons_waste</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tons_donated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tons_donated]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>tons_donated</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_per_ton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_per_ton]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>dollars_per_ton</remote-alias>
            <ordinal>80</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_donated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_donated]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>dollars_donated</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_waste (waste_donate_percent.csv)]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>dollars_waste</remote-alias>
            <ordinal>82</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>waste_to_surplus_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[waste_to_surplus_percent]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>waste_to_surplus_percent</remote-alias>
            <ordinal>83</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>donation_to_surplus_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[donation_to_surplus_percent]</local-name>
            <parent-name>[waste_donate_percent.csv]</parent-name>
            <remote-alias>donation_to_surplus_percent</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# of Food Insecure Children in 2018 (MMG2020 2018county.csv)' datatype='integer' name='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[# of Food Insecure Children in 2018]' role='measure' type='quantitative' />
      <column caption='# of Food Insecure Persons in 2018 (MMG2020 2018county.csv)' datatype='integer' name='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[# of Food Insecure Persons in 2018]' role='measure' type='quantitative' />
      <column caption='% FI &gt; High Threshold (MMG2020 2018county.csv)' datatype='real' name='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI &gt; High Threshold]' role='measure' type='quantitative' />
      <column caption='% FI ? Low Threshold (MMG2020 2018county.csv)' datatype='real' name='[% FI ? Low Threshold (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI ? Low Threshold]' role='measure' type='quantitative' />
      <column caption='% FI Btwn Thresholds (MMG2020 2018county.csv)' datatype='real' name='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI Btwn Thresholds]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[1 or more reported MEDB problems]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
      <column caption='2018 Cost Per Meal (MMG2020 2018county.csv)' datatype='real' name='[2018 Cost Per Meal (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Cost Per Meal]' role='measure' type='quantitative' />
      <column caption='2018 Food Insecurity Rate (MMG2020 2018county.csv)' datatype='string' name='[2018 Food Insecurity Rate (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[2018 Food Insecurity Rate]' role='measure' type='quantitative' />
      <column caption='2018 Weighted Annual Food Budget Shortfall (MMG2020 2018county.csv)' datatype='real' name='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Weighted Annual Food Budget Shortfall]' role='measure' type='quantitative' />
      <column datatype='string' name='[Address]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([child_fi_rate])) / LOOKUP(ZN(SUM([child_fi_rate])), -1)'>
          <table-calc ordering-field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[location]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[County, State - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
      </column>
      <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[Excellent or Very Good]' role='measure' type='quantitative' />
      <column caption='FIPS (MMG2020 2018county.csv)' datatype='integer' name='[FIPS (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column datatype='real' name='[Fair or Poor]' role='measure' type='quantitative' />
      <column datatype='real' name='[Good]' role='measure' type='quantitative' />
      <column caption='High Threshold Type (MMG2020 2018county.csv)' datatype='string' name='[High Threshold Type (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='High Threshold in state (MMG2020 2018county.csv)' datatype='real' name='[High Threshold in state (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[High Threshold in state]' role='measure' type='quantitative' />
      <column caption='Low Threshold Type (MMG2020 2018county.csv)' datatype='string' name='[Low Threshold Type (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Low Threshold in state (MMG2020 2018county.csv)' datatype='real' name='[Low Threshold in state (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low Threshold in state]' role='measure' type='quantitative' />
      <column caption='State2' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (MMG2020 2018county.csv)' datatype='string' name='[State (MMG2020_2018county.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (medb.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='MMG2020_2018county.csv' datatype='table' name='[__tableau_internal_object_id__].[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='MMG2020_2018state.csv' datatype='table' name='[__tableau_internal_object_id__].[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child_poverty_18.csv' datatype='table' name='[__tableau_internal_object_id__].[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child_public_asst_18.csv' datatype='table' name='[__tableau_internal_object_id__].[child_public_asst_18.csv_73211EF64D1F4E4F9C8354183BD9C047]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fb_per100000.csv' datatype='table' name='[__tableau_internal_object_id__].[fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fi_rates_5yr.csv' datatype='table' name='[__tableau_internal_object_id__].[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='financials_18.csv' datatype='table' name='[__tableau_internal_object_id__].[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='grant_allocation.csv' datatype='table' name='[__tableau_internal_object_id__].[grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='medb.csv' datatype='table' name='[__tableau_internal_object_id__].[medb.csv_5CBD385CB3504E5193237BC2ED129B73]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='physical health.csv' datatype='table' name='[__tableau_internal_object_id__].[physical health.csv_38B906642E1C426797BD5D6DFC845F00]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='waste_donate_percent.csv' datatype='table' name='[__tableau_internal_object_id__].[waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96]' role='measure' type='quantitative' />
      <column caption='Amount (Child Public Asst 18.Csv)' datatype='real' name='[amount (child_public_asst_18.csv)]' role='measure' type='quantitative' />
      <column caption='% Children in Poverty' datatype='real' name='[amount]' role='measure' type='quantitative' />
      <column caption='Dataform' datatype='string' name='[dataform]' role='dimension' type='nominal' />
      <column caption='Dollars Donated' datatype='real' name='[dollars_donated]' role='measure' type='quantitative' />
      <column caption='Dollars Per Ton' datatype='real' name='[dollars_per_ton]' role='measure' type='quantitative' />
      <column caption='Dollars Surplus' datatype='real' name='[dollars_surplus]' role='measure' type='quantitative' />
      <column caption='Dollars Waste (Waste Donate Percent.Csv)' datatype='real' name='[dollars_waste (waste_donate_percent.csv)]' role='measure' type='quantitative' />
      <column caption='Dollars Waste' datatype='real' name='[dollars_waste]' role='measure' type='quantitative' />
      <column caption='Donation To Surplus Percent' datatype='real' name='[donation_to_surplus_percent]' role='measure' type='quantitative' />
      <column caption='Fi 14' datatype='real' name='[fi_14]' role='measure' type='quantitative' />
      <column caption='Fi 15' datatype='real' name='[fi_15]' role='measure' type='quantitative' />
      <column caption='Fi 16' datatype='real' name='[fi_16]' role='measure' type='quantitative' />
      <column caption='Fi 17' datatype='real' name='[fi_17]' role='measure' type='quantitative' />
      <column caption='Fi 18' datatype='real' name='[fi_18]' role='measure' type='quantitative' />
      <column caption='Food Banks Per 100000' datatype='real' name='[food_banks_per_100000]' role='measure' type='quantitative' />
      <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column caption='No Medb Problems' datatype='real' name='[no medb problems]' role='measure' type='quantitative' />
      <column caption='Non Medicaid Dollar' datatype='real' name='[non_medicaid_dollar]' role='measure' type='quantitative' />
      <column caption='Non Medicaid Pc Percent Us' datatype='real' name='[non_medicaid_pc_percent_us]' role='measure' type='quantitative' />
      <column caption='Non Medicaid Per Capita' datatype='real' name='[non_medicaid_per_capita]' role='measure' type='quantitative' />
      <column caption='Num Foodbanks' datatype='integer' name='[num_foodbanks]' role='measure' type='quantitative' />
      <column caption='Perc Waste' datatype='real' name='[perc_waste]' role='measure' type='quantitative' />
      <column caption='Pop' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='State (Child Poverty 18.Csv)' datatype='string' name='[state (child_poverty_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Child Public Asst 18.Csv)' datatype='string' name='[state (child_public_asst_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Financials 18.Csv)' datatype='string' name='[state (financials_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Grant Allocation.Csv)' datatype='string' name='[state (grant_allocation.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Waste Donate Percent.Csv)' datatype='string' name='[state (waste_donate_percent.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AK&quot;' value='Alaska' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;DE&quot;' value='Delaware' />
          <alias key='&quot;MS&quot;' value='Mississippi' />
          <alias key='&quot;ND&quot;' value='North Dakota' />
          <alias key='&quot;NE&quot;' value='Nebraska' />
          <alias key='&quot;NV&quot;' value='Nevada' />
          <alias key='&quot;RI&quot;' value='Rhode Island' />
          <alias key='&quot;VT&quot;' value='Vermont' />
          <alias key='&quot;WY&quot;' value='Wyoming' />
        </aliases>
      </column>
      <column caption='State Ab' datatype='string' name='[state_ab]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name1' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tons Donated' datatype='real' name='[tons_donated]' role='measure' type='quantitative' />
      <column caption='Tons Surplus' datatype='real' name='[tons_surplus]' role='measure' type='quantitative' />
      <column caption='Tons Waste' datatype='real' name='[tons_waste]' role='measure' type='quantitative' />
      <column caption='Waste To Surplus Percent' datatype='real' name='[waste_to_surplus_percent]' role='measure' type='quantitative' />
      <column caption='Weighted Annual Dollars' datatype='real' name='[weighted_annual_dollars]' role='measure' type='quantitative' />
      <column caption='Year (Child Poverty 18.Csv)' datatype='integer' name='[year (child_poverty_18.csv)]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='Attribute' name='[attr:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[top fi set]' derivation='InOut' name='[io:top fi set:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[fi_14]' derivation='None' name='[none:fi_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_15]' derivation='None' name='[none:fi_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:# of Food Insecure Children in 2018 (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Children in 2018]' derivation='Sum' name='[sum:# of Food Insecure Children in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:# of Food Insecure Persons in 2018 (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Persons in 2018]' derivation='Sum' name='[sum:# of Food Insecure Persons in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI &gt; High Threshold (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI &gt; High Threshold]' derivation='Sum' name='[sum:% FI &gt; High Threshold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI ? Low Threshold (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI ? Low Threshold (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI ? Low Threshold]' derivation='Sum' name='[sum:% FI ? Low Threshold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI Btwn Thresholds (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI Btwn Thresholds]' derivation='Sum' name='[sum:% FI Btwn Thresholds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' derivation='Sum' name='[sum:% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' derivation='Sum' name='[sum:% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' derivation='Sum' name='[sum:% food insecure children in HH w/ HH incomes above 185 FPL in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' derivation='Sum' name='[sum:% food insecure children in HH w/ HH incomes below 185 FPL in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 or more reported MEDB problems]' derivation='Sum' name='[sum:1 or more reported MEDB problems:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Cost Per Meal (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:2018 Cost Per Meal (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Cost Per Meal]' derivation='Sum' name='[sum:2018 Cost Per Meal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Weighted Annual Food Budget Shortfall]' derivation='Sum' name='[sum:2018 Weighted Annual Food Budget Shortfall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Excellent or Very Good]' derivation='Sum' name='[sum:Excellent or Very Good:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:FIPS (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS]' derivation='Sum' name='[sum:FIPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fair or Poor]' derivation='Sum' name='[sum:Fair or Poor:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Good]' derivation='Sum' name='[sum:Good:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Threshold in state (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:High Threshold in state (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Threshold in state]' derivation='Sum' name='[sum:High Threshold in state:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low Threshold in state (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:Low Threshold in state (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low Threshold in state]' derivation='Sum' name='[sum:Low Threshold in state:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dollars_waste]' derivation='Sum' name='[sum:dollars_waste:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_14]' derivation='Sum' name='[sum:fi_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_15]' derivation='Sum' name='[sum:fi_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_16]' derivation='Sum' name='[sum:fi_16:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_17]' derivation='Sum' name='[sum:fi_17:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_18]' derivation='Sum' name='[sum:fi_18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weighted_annual_dollars]' derivation='Sum' name='[sum:weighted_annual_dollars:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[location]' ordering-type='Field' />
      </column-instance>
      <group caption='Action (County,full state)' hidden='true' name='[Action (County,full state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County, State - Split 1]' />
          <groupfilter function='level-members' level='[County, State - Split 2]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (State Name)' hidden='true' name='[Action (State Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State Name]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State,Zipcode)' hidden='true' name='[Action (State,Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='level-members' level='[zipcode]' />
        </groupfilter>
      </group>
      <group caption='top fi Set' name='[top fi Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[none:STATE:nk]' member='&quot;West Virginia&quot;' />
        </groupfilter>
      </group>
      <group caption='top fi set' name='[top fi set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[none:State Name:nk]' member='&quot;West Virginia&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.832468' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.167532' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>%null%</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:2018 Child food insecurity rate:ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>4.4640000000000004</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>4.6690000000000005</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>4.9249999999999989</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>5.6490000000000018</bucket>
            </map>
            <map to='#af123a'>
              <bucket>3.6649999999999996</bucket>
            </map>
            <map to='#af123a'>
              <bucket>3.9140000000000006</bucket>
            </map>
            <map to='#af123a'>
              <bucket>4.4169999999999998</bucket>
            </map>
            <map to='#b0123a'>
              <bucket>3.5490000000000004</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>3.2599999999999998</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>3.3519999999999999</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>2.7939999999999996</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>3.0939999999999999</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>3.2140000000000004</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>2.5380000000000003</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>2.5749999999999997</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>2.399</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.2880000000000003</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.3310000000000004</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.3450000000000002</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2200000000000002</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2469999999999999</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2549999999999999</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1430000000000002</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1440000000000001</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1850000000000001</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.1120000000000001</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.125</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.1309999999999998</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>2.1099999999999999</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>1.964</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>1.9909999999999997</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.853</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.8719999999999999</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.9550000000000001</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>1.7810000000000001</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>1.8029999999999999</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>1.7690000000000001</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.599</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.649</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.73</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.5429999999999999</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.5509999999999999</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.575</bucket>
            </map>
            <map to='#bc173a'>
              <bucket>1.5410000000000001</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>1.5230000000000001</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>1.5339999999999998</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.5</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.5069999999999999</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.512</bucket>
            </map>
            <map to='#be183a'>
              <bucket>1.4749999999999996</bucket>
            </map>
            <map to='#be183a'>
              <bucket>1.478</bucket>
            </map>
            <map to='#be193a'>
              <bucket>1.4699999999999998</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.407</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.4329999999999998</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.462</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3180000000000003</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3320000000000001</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3500000000000001</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.2589999999999999</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.2670000000000001</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.274</bucket>
            </map>
            <map to='#c21a3b'>
              <bucket>1.2249999999999999</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.165</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.2120000000000002</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.22</bucket>
            </map>
            <map to='#c31b3b'>
              <bucket>1.161</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>1.0980000000000001</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>1.1150000000000002</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>1.0600000000000001</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>1.0680000000000001</bucket>
            </map>
            <map to='#c41d3b'>
              <bucket>1.054</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.0249999999999999</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.032</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.0410000000000001</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>1.01</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.97199999999999998</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.99399999999999999</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.998</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.92900000000000005</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.93400000000000005</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.93799999999999994</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.96999999999999997</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92000000000000004</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92100000000000004</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92799999999999994</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>0.89900000000000002</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>0.90600000000000003</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>0.88900000000000001</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.84899999999999998</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.8650000000000001</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.86799999999999999</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>0.84700000000000009</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83400000000000007</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83699999999999997</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83700000000000019</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.81699999999999995</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.82000000000000006</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.82799999999999996</bucket>
            </map>
            <map to='#cd233c'>
              <bucket>0.81400000000000006</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.80400000000000005</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.80699999999999994</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.81000000000000005</bucket>
            </map>
            <map to='#ce243c'>
              <bucket>0.79400000000000004</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>0.78600000000000003</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>0.78800000000000003</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>0.78400000000000014</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>0.78499999999999992</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>0.77700000000000002</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>0.78299999999999992</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>0.74800000000000011</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>0.749</bucket>
            </map>
            <map to='#d0273c'>
              <bucket>0.71900000000000008</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.70799999999999996</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.70999999999999996</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.71899999999999997</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.68199999999999994</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.68300000000000005</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.69299999999999995</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.70299999999999985</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67600000000000005</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67800000000000005</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67900000000000005</bucket>
            </map>
            <map to='#d32a3d'>
              <bucket>0.67399999999999993</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.66499999999999992</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.66500000000000004</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.67200000000000004</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>0.66100000000000003</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>0.66200000000000003</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>0.65799999999999992</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>0.65999999999999992</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>0.63100000000000001</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>0.63900000000000001</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>0.626</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.61599999999999999</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.62</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.621</bucket>
            </map>
            <map to='#d72d3e'>
              <bucket>0.60699999999999998</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.59900000000000009</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.60199999999999998</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.60499999999999998</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.57700000000000007</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.58299999999999996</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.58399999999999996</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.59599999999999997</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57099999999999995</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57499999999999996</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57600000000000007</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57699999999999996</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.56899999999999995</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.56999999999999995</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.57000000000000006</bucket>
            </map>
            <map to='#da323f'>
              <bucket>0.56400000000000006</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.55999999999999994</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.56299999999999994</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.56399999999999995</bucket>
            </map>
            <map to='#db333f'>
              <bucket>0.55700000000000005</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>0.55100000000000005</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>0.55499999999999994</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>0.54600000000000004</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>0.55000000000000004</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>0.53900000000000003</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>0.54299999999999993</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>0.53300000000000003</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>0.53800000000000003</bucket>
            </map>
            <map to='#de3540'>
              <bucket>0.52400000000000002</bucket>
            </map>
            <map to='#de3540'>
              <bucket>0.53200000000000003</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51500000000000001</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51600000000000001</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51800000000000002</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.50600000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.50900000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.51100000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.5149999999999999</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.501</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.502</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.504</bucket>
            </map>
            <map to='#e03941'>
              <bucket>0.49900000000000005</bucket>
            </map>
            <map to='#e03941'>
              <bucket>0.5</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.495</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.498</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.499</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>0.49199999999999999</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>0.49299999999999999</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>0.49099999999999999</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48700000000000004</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48799999999999999</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48899999999999999</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>0.48500000000000004</bucket>
            </map>
            <map to='#e33d42'>
              <bucket>0.48499999999999999</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>0.48199999999999998</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47300000000000003</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47499999999999998</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47700000000000004</bucket>
            </map>
            <map to='#e33f43'>
              <bucket>0.47299999999999998</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>0.46999999999999997</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>0.47000000000000003</bucket>
            </map>
            <map to='#e44043'>
              <bucket>0.46800000000000003</bucket>
            </map>
            <map to='#e44044'>
              <bucket>0.46599999999999997</bucket>
            </map>
            <map to='#e44044'>
              <bucket>0.46699999999999997</bucket>
            </map>
            <map to='#e54144'>
              <bucket>0.46199999999999997</bucket>
            </map>
            <map to='#e54144'>
              <bucket>0.46299999999999997</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45799999999999996</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45900000000000007</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45999999999999996</bucket>
            </map>
            <map to='#e64344'>
              <bucket>0.45700000000000007</bucket>
            </map>
            <map to='#e64345'>
              <bucket>0.45500000000000002</bucket>
            </map>
            <map to='#e64345'>
              <bucket>0.45599999999999996</bucket>
            </map>
            <map to='#e64445'>
              <bucket>0.44999999999999996</bucket>
            </map>
            <map to='#e64445'>
              <bucket>0.45200000000000001</bucket>
            </map>
            <map to='#e74445'>
              <bucket>0.44800000000000006</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44599999999999995</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44700000000000001</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44800000000000001</bucket>
            </map>
            <map to='#e74645'>
              <bucket>0.44400000000000006</bucket>
            </map>
            <map to='#e84646'>
              <bucket>0.439</bucket>
            </map>
            <map to='#e84646'>
              <bucket>0.442</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.43700000000000006</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.43799999999999994</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.438</bucket>
            </map>
            <map to='#e84846'>
              <bucket>0.437</bucket>
            </map>
            <map to='#e94846'>
              <bucket>0.435</bucket>
            </map>
            <map to='#e94946'>
              <bucket>0.43400000000000005</bucket>
            </map>
            <map to='#e94947'>
              <bucket>0.43300000000000005</bucket>
            </map>
            <map to='#e94947'>
              <bucket>0.434</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>0.43200000000000005</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>0.43099999999999999</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>0.432</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42600000000000005</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42799999999999994</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42999999999999999</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42399999999999999</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42400000000000004</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42499999999999999</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>0.42099999999999993</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>0.42200000000000004</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>0.41699999999999998</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>0.42000000000000004</bucket>
            </map>
            <map to='#eb4e49'>
              <bucket>0.41699999999999993</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41199999999999998</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41400000000000003</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41500000000000004</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>0.40700000000000003</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>0.41100000000000003</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>0.40699999999999997</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>0.40400000000000003</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>0.40600000000000003</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>0.40300000000000002</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>0.40399999999999997</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39700000000000002</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39799999999999996</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39900000000000002</bucket>
            </map>
            <map to='#ed544a'>
              <bucket>0.39600000000000002</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>0.39300000000000002</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>0.39500000000000002</bucket>
            </map>
            <map to='#ed554b'>
              <bucket>0.39200000000000002</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>0.39000000000000001</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38799999999999996</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38800000000000001</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38900000000000001</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>0.38600000000000001</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>0.38700000000000001</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>0.38200000000000001</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>0.38400000000000001</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>0.38100000000000001</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>0.376</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>0.378</bucket>
            </map>
            <map to='#ef594d'>
              <bucket>0.375</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>0.373</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>0.374</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>0.36799999999999999</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>0.371</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>0.36600000000000005</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>0.36599999999999999</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>0.36499999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36299999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36399999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36400000000000005</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>0.35999999999999999</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>0.36199999999999999</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>0.35899999999999999</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>0.35699999999999998</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>0.35799999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35299999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35399999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35499999999999998</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>0.34999999999999998</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>0.35199999999999998</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34499999999999997</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34599999999999997</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34799999999999998</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34899999999999998</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34100000000000003</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34199999999999997</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34200000000000003</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33700000000000002</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33800000000000002</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33899999999999997</bucket>
            </map>
            <map to='#f26552'>
              <bucket>0.33699999999999997</bucket>
            </map>
            <map to='#f26553'>
              <bucket>0.33399999999999996</bucket>
            </map>
            <map to='#f26553'>
              <bucket>0.33400000000000002</bucket>
            </map>
            <map to='#f26653'>
              <bucket>0.33200000000000002</bucket>
            </map>
            <map to='#f26654'>
              <bucket>0.33100000000000002</bucket>
            </map>
            <map to='#f36654'>
              <bucket>0.33099999999999996</bucket>
            </map>
            <map to='#f36754'>
              <bucket>0.32900000000000001</bucket>
            </map>
            <map to='#f36755'>
              <bucket>0.32700000000000001</bucket>
            </map>
            <map to='#f36755'>
              <bucket>0.32899999999999996</bucket>
            </map>
            <map to='#f36855'>
              <bucket>0.32500000000000001</bucket>
            </map>
            <map to='#f36855'>
              <bucket>0.32600000000000001</bucket>
            </map>
            <map to='#f36856'>
              <bucket>0.32400000000000001</bucket>
            </map>
            <map to='#f36956'>
              <bucket>0.32200000000000001</bucket>
            </map>
            <map to='#f36956'>
              <bucket>0.32299999999999995</bucket>
            </map>
            <map to='#f36957'>
              <bucket>0.32199999999999995</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.31899999999999995</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.32000000000000001</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.32100000000000001</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>0.318</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>0.317</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>0.31799999999999995</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.314</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.315</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.316</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.31100000000000005</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.312</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.313</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>0.311</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>0.309</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>0.31</bucket>
            </map>
            <map to='#f46f5b'>
              <bucket>0.307</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>0.30499999999999999</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>0.30599999999999999</bucket>
            </map>
            <map to='#f4705c'>
              <bucket>0.30399999999999999</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>0.29999999999999999</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>0.30199999999999999</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>0.29799999999999999</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>0.29899999999999999</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>0.29700000000000004</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>0.29500000000000004</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>0.29699999999999999</bucket>
            </map>
            <map to='#f5725f'>
              <bucket>0.29499999999999998</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29199999999999998</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29200000000000004</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29400000000000004</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.28899999999999998</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.28999999999999998</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.29100000000000004</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28600000000000003</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28699999999999998</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28800000000000003</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28399999999999997</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28499999999999998</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28500000000000003</bucket>
            </map>
            <map to='#f67762'>
              <bucket>0.28300000000000003</bucket>
            </map>
            <map to='#f67763'>
              <bucket>0.28100000000000003</bucket>
            </map>
            <map to='#f67763'>
              <bucket>0.28199999999999997</bucket>
            </map>
            <map to='#f67863'>
              <bucket>0.27899999999999997</bucket>
            </map>
            <map to='#f67863'>
              <bucket>0.28000000000000003</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27600000000000002</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27699999999999997</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27800000000000002</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27399999999999997</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27400000000000002</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27500000000000002</bucket>
            </map>
            <map to='#f77b65'>
              <bucket>0.27300000000000002</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>0.27100000000000002</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>0.27200000000000002</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>0.27099999999999996</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>0.26900000000000002</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>0.27000000000000002</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>0.26800000000000002</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>0.26899999999999996</bucket>
            </map>
            <map to='#f77d68'>
              <bucket>0.26700000000000002</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26400000000000001</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26500000000000001</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26600000000000001</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>0.26200000000000001</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>0.26300000000000001</bucket>
            </map>
            <map to='#f88069'>
              <bucket>0.26100000000000001</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>0.25900000000000001</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>0.26000000000000001</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>0.25700000000000001</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>0.25800000000000001</bucket>
            </map>
            <map to='#f8816b'>
              <bucket>0.25600000000000001</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>0.254</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>0.255</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>0.253</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.25</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.251</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.252</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.247</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.248</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.249</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>0.24600000000000002</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>0.245</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>0.246</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>0.24399999999999999</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>0.24199999999999999</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>0.24299999999999999</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>0.23999999999999999</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>0.24100000000000002</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23799999999999999</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23800000000000002</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23899999999999999</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23499999999999999</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23600000000000002</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23699999999999999</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23199999999999998</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23300000000000001</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23399999999999999</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>0.23100000000000001</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>0.23000000000000001</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>0.22800000000000001</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>0.22899999999999998</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>0.22799999999999998</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>0.22600000000000001</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>0.22699999999999998</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.22399999999999998</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.224</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.22500000000000001</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.221</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.222</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.223</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>0.21999999999999997</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>0.22</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>0.218</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>0.21899999999999997</bucket>
            </map>
            <map to='#fa9079'>
              <bucket>0.217</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>0.216</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>0.21600000000000003</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.21299999999999999</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.214</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.215</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.20999999999999999</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.21100000000000002</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.21199999999999999</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>0.20800000000000002</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>0.20899999999999999</bucket>
            </map>
            <map to='#fb937e'>
              <bucket>0.20699999999999999</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>0.20499999999999999</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>0.20600000000000002</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>0.20300000000000001</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>0.20399999999999999</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20000000000000001</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20100000000000001</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20199999999999999</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19699999999999998</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19800000000000001</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19899999999999998</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>0.19500000000000001</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>0.19600000000000001</bucket>
            </map>
            <map to='#fb9783'>
              <bucket>0.19399999999999998</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>0.192</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>0.193</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>0.191</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>0.19</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.187</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.188</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.18899999999999997</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.184</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.185</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.18600000000000003</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>0.182</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>0.183</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>0.18100000000000002</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>0.17899999999999999</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>0.17999999999999999</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>0.17800000000000002</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>0.17600000000000002</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>0.17699999999999999</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>0.17399999999999999</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>0.17499999999999999</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17100000000000001</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17199999999999999</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17300000000000001</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>0.16899999999999998</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>0.17000000000000001</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>0.16699999999999998</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>0.16800000000000001</bucket>
            </map>
            <map to='#fca08d'>
              <bucket>0.16600000000000001</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>0.16399999999999998</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>0.16500000000000001</bucket>
            </map>
            <map to='#fca18e'>
              <bucket>0.16300000000000001</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>0.161</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>0.16200000000000001</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.158</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.159</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.16</bucket>
            </map>
            <map to='#fca291'>
              <bucket>0.157</bucket>
            </map>
            <map to='#fca391'>
              <bucket>0.156</bucket>
            </map>
            <map to='#fda392'>
              <bucket>0.154</bucket>
            </map>
            <map to='#fda392'>
              <bucket>0.155</bucket>
            </map>
            <map to='#fda492'>
              <bucket>0.153</bucket>
            </map>
            <map to='#fda493'>
              <bucket>0.151</bucket>
            </map>
            <map to='#fda493'>
              <bucket>0.152</bucket>
            </map>
            <map to='#fda593'>
              <bucket>0.14999999999999999</bucket>
            </map>
            <map to='#fda594'>
              <bucket>0.14800000000000002</bucket>
            </map>
            <map to='#fda594'>
              <bucket>0.14899999999999999</bucket>
            </map>
            <map to='#fda595'>
              <bucket>0.14699999999999999</bucket>
            </map>
            <map to='#fda695'>
              <bucket>0.14499999999999999</bucket>
            </map>
            <map to='#fda695'>
              <bucket>0.14599999999999999</bucket>
            </map>
            <map to='#fda696'>
              <bucket>0.14400000000000002</bucket>
            </map>
            <map to='#fda796'>
              <bucket>0.14300000000000002</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14000000000000001</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14099999999999999</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14199999999999999</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13699999999999998</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13800000000000001</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13900000000000001</bucket>
            </map>
            <map to='#fda999'>
              <bucket>0.13500000000000001</bucket>
            </map>
            <map to='#fda999'>
              <bucket>0.13600000000000001</bucket>
            </map>
            <map to='#fda99a'>
              <bucket>0.13400000000000001</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>0.13200000000000001</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>0.13300000000000001</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>0.13</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>0.13100000000000001</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.127</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.128</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.129</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.124</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.125</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.126</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.121</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.122</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.12300000000000001</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>0.11900000000000001</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>0.12</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>0.11699999999999999</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>0.11800000000000001</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>0.11599999999999999</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>0.113</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>0.114</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>0.11199999999999999</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>0.11</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>0.111</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.107</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.10800000000000001</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.109</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.10400000000000001</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.105</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.106</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10099999999999999</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10199999999999999</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10300000000000001</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>0.10000000000000001</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>0.096999999999999989</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>0.095000000000000001</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>0.096000000000000002</bucket>
            </map>
            <map to='#feb5a7'>
              <bucket>0.094</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>0.091999999999999998</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>0.093000000000000013</bucket>
            </map>
            <map to='#feb6a8'>
              <bucket>0.090999999999999998</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>0.08900000000000001</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>0.089999999999999997</bucket>
            </map>
            <map to='#feb7a9'>
              <bucket>0.088000000000000009</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>0.084000000000000005</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>0.085999999999999993</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.081000000000000003</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.08199999999999999</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.083000000000000004</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>0.080000000000000002</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>0.075999999999999998</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>0.076999999999999999</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>0.072000000000000008</bucket>
            </map>
            <map to='#febaad'>
              <bucket>0.070000000000000007</bucket>
            </map>
            <map to='#febaad'>
              <bucket>0.070999999999999994</bucket>
            </map>
            <map to='#febaae'>
              <bucket>0.069000000000000006</bucket>
            </map>
            <map to='#febbae'>
              <bucket>0.068000000000000005</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>0.062</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>0.065000000000000002</bucket>
            </map>
            <map to='#febcaf'>
              <bucket>0.060999999999999999</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>0.048000000000000001</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>0.055999999999999994</bucket>
            </map>
            <map to='#febdb0'>
              <bucket>0.040999999999999995</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>0.024</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>0.039</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:state:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI ? Low Threshold:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:1 or more reported MEDB problems:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Persons in 2018:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_14:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI Btwn Thresholds (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_14:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI ? Low Threshold (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Persons in 2018 (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Food Insecurity Rate:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:High Threshold in state:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Children in 2018:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Low Threshold in state:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure children in HH w/ HH incomes below 185 FPL in 2018:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Cost Per Meal:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI &gt; High Threshold:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_18:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_15:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Excellent or Very Good:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_15:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_16:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Cost Per Meal (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Weighted Annual Food Budget Shortfall:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:High Threshold in state (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:budget_shortfall_v_income_v_foodwaste.csv_6036727166674270970175101B2D77CD:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Fair or Poor:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:FIPS:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Good:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI &gt; High Threshold (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Low Threshold in state (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:weighted_annual_dollars:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure children in HH w/ HH incomes above 185 FPL in 2018:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_17:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI Btwn Thresholds:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:FIPS (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Children in 2018 (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:count:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:num_food_ins_children:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:STATE:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:top fi set:nk]' type='palette'>
            <map to='#d7b5a6'>
              <bucket>false</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='MMG2020_2018county.csv' id='MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE'>
            <properties context=''>
              <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='County, State' ordinal='2' />
                  <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
                  <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
                  <column datatype='real' name='Low Threshold in state' ordinal='5' />
                  <column datatype='string' name='Low Threshold Type' ordinal='6' />
                  <column datatype='real' name='High Threshold in state' ordinal='7' />
                  <column datatype='string' name='High Threshold Type' ordinal='8' />
                  <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
                  <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
                  <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
                  <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
                  <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
                  <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
                  <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
                  <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
                  <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='MMG2020_2018state.csv' id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B'>
            <properties context=''>
              <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018state.csv' table='[MMG2020_2018state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='State Name' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='real' name='2018 Food Insecurity Rate' ordinal='3' />
                  <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
                  <column datatype='real' name='Low Threshold in state' ordinal='5' />
                  <column datatype='string' name='Low Threshold Type' ordinal='6' />
                  <column datatype='real' name='High Threshold in state' ordinal='7' />
                  <column datatype='string' name='High Threshold Type' ordinal='8' />
                  <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
                  <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
                  <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
                  <column datatype='real' name='2018 Child Food Insecurity Rate' ordinal='12' />
                  <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
                  <column datatype='real' name='% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016' ordinal='14' />
                  <column datatype='real' name='% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016' ordinal='15' />
                  <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
                  <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='child_poverty_18.csv' id='child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD'>
            <properties context=''>
              <relation connection='textscan.1kd29ao0d5cczz0zwx9790l7a5o3' name='child_poverty_18.csv' table='[child_poverty_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='dataform' ordinal='2' />
                  <column datatype='real' name='amount' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='child_public_asst_18.csv' id='child_public_asst_18.csv_73211EF64D1F4E4F9C8354183BD9C047'>
            <properties context=''>
              <relation connection='textscan.1268ntb0mx7nlo1bavmf70arbk3z' name='child_public_asst_18.csv' table='[child_public_asst_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='amount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='fb_per100000.csv' id='fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9'>
            <properties context=''>
              <relation connection='textscan.10djsbc144a22s12ismq50nnsd9r' name='fb_per100000.csv' table='[fb_per100000#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state_ab' ordinal='0' />
                  <column datatype='integer' name='pop' ordinal='1' />
                  <column datatype='integer' name='num_foodbanks' ordinal='2' />
                  <column datatype='real' name='food_banks_per_100000' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='fi_rates_5yr.csv' id='fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF'>
            <properties context=''>
              <relation connection='textscan.0yr55cu1lrxejt19knwo01wvbphj' name='fi_rates_5yr.csv' table='[fi_rates_5yr#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state_name' ordinal='0' />
                  <column datatype='real' name='fi_18' ordinal='1' />
                  <column datatype='real' name='fi_17' ordinal='2' />
                  <column datatype='real' name='fi_16' ordinal='3' />
                  <column datatype='real' name='fi_15' ordinal='4' />
                  <column datatype='real' name='fi_14' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='financials_18.csv' id='financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7'>
            <properties context=''>
              <relation connection='textscan.187vbbv0393s1b14vpfnz0jrf6vh' name='financials_18.csv' table='[financials_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='weighted_annual_dollars' ordinal='1' />
                  <column datatype='real' name='dollars_waste' ordinal='2' />
                  <column datatype='integer' name='income' ordinal='3' />
                  <column datatype='real' name='perc_waste' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='food_banks_USA.csv1' id='food_banks_USA.csv_035C939829B942B3982DB29685463AAF'>
            <properties context=''>
              <relation connection='textscan.0hucxfp1l2de8313xbg701cg463q' name='food_banks_USA.csv' table='[food_banks_USA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Organization' ordinal='0' />
                  <column datatype='string' name='Address' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='zipcode' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='grant_allocation.csv' id='grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE'>
            <properties context=''>
              <relation connection='textscan.19c1y8q1wbp0o216mjkch0rz3raa' name='grant_allocation.csv' table='[grant_allocation#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='non_medicaid_dollar' ordinal='1' />
                  <column datatype='real' name='non_medicaid_per_capita' ordinal='2' />
                  <column datatype='real' name='non_medicaid_pc_percent_us' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='medb.csv' id='medb.csv_5CBD385CB3504E5193237BC2ED129B73'>
            <properties context=''>
              <relation connection='textscan.0b85csq0g8nusr100fwjg16xz00x' name='medb.csv' table='[medb#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='real' name='1 or more reported MEDB problems' ordinal='1' />
                  <column datatype='real' name='no medb problems' ordinal='2' />
                  <column datatype='integer' name='F4' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='physical health.csv' id='physical health.csv_38B906642E1C426797BD5D6DFC845F00'>
            <properties context=''>
              <relation connection='textscan.1by0ali063vpph1ddombw120mxmp' name='physical health.csv' table='[physical health#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='STATE' ordinal='0' />
                  <column datatype='real' name='Excellent or Very Good' ordinal='1' />
                  <column datatype='real' name='Good' ordinal='2' />
                  <column datatype='real' name='Fair or Poor' ordinal='3' />
                  <column datatype='integer' name='Total' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='waste_donate_percent.csv' id='waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96'>
            <properties context=''>
              <relation connection='textscan.1hgom7b1qcxro3156l2100wntaei' name='waste_donate_percent.csv' table='[waste_donate_percent#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='tons_surplus' ordinal='1' />
                  <column datatype='real' name='dollars_surplus' ordinal='2' />
                  <column datatype='real' name='tons_waste' ordinal='3' />
                  <column datatype='real' name='tons_donated' ordinal='4' />
                  <column datatype='real' name='dollars_per_ton' ordinal='5' />
                  <column datatype='real' name='dollars_donated' ordinal='6' />
                  <column datatype='real' name='dollars_waste' ordinal='7' />
                  <column datatype='real' name='waste_to_surplus_percent' ordinal='8' />
                  <column datatype='real' name='donation_to_surplus_percent' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[State (MMG2020_2018county.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[state]' />
              <expression op='[State]' />
            </expression>
            <first-end-point object-id='food_banks_USA.csv_035C939829B942B3982DB29685463AAF' />
            <second-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (child_poverty_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (child_public_asst_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='child_public_asst_18.csv_73211EF64D1F4E4F9C8354183BD9C047' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[state_ab]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='fb_per100000.csv_0ACE4F32437443C9ADF7DF5F7DE187B9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state_name]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (financials_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (grant_allocation.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='grant_allocation.csv_A3863A36C2AB4D02AD7ED922E72132EE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[State (medb.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='medb.csv_5CBD385CB3504E5193237BC2ED129B73' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[STATE]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='physical health.csv_38B906642E1C426797BD5D6DFC845F00' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (waste_donate_percent.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='waste_donate_percent.csv_C0D6B6B7696843C8BC19252B1A070C96' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='FI and Bank Density' type='sheet' worksheet='top fi by state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='FI and Bank Density' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='FI and Bank Density' type='sheet' worksheet='food banks by zipcode' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='FI and Bank Density' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='economic conditions and PA' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='IN/OUT(top fi set)' />
        <param name='target' value='economic conditions and PA' />
      </command>
    </action>
    <nav-action caption='FI by State' name='[Action3]'>
      <source dashboard='FI and Bank Density' type='sheet' worksheet='top fi by state' />
      <params>
        <param name='sheet' value='top fi by state' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='$ Received'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Non Medicaid Per Capita' datatype='real' name='[non_medicaid_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[non_medicaid_per_capita]' derivation='Sum' name='[sum:non_medicaid_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' direction='DESC' using='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:non_medicaid_per_capita:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:non_medicaid_per_capita:qk]' value='n&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:non_medicaid_per_capita:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:non_medicaid_per_capita:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:non_medicaid_per_capita:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{226FC767-FA33-4AC5-9408-76EB3BC8E78A}' />
    </worksheet>
    <worksheet name='Ins Rate vs FB scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>% Food Insecure vs Food Banks per 100,000 Children</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column caption='Food Banks Per 100000' datatype='real' name='[food_banks_per_100000]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_banks_per_100000]' derivation='Sum' name='[sum:food_banks_per_100000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% C.F.I.' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26024796380090498' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' scope='rows' value='Food Banks' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8d6282' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{1200DD49-90D8-45E8-B6E6-A7CC9EECB30B}' />
    </worksheet>
    <worksheet name='Ins Rate vs Food Waste'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Food Insecure vs % Food Surplus Donated ($)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Dollars Donated' datatype='real' name='[dollars_donated]' role='measure' type='quantitative' />
            <column caption='Donation To Surplus Percent' datatype='real' name='[donation_to_surplus_percent]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dollars_donated]' derivation='Sum' name='[sum:dollars_donated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[donation_to_surplus_percent]' derivation='Sum' name='[sum:donation_to_surplus_percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State Name:nk]' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26022473919523104' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:donation_to_surplus_percent:qk]' field-type='quantitative' max='6.7907858197932045' min='2.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:donation_to_surplus_percent:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:donation_to_surplus_percent:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:donation_to_surplus_percent:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
              <tooltip column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_donated:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#734f69' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:donation_to_surplus_percent:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{9F7CD80D-0BE2-4242-8368-C775907373CD}' />
    </worksheet>
    <worksheet name='Ins Rate vs MI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% C.F.I. vs Median Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% C.F.I.' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]' scope='rows' value='Median Income' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26018815789473687' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]' field-type='quantitative' max='110528' min='50000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#e7a0d4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{CFF9610D-BE81-4986-AD60-D46D26654866}' />
    </worksheet>
    <worksheet name='Ins Rate vs Poverty scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run> %  C.F.I. vs % Poverty</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='% Children in Poverty' datatype='real' name='[amount]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[amount]' derivation='Sum' name='[sum:amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% C.F.I.' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' field-type='quantitative' max='0.29619076005961253' min='0.040000000000000001' minor-origin='0.0' minor-spacing='0.01' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26022473919523104' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#95678a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{60CEDB3B-5693-438E-9948-72BA14C691BE}' />
    </worksheet>
    <worksheet name='Ins Rate vs public assistance'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% C.F.I. vs % Receiving Public Assistance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Amount (Child Public Asst 18.Csv)' datatype='real' name='[amount (child_public_asst_18.csv)]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[amount (child_public_asst_18.csv)]' derivation='Sum' name='[sum:amount (child_public_asst_18.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount (child_public_asst_18.csv):qk]' scope='rows' value='% Children in Families Receiving supplemental security income, cash public assistance income or SNAP' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% C.F.I.' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount (child_public_asst_18.csv):qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount (child_public_asst_18.csv):qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{A6D42B40-08F9-4FAB-B23F-341079F52F14}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[1 or more reported MEDB problems]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fair or Poor]' role='measure' type='quantitative' />
            <column caption='State2' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[1 or more reported MEDB problems]' derivation='Sum' name='[sum:1 or more reported MEDB problems:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fair or Poor]' derivation='Sum' name='[sum:Fair or Poor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi Set]' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Fair or Poor:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:1 or more reported MEDB problems:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:1 or more reported MEDB problems:qk]' />
              <text column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:STATE:nk]' />
              <text column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Fair or Poor:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State2:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:STATE:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>1 or more reported MEDB problems:	</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Fair or Poor Physical Health:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#a37998' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F71A4650-91F2-4696-B83F-4D2C1B946D4F}' />
    </worksheet>
    <worksheet name='child fi by county'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Insecurity by County&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[County, State - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='Attribute' name='[attr:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State - Split 1]' derivation='None' name='[none:County, State - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='None' name='[none:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='32980932.846116945' min='25944795.987098519' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6809039.2989255087' min='2434423.5572522427' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' max='0.5' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 1:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#818b91'>State:&#9; </run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 1:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Food Insecure Children:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#900000' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C25343D1-58C8-48F8-A0BA-5B6DE8BCE1F2}' />
    </worksheet>
    <worksheet name='child fi by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>C.F.I. By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State Name]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='34249687.126603223' min='24948190.158414923' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='7410988.5388401635' min='2278421.2858771128' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='F.I. Rate' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A3D116A5-9D70-40AC-B76E-7F699FB13844}' />
    </worksheet>
    <worksheet name='fb list'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Banks</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[Address]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Address]' derivation='None' name='[none:Address:nk]' pivot='key' type='nominal' />
            <column-instance column='[Organization]' derivation='None' name='[none:Organization:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State Name]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]' value='164' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk] / ([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk] / [federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{1E62BA3D-C4F1-4E43-85A3-752375A24990}' />
    </worksheet>
    <worksheet name='fb per capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Banks per 100,000 Children in Top C.F.I. States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Food Banks Per 100000' datatype='real' name='[food_banks_per_100000]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_banks_per_100000]' derivation='Sum' name='[sum:food_banks_per_100000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' scope='rows' value='Food Banks' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' value='-90' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='2.55' label-type='custom' scope='per-table' tooltip='National Average' tooltip-type='custom' value='2.5499999999999998' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</cols>
      </table>
      <simple-id uuid='{6A7F8772-1862-42F8-B868-CF8EE0EA288C}' />
    </worksheet>
    <worksheet name='fb under avg'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Banks Under Average (2.55 per 100,000 children)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column caption='Food Banks Per 100000' datatype='real' name='[food_banks_per_100000]' role='measure' type='quantitative' />
            <column-instance column='[food_banks_per_100000]' derivation='None' name='[none:food_banks_per_100000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_ab]' derivation='None' name='[none:state_ab:nk]' pivot='key' type='nominal' />
            <column caption='State Ab' datatype='string' name='[state_ab]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[food_banks_per_100000]' derivation='Sum' name='[sum:food_banks_per_100000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:food_banks_per_100000:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>2.55</max>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:food_banks_per_100000:qk]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='-5936098.7363969982' min='-15504660.863220146' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6565060.7417212911' min='2573267.9386213087' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d8e9e5</color>
                <color>#c1e1da</color>
                <color>#acd9cf</color>
                <color>#97d1c4</color>
                <color>#83c9ba</color>
                <color>#71c1af</color>
                <color>#5fb9a5</color>
                <color>#4fb19b</color>
                <color>#40a992</color>
                <color>#32a189</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_ab:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_ab:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_ab:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_ab:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_ab:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Food Banks Per 100,000 Children:	</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C00807A9-FE83-4349-8BB8-619AA4430CEB}' />
    </worksheet>
    <worksheet name='food banks by zipcode'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Bank Density By Zipcode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='food_banks_USA.csv1' datatype='integer' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[Organization]' derivation='Attribute' name='[attr:Organization:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State Name]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[State Name]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='-7014023.2857225202' min='-14133153.85675082' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6625907.0946613345' min='2873280.7892763303' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' value='Count of Food Banks'>
              <formatted-text>
                <run>Count of Food Banks</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]' />
              <size column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' />
              <tooltip column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:Organization:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zipcode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Food Banks:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-transparency' value='165' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#499894' />
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DCF3D56C-8940-476A-9829-27C1E202AFE7}' />
    </worksheet>
    <worksheet name='top fi by county'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
            <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='None' name='[none:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State]' derivation='None' name='[none:County, State:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
            <format attr='color' id='refline0' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='National Average: 16.9%' label-type='custom' scope='per-pane' value='0.16880000000000001' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]</cols>
      </table>
      <simple-id uuid='{AF85BD61-4CCF-436E-A8B2-A377B00F6887}' />
    </worksheet>
    <worksheet name='top fi by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 C.F.I. Rates by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State Name:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='16.9%' label-type='custom' scope='per-pane' tooltip='National Average' tooltip-type='custom' value='0.16900000000000001' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</cols>
      </table>
      <simple-id uuid='{E8999405-2CC4-4ADB-A338-5B70E234AEF1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='FI and Bank Density'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='38' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='21' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90625' id='7' param='horz' w='98400' x='800' y='8375'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='90625' id='5' w='98400' x='800' y='8375'>
                  <zone h='45313' id='3' name='food banks by zipcode' w='59901' x='39299' y='8375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45312' id='10' name='top fi by state' w='44804' x='54396' y='53688'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45313' id='19' name='fb list' w='38499' x='800' y='8375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45312' id='29' name='child fi by state' w='53596' x='800' y='53688'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7375' id='18' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='18'>Child Food Insecurity &amp; Food Bank Density </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='34' name='child fi by state' pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' w='14000' x='2000' y='86625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='52' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='51' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7375' id='18' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='18'>Child Food Insecurity &amp; Food Bank Density </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='19' is-fixed='true' name='fb list' w='38499' x='800' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='3' is-fixed='true' name='food banks by zipcode' w='59901' x='39299' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='29' is-fixed='true' name='child fi by state' w='53596' x='800' y='53688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='34' name='child fi by state' pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' w='14000' x='2000' y='86625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='10' is-fixed='true' name='top fi by state' w='44804' x='54396' y='53688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8AA7B39F-67E6-4005-A656-8AD2B7AAC6B1}' />
    </dashboard>
    <dashboard name='HHS programs'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='98000' id='3' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontcolor='#333333'>I wanted to see if there was a relationship between food insecurity rates and other economic factors. The results were fairly obvious, and so the next step was to look into federal assistance programs. Further research shows that the reason for these correlations is because these types are factors are actually used in the formula that is used to allocate funds. I couldn&apos;t confirm that FI rate is used, but poverty, income, and child population are. </run>
              <run bold='true' fontcolor='#000000' fontsize='14'>Since poverty and income (economic) are most correlated with child food insecurity rates, further exploration of enforcement and management of federal services would be useful, particularly related to the Dept of Agriculture: </run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Supplemental Nutrition Assistance Program (SNAP) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   National School Lunch Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Special Supplemental Nutrition Program for Women, Infants, and Children (WIC) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Child and Adult Care Food Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   School Breakfast Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Summer Food Service Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Commodity Supplemental Food Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Food Distribution Program on Indian Reservations (FDPIR) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Senior Farmers&apos; Market Nutrition Program (SFMNP) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Special Milk Program for Children </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='19' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='18' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='98000' id='3' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontcolor='#333333'>I wanted to see if there was a relationship between food insecurity rates and other economic factors. The results were fairly obvious, and so the next step was to look into federal assistance programs. Further research shows that the reason for these correlations is because these types are factors are actually used in the formula that is used to allocate funds. I couldn&apos;t confirm that FI rate is used, but poverty, income, and child population are. </run>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Since poverty and income (economic) are most correlated with child food insecurity rates, further exploration of enforcement and management of federal services would be useful, particularly related to the Dept of Agriculture: </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Supplemental Nutrition Assistance Program (SNAP) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   National School Lunch Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Special Supplemental Nutrition Program for Women, Infants, and Children (WIC) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Child and Adult Care Food Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   School Breakfast Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Summer Food Service Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Commodity Supplemental Food Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Food Distribution Program on Indian Reservations (FDPIR) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Senior Farmers&apos; Market Nutrition Program (SFMNP) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Special Milk Program for Children </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D3ADF88A-5C6B-4BA5-9F93-2AD98A2ECC81}' />
    </dashboard>
    <dashboard name='References'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='58625' id='3' w='81900' x='3300' y='4125'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Light' fontsize='14'>References:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Map The Meal Gap (files received via email): </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952&amp;quot;' underline='true'>https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Food Bank Data: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.foodbanks.net/&amp;quot;' underline='true'>https://www.foodbanks.net/</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Poverty, Median Income: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://datacenter.kidscount.org/topics&amp;quot;' underline='true'>https://datacenter.kidscount.org/topics</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Food Surplus and Waste: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://insights.refed.com/&amp;quot;' underline='true'>https://insights.refed.com/</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Poverty Guidelines: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references&amp;quot;' underline='true'>https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Federal Programs: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html&amp;quot;' underline='true'>https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Minimum Wage: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.laborlawcenter.com/state-minimum-wage-rates/&amp;quot;' underline='true'>https://www.laborlawcenter.com/state-minimum-wage-rates/</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Mental and Physical Health: </run>
            <run auto-url='true' fontcolor='#000000' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.childhealthdata.org/browse/survey&amp;quot;'>https://www.childhealthdata.org/browse/survey</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Federal Funds: </run>
            <run auto-url='true' fontcolor='#000000' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://ffis.org/&amp;quot;'>https://ffis.org/</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='16' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='58625' id='3' w='81900' x='3300' y='4125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Light' fontsize='14'>References:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Map The Meal Gap (files received via email): </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952&amp;quot;' underline='true'>https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Food Bank Data: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.foodbanks.net/&amp;quot;' underline='true'>https://www.foodbanks.net/</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Poverty, Median Income: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://datacenter.kidscount.org/topics&amp;quot;' underline='true'>https://datacenter.kidscount.org/topics</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Food Surplus and Waste: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://insights.refed.com/&amp;quot;' underline='true'>https://insights.refed.com/</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Poverty Guidelines: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references&amp;quot;' underline='true'>https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Federal Programs: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html&amp;quot;' underline='true'>https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Minimum Wage: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.laborlawcenter.com/state-minimum-wage-rates/&amp;quot;' underline='true'>https://www.laborlawcenter.com/state-minimum-wage-rates/</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Mental and Physical Health: </run>
                    <run auto-url='true' fontcolor='#000000' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.childhealthdata.org/browse/survey&amp;quot;'>https://www.childhealthdata.org/browse/survey</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>- Federal Funds: </run>
                    <run auto-url='true' fontcolor='#000000' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://ffis.org/&amp;quot;'>https://ffis.org/</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{94FE1FA9-E7C4-4B8B-B1A4-F4F3CD181143}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='7' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='1867' id='8' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='96473' id='1' param='vert' removable='false' w='98426' x='787' y='2697'>
              <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='2697' />
              <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='85996' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='13174'>
                <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Title' captured-sheet='' id='2' />
                    <story-point caption='Some beginning facts and assumptions' captured-sheet='assumptions' id='8'>
                      <capturedDeltas>
                        <dashboard name='assumptions'>
                          <zone id='3'>
                            <formatted-text>
                              <run bold='true' fontcolor='#000000' fontsize='12'>Definitions:</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Median annual income for families with own children under age 18 living in the household. </run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• C.F.I. = child food insecurity</run>
                              <run>Æ&#10;&#10;&#10;</run>
                              <run bold='true' fontcolor='#000000' fontsize='12'>National Averages for Context:</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Food insecurity rate: 16.9%</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Food banks per 100,000 children: 2.5 </run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Poverty Rate: 18%</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Poverty line (2 adults, 2 kids): $25,100</run>
                              <run>Æ&#10;&#10;&#10;</run>
                              <run bold='true' fontcolor='#000000' fontsize='12'>Notes:</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Surplus food isn’t consumed. It’s broken into rescue, recycling, and food waste. I looked at the $ amount in waste. </run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Puerto Rico is not included in this study.</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#000000' fontsize='12'>• Focus on data from 2018</run>
                            </formatted-text>
                          </zone>
                        </dashboard>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Child Food Insecurity &amp; Food Bank Density (links to top 10)' captured-sheet='FI and Bank Density' id='1'>
                      <capturedDeltas>
                        <worksheet name='child fi by state'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6664929.3966935687' min='2574051.5526356683' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='32632200.373578977' min='25677708.328844566' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                        <worksheet name='fb list'>
                          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
                            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='food banks by zipcode'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6773320.8549202643' min='2827300.2882172861' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='-6840269.228552823' min='-14326289.248720925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption=' Lack of Food Bank Correlation, but many states still under average' captured-sheet='no FB correlation' id='6' />
                    <story-point caption='Economic Correlations and P.A insight' captured-sheet='economic conditions and PA' id='3' />
                    <story-point caption='Economic is more related: what programs exist? do they need improvement?' captured-sheet='HHS programs' id='4' />
                    <story-point caption='Conclusion/Summary: didnt find relationship between food banks' captured-sheet='' id='7' />
                    <story-point caption='References' captured-sheet='References' id='5' />
                    <story-point captured-sheet='child fi by state' id='9'>
                      <capturedDeltas>
                        <worksheet name='child fi by state'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='13287181.222106818' min='-5054655.5379952844' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='41434478.300442278' min='22844168.18575516' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='62241' hidden='true' id='9' story-point-id='2' w='72047' x='13484' y='26971'>
          <formatted-text>
            <run fontsize='26'>FOOD INSECURITY AMONG CHILDREN IN THE US:</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='18'>An exploration of food insecurity rates across the states, and if they correlate to food bank density, (food deserts, if time allows), economic conditions, and other well-being indicators.</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{02E45887-2571-4025-9741-AC61F81120B5}' />
    </dashboard>
    <dashboard name='assumptions'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='98000' id='3' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='12'>National Averages for Context:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Food insecurity rate: 16.9%</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Food banks per 100,000 children: 2.5 </run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Poverty line (2 adults, 2 kids): $25,100 /Poverty Rate: 18% </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='12'>Definitions:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Median annual income for families with own children under age 18 living in the household. </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='12'>Notes:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Surplus food isn’t consumed. It’s broken into rescue, recycling, and food waste. I looked at the $ amount in waste. </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Puerto Rico is not included in this study.</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>• Focus on data from 2018</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='98000' id='3' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='12'>National Averages for Context:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Food insecurity rate: 16.9%</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Food banks per 100,000 children: 2.5 </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Poverty line (2 adults, 2 kids): $25,100 /Poverty Rate: 18% </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>Definitions:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Median annual income for families with own children under age 18 living in the household. </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>Notes:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Surplus food isn’t consumed. It’s broken into rescue, recycling, and food waste. I looked at the $ amount in waste. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Puerto Rico is not included in this study.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>• Focus on data from 2018</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B0795550-2FED-4A65-9005-A8AFDA879654}' />
    </dashboard>
    <dashboard name='economic conditions and PA'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='100000' id='39' param='horz' w='100000' x='0' y='0'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='37' w='84000' x='0' y='0'>
              <zone h='50000' id='19' name='Ins Rate vs Poverty scatter' w='28308' x='26124' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50000' id='34' name='Ins Rate vs MI' w='29568' x='54432' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50000' id='35' name='Ins Rate vs public assistance' w='26124' x='0' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50000' id='36' name='$ Received' w='84000' x='0' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='100000' id='38' is-fixed='true' param='vert' w='16000' x='84000' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='40' name='$ Received' pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[io:top fi set:nk]' w='16000' x='84000' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5250' id='12' w='10800' x='10900' y='40750'>
          <formatted-text>
            <run bold='true' fontsize='11'>R = .523</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3750' id='13' w='10000' x='43200' y='43125'>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontsize='11'>R = .650</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='3750' id='15' w='10000' x='73900' y='42625'>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontsize='11'>R = .526</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='44' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='43' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='50000' id='35' is-fixed='true' name='Ins Rate vs public assistance' w='26124' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='19' is-fixed='true' name='Ins Rate vs Poverty scatter' w='28308' x='26124' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='34' is-fixed='true' name='Ins Rate vs MI' w='29568' x='54432' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5250' id='12' w='10800' x='10900' y='40750'>
                  <formatted-text>
                    <run bold='true' fontsize='11'>R = .523</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='3750' id='15' w='10000' x='73900' y='42625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#555555' fontsize='11'>R = .526</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3750' id='13' w='10000' x='43200' y='43125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#555555' fontsize='11'>R = .650</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='36' is-fixed='true' name='$ Received' w='84000' x='0' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='40' name='$ Received' pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[io:top fi set:nk]' w='16000' x='84000' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{26421FBA-F050-4673-9D67-32F443987A8D}' />
    </dashboard>
    <dashboard name='no FB correlation'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='17' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='15' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='13' param='horz' w='98400' x='800' y='50000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='49000' id='11' w='98400' x='800' y='50000'>
                  <zone h='42063' id='3' name='fb per capita' w='49200' x='50000' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42063' id='5' name='Ins Rate vs FB scatter' w='49200' x='800' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='6937' id='6' w='98400' x='800' y='92063'>
                    <formatted-text>
                      <run fontcolor='#555555'>While there&apos;s not a correlation between food bank density and C.F.I. rates, six of the top ten states fall below the average. Also, what can we learn about some of the outliers?</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='49000' id='14' name='fb under avg' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='3750' id='19' w='10000' x='8300' y='70875'>
          <formatted-text>
            <run bold='true' fontsize='11'>R = .030</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='22' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='14' is-fixed='true' name='fb under avg' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42063' id='5' is-fixed='true' name='Ins Rate vs FB scatter' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42063' id='3' is-fixed='true' name='fb per capita' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='3750' id='19' w='10000' x='8300' y='70875'>
                  <formatted-text>
                    <run bold='true' fontsize='11'>R = .030</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='6937' id='6' w='98400' x='800' y='92063'>
                  <formatted-text>
                    <run fontcolor='#555555'>While there&apos;s not a correlation between food bank density and C.F.I. rates, six of the top ten states fall below the average. Also, what can we learn about some of the outliers?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F03B2BAA-C057-479C-A67F-6239371E2C94}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='fb list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;18390 Bridgeport Rd Dallas OR 97338&quot;</value>
                <value>&quot;A &amp; M Food Co&quot;</value>
                <value>97338</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:City:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDCE3678-04DF-43A1-A3E6-530CBDE4F0A1}' />
    </window>
    <window class='worksheet' name='fb per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_ab:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi set]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B9874AA6-9B44-4CDF-A156-78BE8762D926}' />
    </window>
    <window class='worksheet' name='food banks by zipcode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E860D492-D588-4C52-9C5E-3A8E05EECA51}' />
    </window>
    <window class='worksheet' name='fb under avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:food_banks_per_100000:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:food_banks_per_100000:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15B07158-6C5C-49BA-94CD-4EF91FB99C9D}' />
    </window>
    <window class='worksheet' name='child fi by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4E60F294-962B-40B8-B0DC-D4B8623FF426}' />
    </window>
    <window class='worksheet' name='child fi by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{40BFCF59-4F3F-4846-BB9F-68FC815DE18F}' />
    </window>
    <window class='worksheet' name='Ins Rate vs FB scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB0C3337-0138-488F-AA73-7E69BBBF590E}' />
    </window>
    <window class='worksheet' name='Ins Rate vs Poverty scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State (MMG2020_2018county.csv):nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F0A2AC7-4A4D-4B61-8525-6FC008CCE330}' />
    </window>
    <window class='worksheet' name='Ins Rate vs Food Waste'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:donation_to_surplus_percent:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E6B789-EA74-4A2F-88A6-F8D6009AC740}' />
    </window>
    <window class='worksheet' name='Ins Rate vs MI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFD83D52-0079-43C7-AD76-93736D401A4A}' />
    </window>
    <window class='worksheet' name='top fi by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0207828A-8135-45DE-B5F9-B29F4B0A2FBA}' />
    </window>
    <window class='worksheet' name='top fi by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CDC8D1E-1B47-4814-9BBB-7A5F7234F356}' />
    </window>
    <window class='worksheet' name='Ins Rate vs public assistance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state (child_public_asst_18.csv):nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi Set]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F14C9A37-7D4C-4626-BAD1-968F44D1734D}' />
    </window>
    <window class='worksheet' maximized='true' name='$ Received'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2C00A04-DB71-47A1-89A6-7977AA9B9236}' />
    </window>
    <window class='dashboard' name='assumptions'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{C4AFDAE1-2912-44D5-AFB4-4CAA80DF957B}' />
    </window>
    <window class='dashboard' name='FI and Bank Density'>
      <viewpoints>
        <viewpoint name='child fi by state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='fb list' />
        <viewpoint name='food banks by zipcode'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='top fi by state'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Louisiana&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;New Mexico&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Arkansas&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Alabama&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Mississippi&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Oklahoma&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Texas&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;West Virginia&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Nevada&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Florida&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{3F5CD9C3-A6CA-4B9D-91D7-5E9271DCE6D1}' />
    </window>
    <window class='dashboard' name='no FB correlation'>
      <viewpoints>
        <viewpoint name='Ins Rate vs FB scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='fb per capita'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='fb under avg'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1E9DFA8C-C32E-4CA0-8144-3D2A5BC01B7B}' />
    </window>
    <window class='dashboard' name='economic conditions and PA'>
      <viewpoints>
        <viewpoint name='$ Received' />
        <viewpoint name='Ins Rate vs MI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ins Rate vs Poverty scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ins Rate vs public assistance'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='36' />
      <simple-id uuid='{ECBE5BEF-4AB0-4A0B-956B-9E342A997FE7}' />
    </window>
    <window class='dashboard' name='References'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{39605FF5-8DB5-40E8-9BD9-666329E48751}' />
    </window>
    <window class='dashboard' name='HHS programs'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BE03DDEA-FD6C-4465-9A6B-AEFFA0E8A20D}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{210C49CC-6562-408A-B09E-3E3F5B951D5A}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[:Measure Names]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:STATE:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[top fi Set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0661833-EA96-4496-8213-12E38E433E25}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='$ Received' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='FI and Bank Density' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HHS programs' width='192'>
      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
      zhBlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs FB scatter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs Food Waste' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs MI' width='192'>
      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
      /2slGfHU92UJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs Poverty scatter' width='192'>
      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
      uZj4/xNAu7N4ygpPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs public assistance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='References' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      /gohXNi/AaSgW5s6xCiIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='assumptions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXAc12Hn8e/cB+YeAIMZXIPBQQDEDZ6iqIOUZMdK1vEmqcRx4k1ScaVq
      U1up5L+tyla5Kqnarf0jqd1s1a43tf4njr3r2EosWbYsiyQokCAJEjcwuI/BMQDmwNz3tX+A
      okVRlGVFFqXq9/kL7J558/r1/NjT/V6/llUqlQqCIFHyJ10BQXiSRAAESRMBECRNBECQNBEA
      QdJEAARJEwEQJE0EQJA0EQBB0kQABEkTARAkTQRAkDQRAEHSRAAESRMBECRNBECQNBEAQdJE
      AARJEwEQJE0EQJA0EQBB0kQABEkTARAkTQRAkDQRAEHSRAAESRMBECRNBECQNBEAQdJEAARJ
      EwEQJE0EQJA0EQBB0kQABEkTARAkTQRAkDQRAEHSRAAESRMBECRNBECQNBEAQdJEAARJEwEQ
      JE0EQJA0EQBB0kQABEkTARAkTQRAkDQRAEHSRAAESRMBECRNBECQNBEAQdJEAARJEwEQJE0E
      QJA0EQBB0kQABEkTARAkTQRAkDQRAEHSRAAESRMBECRNBECQNBEAQdLeE4ASS0srlHIJgtH0
      g6WHgUMgze1bsx9Y2MTEJADZeJj17YN/deVyiSA/vX77fdfFjw65N+N933XH9f3wywXpUj78
      zzz/62//K3/6H/6YuZABRzlAolTh1uhVvvq1PyAYivCjH3yfnMKAvpKhlE3Q/tTn2FmaRFHl
      ZGVuiuHhId5846ccZktk2xwYO4fx3rpJMlvAUe9h6c6PaT/zAuVMhIraSupwjXhByUl3Hevb
      ezQ11BNI5Xju2cssjr7OatYDP/oBkZwCu7bCXjjDV3/vS3znuz/kq3/wFSbGrrO9d0Bbaz2L
      B3mM8hI3xq7z1S//FnOLWzgbm4kF91DLFVwbu8HX/vgP2Q/mOT/c9WRaXPhUeeQn0KnnXmBy
      9Cr5WJDtcJK1tQ06urtobbSx718nmlCTjB4SiSfpa61mZt5LLKtkaXnuQRkrG6uEN5axtrbx
      D3/zN1RkObZiFUrFLBVdDYNNRsLJEiuL40STGpSlLHfG72LUqZBXmcmE9gnEUjjrHHSfPMlB
      NIE6GWV5d5/f/vJvAQXkSi06rRbv1g7PDzYwemuW2tZ+jkJhurq7UIQ3OcwqKRVLBJdvI3N0
      09XdhbupVXz5hQcUX//617/+0BKZGpejmtr6JrLpBM3NTbTUVZMsqbCa66g2lzA5mml01VHr
      cKDRG8mkMzQ3N9PgdOBymNFbG3n5hbMEMkaUihIv/8oXSAd2qXe34HTUUFdrwx+I0tzUjqoS
      Zdl3yG/+2ktE8xWqLSYyuTxt7R3oVHI0BhtWZR5MDro8zbicdYAKrTzL4uY+Qyeaubd2xIvP
      DFFlsmHRq3BYDOhcHVQSYRqbXNjrT6IuRnHZLWSLeRbXDmh01TyRBhc+XWSVSqXyJCuwMD2O
      0eGhyVn9JKshSNQTD4AgPEnKx62I70zz+lSQ86cGKMb2sda3oczH8McKdLY4uXv3KrmMm4sX
      nGwdlJDn98kpzNg0JQ4SJTx1Jtb2ovScaGJico7W9lasZj2xcJJkKkEqlkFlLXPzLS+XXr6M
      q9pAPJ6nIisQi0ZRy0qEMzISa/Okaho57aljL5rHadKis9VSiAe48vYMX/zii4zfvIbK7GKw
      5wRbKwts7OzR0NDAyvImw+dPk85Ca2PtJ9muwmfEIyfBf/G1L7MeylBIR0nmyhSPVjksWpke
      v8PdmSUK+8v86MoNuvr6j99cjLMXTDG7uMSeb4PJ6QmKxRKvvfov3L3yKj/4ySjtHe1Mz88D
      cbzjk7wxukwlfISpoZZWdw+B1RkW5+dIyFVM371BrqIml8vx+uuvY9RXM3B6gFf/5QdcefV1
      1DW1aBRgsNZSazZAMYR34RC/fx+Ao2AYuaqK2Zk75HJprl2/zcLcDJnyJ9uwwmfDIwH4kz//
      S5ptOgCGzz9Di9vD3uosBbkSWT7Jmj+OzaBg4t4UxXe9z263oVKqaGpoZnpqAqfLRVvfGZpr
      9ExOTqOqFHj7xh3yQGfXO1dhNGxtTnNiaJjbU2vUG1Uoqyy0NzuZvDdBlUaLxqri3p0ZXC4X
      fWdOkQkGyJUg6N9icnqS1d00dpuCVCZD4PAQT0cbsnKG7qEXOTPUQ19DHdlMklzpl9+YwmfP
      p+IcIOjfJJRR0NXa9KSrIkjMpyIAgvCkPHYsUCEdZWRkhC1/8DGvSLOzFaIQ32c/Xnj/Mj5g
      3ePk0zGOEjmKuSQTMwsArCzMEEnmAN53eTISYGFl86FydrZ2jv8o5YhE02zvbh8v39n6UPVY
      W5xl9/AIgOTRISMjI4QTuV9oW4RPv0eOAMveBVo7TxJbHcFXdZbBuhJvvHkDs8OFOhclEMvT
      09nAmm8NBe2caUvxf+9GOOmuwyBLsx3OUqOvkIhFqK6rISqvw6YtsOFdp//cWRr1ab51dRFP
      gwNtMU4gBXWGMkksPH22n6XJnxKii0Jshd72Oua9fnRNXcT9y7x46RLXrl19ZLmiVKHOANa+
      50n75vCFshQjAeSKAl1nzxOJKIkdraAo5PBu7XKq2000r0dXSRLNq7BpSiRiERoHLmJQqag1
      yNiNFvDO3ONzL73IyFuvo7E0cHa4H7nsSe0q4ZfhkSPAN/72r/EdZQCYuPU2KzO3cPRcpJRK
      kCkr6a5Rc3slwKXnzqO+/57+00+RS4UJhIKsrXoplBU8d7qTnXCat65ex93iwWJSEwiGoJCm
      oWuYQjbOgneJQi5LJFPhwtl+4PgEWQYoVGps1TbiBweY7NVo1Cp4zHK1RoPNqCOZK7MXTnLp
      mbMYzdVcGHBzGE0Su3/0yMuVdLU1EUvlePr8KeYXl0jncj+rb6yCw25EptayMXuXwTNPAfDM
      pV9hoN3K2J3lX/LuED5pjz0HSIe2iKnrcZrkjF2/fr8fIMJ+rEBvSy0zqxs0NfbQaCtzbcJL
      W3sXQd8i8YKcLo+bhmo9qwdxDNZakoe77B0c0NjaRas+yn97Y4WXnz5FKXHAYbKMx1VDQ1MT
      UOLO9bc4SOs429fE/OIWF5+/yL3Ra9S4u9n3rdHd1sTMe5ar8xG2Qimee+oM4YNt5lb3aWl0
      4bIpCRXUFPIqKEWJ7O8QzkK7u57GRjfe2btEciqaHTYaqvVsxWXoVGrs6jSv35jD5XTR5Kwm
      n4qytrXD4Plnsege23UifAZ98ifBhTTRggqLXvWJfqwgvB9xFUiQNHFHmCBpIgCCpIkACJIm
      AiBI2mMDkA5t8dpPrrKwuvm4lzwQ39/mvR2+3vl5EuEIj+sHXpwax394wPXr11ne2H1k/cq8
      l3f3u8575x/05j6szL2xtxm7OwPAwsI0AJFI+P76HN75FQAqpSw3b9178M5IYI9vfesfOIwk
      HpThW/cyMjJC4v7oubW5O2yF0hxsr/PW1VEK5QKjV99ifef4pv+4f4UfXxtjZGSE7f0wP8/7
      9UTffvunXLn6Nrl3jVjd3X6/bYW9rSVWNvcJ7G5w7dpVAuEwV66MUiik2T34+Z8vPOyRi9rf
      /ub/5KXf/mNk4S3qu8+xvzbOzvIU8bwal9NOi0XNUrQEqSh2m5brYzu02wtk63uxl5PYDDra
      Bs8Qj8VYjSWprc4yuqbAXiWjGD2korfx8kvPc5Qq0GazU3Wyg4WNQ/A4uT06SjhTwijLs7IR
      oCsWZ+jCOaZvjVAulxkdGeHyxVNcm/bzxS+8SJ3dCEDf0Cmujt4EIB4L8tZbI1RVgd1YxU4w
      igIFt75xh5e++AUoZ4kGA+hstRwe7qPSGbGb9Vjvl6HIKCiXZSjud/k6TEomwhkUwV2eO9XI
      K//nB5z98q+zNX2L1sY6Vg8SUE7z7HPPMPLWm9wZK1NlNGMxqlFWoESO8GEQq9bOvlxB6mCB
      /tPPEw8eodUpOXPmLKl8ke56Ays7AcKbCxTKsOpd4NLFs6zsx7Fb7bS5XTgctZjsNnZmd8mp
      C0CJxZujmJw1/PDKbaqqjNTX2RGd1R/eB/4Emrh9g8HhM6j0RpxGPW0uEyNrcbTJPRL5CmqV
      klNPPctAdxt9vX002XVsp0GneLicoXMXqVIVWFvdRq3SACBDRjrkZ84X5qkzA5AO4t0Ksb65
      Sb6i4oSnAVm5QCJ6RDoPKDR09/bhbu1msL2a5ZVVQuEwUOb6yCjPX3oBgMDeFhWlHoCjoxjD
      w/3IKhp6B9vxLq+ADCz37ylw1LvpaqvjyvVbD8po6exhqM3K3PoB4XACo8EAQDFfIByMUt1k
      Jxo6opgvAiXkKCGfZHTsHmdP92Jv6kQjK6FXKMgrlfjWV1Fq1FDS8PznnqW19QQ9nZ2olAUU
      quOyA7tb/HhsBUN0m1AihS+QoLevF4six344gVqtxuE4vqHHaDwOfSie4PRgD+WaZvLJFFWF
      HGY5JD6Ob4WEPLYfoJCOklUYMWoUhPZ9xApqWpvq8O8f4HLUcHf8Lt39fRSLSsxVCiZnvJg1
      GTLKJno6nMRjMWTIUKvKlFQWCuk4yaMD0jID7W4Xt8du0nmijem5RWrr3XS3NzMzMUFNUzO6
      Sg7fYYqTHQ3MLflodbtAJqOYjpEoqgjt+mhrbSCQ1dHRaGJs5CYlnZGLZ4eJxaJQLlOWyzFX
      6ZiaW6TN42Fz1UtL1xDzU/c4eaINna0WWT7OP7/2E379336RiRtjlHRG+tsbWNkO47apKFpc
      bEzeJa+u4sLACebW9xjq7WJxbpL61l6Su15wnkRTTGC3WgHYXF6gqrYZu65MKC3Hoi4wteSj
      t7UFtdVMORVldfeIo815ep77VWxaOZFIGIvZSDAYYXvHT7PHTSl5RFlnJ7K7Sm1LN+VcCoej
      lok7oyQyMHyqn7n5ZU6fOUUmkcBk1LO0sklnZ/sn+gX6rHtiHWHlfIpEUY35E+wRrpSyxNMy
      zEbNx1JeIh7HaDJ9LGUJT4boCRYkTVwGFSRNBECQNBEAQdI+VAC2VhdYXll7aGaF3d2d9/1b
      ED5L3jM3aIb/9B+/zvbmOo6mRm6MjKDU6vnG//4mBgXIVHJmvYvE0xUWFyb53re/g6OpjfmZ
      CXKpCEtbh8QOdlhamEWhr+LG6Bhmk5655V0xF6fwqfTIEaCprYuLPQ7+7u/+gaxGwfyyj57e
      PhTZOP6NRaye0yzM3CBweIS7o5sTrY0cHh4ys7xOZH2JO8tr9DbruT21RDASJ4dezMYsfGq9
      ZyiEnELqiOl9E//+332e8cU9+oY7WJnPYSKDymTEoJFTW+sgZ8hj1StZ2tjF6XShUZSJ5BS0
      GjSo9BZsNiV2dYaDnU32drUiBMKnkugHECRNXAUSJO0Dh0Pfnl2DSoG33x57z9rjIcbhSORj
      qcT0wvFEV5HwRywvG+b7Px5931UT4zcfO7lXIhwhGVxhJZghEon+3I+JRiLk7k/2tTC98JGq
      6p2fP/7j/oRd72z7vHf+I5WXC66wEvzFJ+yKhfaZnFmikI5w5eo1Vn1+4Hhf/Gwo+fE2P25a
      1ffur8IHtU0uyPzK4yZZe9SjZcRZmD6+2jg///7PhvsoPnA49ORKGZcyxmGuwO3Rtzg8jFLf
      2kwsGkWhsBNJBjGpFCxuhbEpy5SLEZqf+R2c8iMmpsYx1jQzN+rF6rGjKERJBQo4u1s5c3+I
      s7IC/ngRs7kKAO/SMvlEEFkhhbzuBKFACE+1EX88hclow7cxSzoPuoKcztMniAYC1LedxZyc
      Yyde4eobPyQWz6OxatDoqrn89BB37k5zyWxn5NoMKmMNvoUb5NFSkOsY9nhwN6tJkuFoZZng
      wQFKs51caBt331kGutsYG7vF8vIy/d1dBEsVWuVhrvlNNCti7K1P0PzM71DZn2EvGKeqSo5M
      XcvCrJfuzkaCh9ukAgVe/tpX2By/STgFhdwRgc15jCf6ySaNFHJxfvrjV9kIxAjv+yhqqlGk
      wwRTFWqMRWTlIvrmZ3CmVqDrAmvTt9hbnUepdeJpNBHdW0HuPM3KdAi71cH8vSt8/ku/h1lZ
      YGJqHL2+nq19P1qdArMSgqkKv/Gll5FrDOQiW8T2ZeQqcHiwT3uzi2g8TiYehIoGNRAGmvN5
      1hRQpdSS8G+RyGn53d/94kP7yzjwMua9iYfaxuQeInR0iN3q4PxJC7dujLO1aUBdyhBPgr2p
      mufPdXLrxwvM+P28fHmA8dktbHYrkY017i0u0NviIpKI4WzxEI+WePWf7hArq+jp6f5YAvCB
      P4FaagyMb6dxGZVsrK2h0aoJhe4PMb7/mqUVLxtr61SZq7l4todUrsTq6iKpZAy/P0hnzxA1
      tipsjnoG2z0U3xninI6wtLLPysbWQ5+pM9p47qlBDvfDtPcOUilm6RkcJp+JUd/SQfuJDrob
      XKxvbpCvKFEpwVVfz8DAACWVnlankYLawuWnzwIquoeGKCWjJFJJdvx+WjpOcqKjlQbXe54X
      UMqytrGHWq2hb3CAxYUlQIa8cERXSzMLB1k0MmhsaqSnrxfju7Y3nkgydGqITMnA3vwYrZ0e
      SnL5g23OA4lUnlPDAw+2L5HOP/joikqPp8GBsuq43qtra6g1alRVZp69eJZ8KgeyMulElEQ6
      j7ujm6ZaO7F0nv6eE8SCfoKxDGq1iu6BUzQ67A/2gW91EVf7ADpl5UG5FX42rPooHqKzb5hk
      7Oih5jBp5MTlStQyADXnLj6LSpZCb3RRbdI9sr8S6fwjbePf2XlQL4DugTPYTWrkWgNNdgOZ
      XJHo0RFZuZGhk41MT95mez+MRq3G2eihraWeeKbA8GAP8XgUShn0tmYcNsOH+3Z/CD9nOLSB
      dOwIrVaDiiLza35O9XXcH2LcCrIyhztbKA012M1VGHRy0uhRFxN4N3dxO+uRKzQgP74vTFUG
      uU6Jd8lHq9vJ9sY6Fpcbo1aFxWwmFosjo4JJryJaULG/Pkd9aw9bSzO09Q6TTx+PdlcUy2jM
      eibvTjF4+gyaSpZoQYUsHcIfK+CqMWM2mQGIxmIYtUqmvJt43E4U8uObFYrlCmq5Aq1WRhYt
      lWyWaGiXotqKqhCloLLiaXQQPvBjqKkjHAig1+uwmI1MTc7Q4vFgvL+9BlWFyckZ+oeGOTzY
      w2E1cJRVolEUUZVBZTGjKOaYnFmirc2NRa8imisjq6iolLPkE0ccpio0Oe2YTWYigT18oTQt
      9TWYDTpiaTDpYXJmiZZWNwoZUAatsszimo/Wrl425+/R0N6Hgjxmk5lcKnq8Dxx1vPK9b1Pb
      McjTvR58oTQD3e2seqfZC0Q52X+KndU5WroGsRq1RGOx432gU3EQL6JTgbpyvA3peIzrr3+P
      UKWWP/rdX3tkf1n0ikfa5p162arkxNJAOUM5mySYltFcW8WSz4/b2cT66jztfcPsr89jqG2h
      SiUDORi0Kibn1zk11Ek8WuAosElFZ8egllHrcPzyAiAIUiCuAgmSJgIgSJoIgCBpIgCCpIkA
      CJL2ngDk+Ku//i9kgiu8Pb3DqneGYDTKN/77/2B1y8/64hyhWJrNlQU2dg7Z3Xl0QitB+Cx5
      T09wGbu+wrXRe4SyKoKOVhLjr2GwVdNsTPNX/3gVo/EGumKSL/zm7yFmYBI+6x75CWRynSB9
      uI5abyW8vYxcW4WaHJuHCRw2E59/6SVOnxrgxz/5CXu74gggfLaJjjBB0sRJsCBpjw9ApcTE
      nTHCsfRjX7K/vfvY2Z/nJm4TjL7/e7d2joe1vnvY7buFw0fEorHHfu5HkQ5tEXpXdWKx6PE0
      ilQ4OvpZPT7o2caPm7EZeDC8+R3x2Mdb/w+lEGd7P/4Rh6kfP/cZKtwcufrQBAjvtr394X72
      Hrfto6L32+XBc5zftw4PC23t8PA3qUDsflvH4rHH1qtczPLD114jmSs+tp6PDId+5znBvsmb
      yGs7UFQKTC8soK5UyKfCJLGQC26TlutwmQ0UslF0zT3srS0Q3F7B3XUWd62et0cnOFuSM5uI
      4GntZHFxmeo6F8pchFHvFn/2R7+P379DJODHdxCl2qgnlEpgt9mIhWLMTs3ypa98BVUuzPSy
      j7oaO4HgAW2tHu7cXaGuoQZVNobO4UZJDnNeRoAsiUiAaFpFtc2OshghhZ56i5q12VHaP/9n
      VB/Pm4t3ZozJuRVefPYCqYqR6zfvcfbcWay5fd646+Wku47o1jJNXZ1sbO5SXeeinI5xEAyg
      U1bw7UWprjOTS8SxObs42axmLwA3rryCyuYmuDHHwNMvEdlZIa8288IzT3H9yutYXK2EfVvo
      a1wUovtYGtrJhXaQmRxoSyUq6gpGlYzVdR89T71AnUlNLrjC98e26G91sr+7Q0t7Jysbmxh1
      Bk6f72Nldp7tgyjDvfXsBEyYtVHu3bhOXqmnv9XJ2vYODs9pTnpqgDxjI7eQG20k/Vsk5SrO
      dLtZuv/cZ70uysz8FlrjOKHDEJ4THWxt+WhwdxDYmGP7qMDvNzWwML/Ars9H7wk3Ga2ZrYVJ
      6t2trG4d0Olp4s03f8ily5/Dv+ujrecpmuuOp5Cc9np57vx5drd2CQV87IfSnOhoYMu3h/tE
      EwfLCULJELH9TVRmJyZlltlRL5//sz8ic7DD1OQkdnc9Y28u8od/+vv86Affo2PgadZn7zBj
      q6Onxcnqxg5Dz32O9bvXMdTWQakI+Rwjt+5itLkIby+RyJZQl2WPf06wZ/gimtg20wsrRONx
      4rEY8fvP89Ubqmmo0pICcskYuTJE43GsZhuBwAEqvYWhgSFy2QKXL11i7to/0XL6Epl0lGRe
      Tn9XGwDxeBSb1UYuEWInkOHcxedIxY+4+OxFhgaGcNVYWPXtcenyJeLRJJcvXWJ3bYr61n5U
      pLHYrQQOAsTiMdLROJFUgbPneqlxdpKLhvEuLZDLZgjEk5w/1f/whqr0DA0N0NFzmsGTLdh0
      Cg6CxzdsvPPcY62hmhpZ9EHd/evTJIsGlhbnUZFmN1bi4rMXSAQPoZwjlsxR7WrAqFbS3tlH
      7wknSo0DteL4v9OKqor+Jj0LvhiZbA6b1cLhYYB0WclwbyfxaJxYPMbi/BJKrYpU5Hj0azmX
      pLX3HDurKyi1KibHF3jm0mXODTTz/e+8RiWTo+eZS9TZTQ/+VzTY6qi2qNnZj3PpQh/R6PFN
      M6VUlHC6wNqqlypjNTV2I5s7P3vus91Rz9DgANlslkun3PxgdIHLly8T2plCoW3B03A8AjOR
      jGHV5nhzxk8lHkRBlk1fBp2iRAEVQ0MD+LeWUCi1ZFPvf0RKZ2WccusYXQhx+fIl9nwrjFx5
      C2e9gaWlALlMjngyz6n+4/vJw4EgilKcg6yKoYEz6FXQ1N7JcO8J6t0dVFvUzHuXUGsUJOIp
      zjzzEtnQDvPL66SiIdKFCqveFaostdTVOemoMbx3WhT43L/5TWx6FdGgn43dAI3NHorxAOmy
      iraWJsxmM+PXr6F1NdHqqqPaVcP03UnstQ4KyTjmGic1dgsA9U4LY3cmOf/538A3eYO6xnY0
      sjTBeJ6OlmYA5JQJxzJ4PB5sNjNywGy2EA3vUdaYaK23M3pzHI/Hzb2JKfrPXECr0WE2aEgn
      E6j0Zsxq2AnGae3wYDWbkCs0mA0aaqutKLQmGm1VLPuCuJsaSCSzGPTHk+MqyiXSZQ0GNfj8
      AZz1DViMJrzz07hbO7FbTdS1nmB5/G3qGttxe9rRqcs01DtJ5eS0tDRSbTEBCkxmI9z/XJPJ
      gtWkxhfIoCxFUejtuBw1yBVyzNWNkA1iqq6jlE2gMVqpMSjZOoiilqWJpMucHujmMJxEW44R
      qZiwGzWo9GaaHCYOw0nOXRhm4s4drK52jsL7XHj2ArM3R9Gaq6kymDAbNZhNZsxmE2a9krGx
      G+QqCtJFJQ5bFbv+A1wNDdQ76zBZTDTUWLgztUx9sxurRQ8osFSpmFw94ksvDHJjdIzO/ovE
      gyuU1Qaa6p2Qj2FtOYtOlsRq0hPPFKmtqSGXT1Hf0EI85Kf9RC+BcITmpkZSqTxVVVoALObj
      oep6LaweVXhhsIXRsbv0nTpH98l+UskkNosSg7UWq16BLxjH09FCIRElma/Q6O4iEVyiptGD
      SVlh0RfAWWvHbDbR3OgiGE3T4mkhEdxmfnmDgYFTGHQK/AdhGhoacNbVHLeN2fTRrgLFojHM
      FvMv+jbhY5YIH5JVGKmx6B/7mmQ0yPyan7On+iXZbZNOp9HrH98+4jKoIGmP/AR6R3xnmleu
      zxNPxDHrdeTyOdTyChMzS9SYNeztH3Jz5DqHqQJGRYGdYAK71cSt6z9hfXObTEVFKhpBXs6w
      sR+hnD4imChgNVXhW99CrSwx7d2k3llL7OgIr3eJWmcd81P3qDIa+O7/+yesdQ3oyzH8yQqH
      vg1SJTmyXIyN/Qjri/MYzGZkhRwlpZqFybvMrW2gKmZIV9Qoi0le+fvv4jwzQGzTR0UpY2N9
      DbnGSCl5xHdf+WfSvgj+UgyD3srB3h6paIBAIo/NbGRzZYFEOsdrr/0zJls1MpmGXDZJKZvg
      2996BUdLM0adhng8jkaj/YR3m/BxeeQq0F987cv86X/+JpZ0lGSuTCqZxjvtpawtk9zfI51P
      crC5QKlugMZqB13Dvdy8ehUzFRJN9UQjRxjs9WSzGY4iYVbXU1x46gy3b9+DSoWm+kv4d/bx
      b69SNhzfl3v3xm16T1j47mvXefrCIHfvTtPm8dDosJPZnSSYMbK7m8ManGI5L+PCU+eZPdhh
      2uulTVNmPiWjv7ef+Nx1Xn11Ho3FQltjLb33T7b3/fsYIz5ytT1MzdzjhYsX8bR5sGWLyBzN
      zEyOo5SrONrfomPoaQAmJicZevolWlvduO1wczGIPLdGJlniZIeHkM/L0YERlcmNeEbGZ9cj
      V4H+5M//kmbb8U3Pw+cv8tJzTxEObLO46qPW6cTiaKPTbaWzsxOTXs74xDzlTBxfKIlGAWqD
      hTqrASrHvzgVxQxL634y8SChZJZ3Hh/W0NzE6tQ0qQpUmayYqrSYTQZmJ++i1LlnI7IAAAOh
      SURBVJmIHx2wF/jZ1QO7vRqlSnm/vONryPl4mLszi+h0GmYm75EpKXE5azh95hTlQpLZpfV3
      bZmCarsNpfI48wfbm0RTYLdbUKqOm6GxuYnJ6SkAmpsamZ6aJBk9YjuYZG1+nINQjGI2zsLq
      Jm39Zxi/PUVHrYLDsHgy12eVOAf4iKJBP9uhDH1drU+6KsK/ggiAIGmPHQpRSEcZGRl57Kxq
      v4h3hj68U276PSMNMpEDbk3+/Nm+SoUMt2/dIV+qsL44RziehkqJw0CISrnIvdu3SH1At7cg
      vNcjR4B3hkLEVkfwVZ1lsK7EG2/ewOxwoc5GHuqyV5VyHESLPH3xLMuz99jbC+Dx1DLny1BX
      Y+PcYCdX3/gJu+kSz/S2Mr20TXPVEfP5dp5rNzI5u8Hnv/QFbn77H6l0DxJfm6Knt481X4A6
      VxP+rXnSeVBVlPzKb/wakb0dqvRybo/dRtswTD60Qbu7kaXtQ5xVZSyeHpZmF3jx0sUn1Z7C
      Z8xjh0IATNx6m5WZWzh6LlJKJR7psrfabCRCh6SLcJTMcOliN96pJbqGL1JKJyDlR1nTQ5Oz
      mlAwQMC7hqHexZnTpwmGAsR9qwQzUO/yMDDQjbW2nnI4zulLl0hH/VTZ66hx1tGk15MElLIS
      E4t+zvU1U2WpRq1U09TaTpVaidZoZtM7h9ksOuiED++Ry6B/8/ffASCNm1/9XD1Ok5yx69ep
      rm9DVYgyObeMTl/hMFWmWCiiN1vRKKC1vo6R8W0uXn6aog50jQ1QVY8ieQWFoRadQk5z9wmc
      zYPcHr9DvaUKZ/sJTErQuhvQAR6Ph0ZHNSPXr+Lu7EVWPh6/oqkuoAO2AyHIp4iqe8ivjFPT
      0M7y3AShUICG+j7KlSj2mtr3bpIgPJY4CRYkTdwQI0iaCIAgaSIAgqSJAAiSJgIgSJoIgCBp
      IgCCpIkACJImAiBImgiAIGkiAIKkiQAIkiYCIEiaCIAgaSIAgqSJAAiSJgIgSJoIgCBpIgCC
      pIkACJImAiBImgiAIGkiAIKkiQAIkiYCIEiaCIAgaSIAgqSJAAiSJgIgSJoIgCBpIgCCpIkA
      CJImAiBImgiAIGkiAIKkiQAIkiYCIEiaCIAgaSIAgqSJAAiSJgIgSJoIgCBpIgCCpIkACJIm
      AiBImgiAIGkiAIKkiQAIkiYCIEiaCIAgaSIAgqSJAAiSJgIgSJoIgCBpIgCCpIkACJImAiBI
      mgiAIGkiAIKk/X+LqA4F0SrKUQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='child fi by county' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nMS9yXMjaZbg9/MF+06QIAlwZ5Cxb5mVmZXVVdX7TEttajNJMwdJppF00HKT
      6aKDTKaj/gpd5iSZqUc2pla3ZrqrpqsqMyu32CMYCxnBHQABYt/hqw4OdzpAkMGIqgw9swgC
      Dvdvfe97+3Oh1WqZsixjg2ma9Ho9TNMEQNM0dF0HQBRF3GB/NwwDwzCc6+7PoyAIgtO2/X0U
      3L9fFARBQBRFTNPENE0EQUAQBGRZRtM0p99ut4vP5zs1F7vf0bHb7Z411tExn3fPuHs7nQ7B
      YPDC8/xd+gWQJMnZz4u0ZV/rdrsEg0Fnjew1ttsMBAIIgoCqqvT7/TP3MBgMIooiiqKg6zqR
      SARRFGm32/T7/TPHraoqHo/n3LmdN3772uh3WZZlfD7f0AM2srRaLXRdd24eRV7TNBFFcQiZ
      3M+/Ddztnjfg0cFfpE37syiKeDweNE0DIBQK0Wg0CIVCgLV5giA4iD+OiOw2xxGNe9z2epwH
      7jnYfb3tmYu05R7neRAOh+n1eqiqemZ7o/thX3cj/+h9Ho/HOQjPGocgCPR6PWRZdvoXBAGP
      x4PP50NRlDPHfV677rGPfrb7OOvglRkBQRCQJGkIIewBXxQBRVEcOknPGtzbOMFZhHdRME0T
      VVURRRG/30+n03EQrtFo4PF4iEQiQ32NG5ObCM+Ci27OKKK+z7zs597n2U6nc4oD2Hs1br7u
      tXcfDO6+DcNA13VkWSYQCCBJEqqqDkkSPp8PTdNQFGUI+U3TdA5Z+yByE9jbDj/32N4G49b9
      FAHYP/b7fYLBIJqmoarquQg67rskSc6CSZLknMDnTcK96OO4w3kwbgFsZDcMg16v5yywffor
      ikKn08Hv9w/Nwb2o7zKO0XtGkfSic7kojHK7i4C9D6PPusd6XltncZpOp0M4HAZA13W8Xi9e
      rxdd1+n3+47YM66tRqOBJEn4/X663e7YA+f3tXZ2OzbRjyUAmzXbSNzv9x0W5P5ns+6zTk0b
      ZFk+pSe8bYBuuOhJp+v6KXHCjcyiKKLrujMXr9dLp9PBMIyh594FIc4b60VElPfd2N8FIc5D
      sHFr7d7vUW7hXrdWq+V8liTJke81TRt7ABqG4fxmi+K9Xu+dRMJRTuUWXc8C976O7ckevH1i
      2jKau0N3Q05jojhWBpckCVmWkSTpwhNz9/Eu7H70Pvd3N+u35Vm/3z+kfI0Stxsx3mUMZ3Gk
      i1z7EHDWOo1DPhu5zkMsr9dLNBoFLMRWFMVZB1tEGgetVgtBEPD7/UiSNKSPviuM6mzn3Wfj
      6pmkZiO/La+5JwQnCOSW2ezr7sV0cxP7miRJp4hl3Ia8q5xrK7RnydmjfdrXbMuXe+5uIvh9
      wFnz+V1Z+/sizHnjGDcmXddPra97fWw8scVLsHBGkiRisdipvtx74fF4UBTFOWzfd919Pt+Q
      OHsROLcnSZKcSXs8Hkeug/EWgbNYvlvudChvDDK6keR9lDyPx3NqXG62OA4MwyAQCGAYBp1O
      59z2fx9y6Li5XXSu4+4zTZNAIPBOYxg9IC56co673y1Td7vdIVGn0+mgadrQ4TKuHU3TnAPy
      XQwe9gFr46T9/Dg4a43H6gD2A7Zi0m63AQuRvV6vg8Capg3J04qinHmqu+VzN1KOXnsfsC1V
      7sUbp0iPkxftvt1EMGqXH6cU/y4wDvnf1u44ncReO/ukPUvMcMP7jt/Wn0bH4gbb0OAes60E
      n6Vj2Ajs8Xgc65F9gL2NE9i/20Q3zo8waiWy8drn8yEIwmkCsBUT2/IjiiLhcBhd1x1zlSzL
      zmc30tvEYIs4tgnSLUO+C5K7F8296e4T3kZ+t7/CvUBnIdjohtgLY1u/Rq0Fo+MYXeDRti96
      otv3v8vpa4ONMB9CjwiFQnS73VMixigxjNPzotEo3W7XEZPGnsSDA8z9/DjroPvZ8yyL48Zm
      gyAIDlc6RWKaplGtVmk2mzQaDVqtFoZhIMsyfr9/iFJt5LORHU4QZhRZLqKYnCUauZF/HOu1
      5VO3fdkegy3G2d/H9WmDYRhEIhFqtdqQ1ettCDYq1tjzeB9Z9rxNs+fh8XgcRPyQSrSba7tF
      WfdcR5HW5k6RSGTIkztu3KOWxt91rGetjftQO8UB3IqO/bnZbJ5SMHw+n2NSHG3UHoD9d5yX
      9V0UwlF53n2/zWbdJ/04dntR8UUURaLRKLVajVAohMfjOfc5N5GME1MuAudZ1twgSZLj1R7n
      yf19wLg1Hjc2+zf33EdNyWAdqKZpOk7HarV6ynBi36uqqqOHjVu/ixC7TWS2eG6DLWqNikmn
      CEAURWKxmOOxkyTJcZ3bbmx7gHaYgVvcscGOv7GdYONO9bMmdNZvbnf4eYsxiuzjvNJnEYq9
      BtFoFEVRHNZ8UTgPYd52v/39LGJ9G8t/H3gbwY5Tuu373aKJm/OPQq/Xw+v1IooioVBoyF8A
      DBHEeeEQFwFN0wiHwxiG4eiuAH6/f2zbY0MhbK262+06Xjy308INtkjkNm3aiK/r+tD97pPi
      bTrBeYh+HucYtUqNc76N9j1uHLIsI8sytVrNsW+Ptj86htFxvI0A3veU+33CODl7HJwllo5+
      H/e8WzkfF1io6zqKogwpy+6xvQuYpomiKPh8PkKh0BBnurAVyEZgd/zMWaCqqqMw+/3+IYuM
      2+s6TlS4iGztHpP9133i2AQ7qgzaSG675W3qd4/hbdzENM0h69K7ijcX1R/Gff5QMG4uF+UG
      o8+MMxzYz9lRxe5T2X7OMAwajcaF+rkI2NGobpHb1kVG8e5MM6hNBLFYzNGYu93umZ3asrht
      JnUrpXaHHo/HGdx5p+95iqC7PThtFRptx20etO+xxbiLhGbY4dT24o2O5XcBt27zthP4IiDL
      MqFQiH6/f6btfRTeVbxzc9aLKPn2/tRqNeBkrhexpr3L76PgFnfchHlK3D2rAUmSCAaD+P1+
      IpGIIxKcN2kb4W2xaNRkZysg73OansU5zrIY2PfYka2jm3dRC5UdnzLa7kXHaoPbcjLa7yh3
      e18i0DSNVqv1O8nR9vrYyDJurc8b31k6wzgjxbhn39VAchHweDwEg8Ehh5kN55KwW563ZSqP
      x4M7gcZ9r2maTjSfx+MhFAoNKcvjJjZO4TsPqUeft+PQxy2YO6zbfn60vXHg7mfUuvG2Z+2+
      3Qjv5lz2c+NCQcb9e1dwW+Z+VxjtfzQQbpzHfdwajyOmUXib7P++BGCLWGcl3FzIUC0IViiE
      x+NxxBzb+mNvtn2fqqqOnGcTQSgUQtd1x6Q4qpi4JzzqSDnvxLBNguM8oHab46wT9qK4N2f0
      WfeJ5d74d/VcnzV+d3SsG0F+F+T/oWGck+tddZj3nZctctk4NS6Lzuv1Eg6HTznTzrOenakD
      jIJNBJFIxAmSGxceCyeKsTvwzR6ErVjakxoHbv3hPLCJ8ax7R/sFHDHuoqED4xJIbHjXU+l9
      N3+ccv/70EHGwXltj1uH99Ehzvv9rDWSJMnJN3Afom4cssMo3mVM7+SqFATByacdZ/q0Qdd1
      RxSyw6ADgQBerxdZloeod3SwNqewYVRfGE2/PCtZBywCc58GdjyLvVCjfYw7eQOBgBNxaSPf
      OG/1ReB9Fc7Rsf3/xR3e1bN90bW6kF5nGBiDcBfbyRUMBp2YHruds3IPzoILcwAbRFHE5/Mh
      yzK9Xs/hBqOnQ7fbdeyxPp/PQX6/349pWsFntkdzdMBupD5Lbncv0ujJ4TaV2rK4HTLh/s0t
      Co3CqLKqKAper9dp8zyZ9X2Iw22yu0gbNjFepO/ft/XK3c6oAu8WHWE4vOFd23bD8d/9Db1K
      nsDP/wmRW3dQFIVQKDQUa/Y+8F6B17at3z4d7YoAbrBFjE6nQ6PRoN1uOyeyrQvYOQajJ4sb
      UccpivB2x4wN43IW4MRFf5GFs1P7bGvQqGJ3nvx+UZl+XF6FPa+zQsdHxzAOfp86hZtrjuNQ
      9nV3v6NzeV/wyiJLc0l6T+/j9XqJRCJn6nDvAu/MAWywrSzuCY+L/LRZVrvddkQoVVVptVoW
      EioKpm1mPGuBRpEd0M8zxbmec8ZnGGCamK6Ne+vznGyaD8ul32m3h5JQLnYKm4NRnwalXkc/
      YyxjEca+93ewirwv6M0mb9OazrTe2b+f3Dj0u6ZpeDwywhnbovf74AWhWkLgJOvMfv594b0J
      AE6IwI6dsZFhnCPGdnfblqTDw0Omp6c5/uv/nVT7eDARGEK/wUdd09j57hHLVy+9dUz7j7ZI
      ZeYAqNVLpJYzCAj0u11qx2VmlufJ7meZu7qGKEnOjux9/YiZhXnX3KzxNCpVQgvTBGNRfED2
      4XMmU1MI58jDlUqF6aurznetr1DJHpFanqe0n2ViesrqGwgDOtBrd2jsHhGfnDzVXrFSZO7W
      5aFrua0d5m9fG7pWPsgTTCYJxqND1w8ePWPu+jpwsrrZVzvM3bw6dF9p75DE6gqSLLmefcr8
      7RuYpkln4zmhpXlG4eDRBpN+S0FtN5p4FmeITU+S39pm9vqVIdIv7WcJJOIE4zFMIPd4g/Ta
      IoJpogsCh89eMXdteJ/7nR7kC6if3cUv6LSKRcxg8JQRxePxDBlELsJ5ficCsEEQBEe2t4Pm
      RgcBOMF0siyzuLhIuVwm82d/Qftf/UumMqlzB6q0O4SjYWTv+cWRjkM5YomE1V+3TXwqiSiK
      7L3YYvXONTw+Lwc7+5QOclz+yccnz0UjxCcnTrUnyTKG10siPW2No9OlcVRifi5zSg525qkq
      TAzuB1C6PdRuj4n0NL1Wm4nZlEMANrTrDaj3To3BMAy6ojrUHkCjVGVibnbomiCKNMp1JubT
      Q9fr2fype+ulGhMLmaFr/U6XiYUM0mCNK/uHiKJIfD4NgkCvkGdifrgdgMreIfFg3FovUcIz
      PcnEfJpmuUpypA9D0/BGo0SnpwDolCtEpibwDLhqLVc4NVbTNFG6PbqtNl6PTL9aJTDIWbd1
      T1u6sIM33c/av4+D3wsB2B0IguAkR7fbbUfOdg/GHnBud5fgm01KR3n6qRXq332F1+cFwR6s
      4Hw2TZN2qUrY5zmXAEaTYjyyF7Wv4Av4aZQqpC8tAhBLTSF53z51TdUoFQrEgiebOH1pydIH
      Ol0CofEV3cy3OKLGizacIgqAWqnMxEr69P2cZvuJ9DSdRuvUdW0QJ+Xut1WukHu+OXRfv92h
      sPma9A2LMxRebDF7+RL73z9k8bOPURVrP0u7h6gDp5I/HMIfi6C0+nh9PnzBAK1KjeR8GqV7
      OhxD8ngwXAaTxEKG+tERk4sW1xbE07pO+TBPv9XGFwri8Xkp/cO/4vXmHoEf/Rj/zCyx23fw
      RGPUXr+mkz3EG4sRvXoNbSQYcxz83gjABkEQHDOnHfdjJzzDiYWn8eWvae/ukv7Lv6L78AGz
      lxaJJaKn2jNNk6PXeyiKQrveIhgJn9m3pqh4vSfyeb/fQx6YVNOXlul3unh8XsBEUzXyWzvO
      vYY2XroNziRJX14duja5mKG4vU+ncExycJIBKL0e/U6PfqeLaRiOmGSCW/gdK7+LZ9RO0hQF
      r3848d00DEssGAemyYP/82+IxCLOJbXb49n/8wvW/vgn+MNW0npkZprUzRsOHZmYYMLT//v/
      Re30ABNDVSntHhBIxND6fRRVY+fBBmq/z/IndwAobG5T2t6j4/UjShKGpuPzJZ2xHDx8BoCh
      62iaPpi7QOu4AgKUdw+IRAJ0603ApNtosf/kBYIgggCdah0BCMSiyF4rmiCZjNJGJV3Zh/Ie
      m/e+xTszS+TNBl5NQ56Ikf/NPxD6478guHrpXH/P750AbFAqZba//pronbtEIhEn59ZmVZN/
      /hfEVQXBMMn/m78l/cefjG1H1zR00+TWX/wh2198d+okc4PX70N1B0FJDMmzblj+6IZzEgmC
      QHPv6NQ90mBDT/fjJ3PlEltf3mPCxeGyu/tMLqaZSKfY/vYhcihI+vLKieIKmOZpR41lzdAR
      x8yrqyp4A8NpiP1Oj3AqOXZemauX6B6XWVhZHLqu9hVe/+prAgmrQoPuC+IZU0EhNjvN4ke3
      nO/bX9/D4/WSf/IcfyQCpnXQ+Abcb+7WVdRGg+W71zneOaDXalPNHSHJMr1mm/Wf/9gac7tD
      tVBh5sqwfO8JBAh5BYIugnXDm28fsnR1nRff3EeQXPkmykn073oQaOQxJxPUimV8AT9zQYnc
      3/410j/7FyidDrHFRbQxHPYHIwBBUUj88m8wtp5zvH4d/63biIP6QNVqlVA0ylQ6zf7f/g2T
      d+7w5k2eRL7o4uym87/WVxAlicTKApVCieTM1Pg+BWHI2CII0hDBuPFLlCTrnyuatJQ/Ij6Z
      dLhGo1o9e36iyOzVVd48eEZkgFThyQTxlKXETsym6DSavP72EfH0tNN5r9nm5bcPiUxNONPs
      VOsEI2HC0dNI4I+GkDzD21TJF4hMj18DGG8V8fi8rLuU5nz1tKgEOPK/DRMLGXRFIX39RAnf
      /u13zmfLkGDNrbmfYyaTJrkUJHuY5/pf/JFzn6HrdOsN+u3hyhumYaD1NWA8Adh7t/bRLUxD
      x97g7FFp/HwFMHQDj8/L4vwUj/7l/8ZizMtRZJLpf/afIUej9Pt9ZFmmXyj8cATQzeeJxiN4
      ejXU+7+i9uBrjFCEjuzBu7SKUq9SvHWX1sEh1Z09fF6J5T/+6enT0TDZe/gMQ9NJLmQoqhqt
      WoNQLEK9VCEUi9Dv9GhUagRCJ8nspmlicKITeH1empU6wWjklEXSNAyqxyWSs1OU8gVmFix5
      tN5ps/r5RydrO1C6bH0nMpUkuTxP46g4CN/Q2H2+hQDMrswTiITJLM7x6sFTkgtp9p68AAGW
      f3QLX/CklElxZ5/9R8+5cuXaKQ5njGHfSrfvKOU26JqOKA3M0KpGp9mi3Wjh8VrBgp1uH0NR
      iSSiRBOWwqp0Ohw932T+49sUX27RrdepH+ZQrl3GOxjfhaymLmOAzXH9Xi+tUoXI1CSiJLL/
      6BnBcIjc/Ye0ak0S82kwTbr1JqV6lUihhKaodOpNolMn3K15XIErIHs9CIL3ZH/PGgoChnGy
      Zrcvpy1FXje49z/8d2T+2/+e+I2blH/1C7q//LsfjgDCq6tUWh1iE1bg3BQG9OvQBzYs6t36
      23+NZ2GJ9J/8CcruGyrFKsnpYStI7vkm8VQScbCwqdVFjrf32X72Cm8oSLPRJhCLMHPlEptf
      30c2BDRV5fgoT2Lh5JRs1hpopkEhW6SaL3Lw9CWaohKeiNM5LhOfmiA6Ead+XMHQDUr5I9Re
      D8kjYxoGpb0sAMXXu8TS045ZcXptGQSBYDRMJJlAEAT6nS4795/g9/kwgVAixsqPbp+5VlNL
      86idk0Kypmli6DqV4jG6eJoAxBGxzjRMNv7xa8KpSUzdQJU99KNxJtYu8ear70lfW2NmPjMw
      JlQobO9ROsjTbrVJLc2x/813xKYnSd26wty1S2x9+Q2X/+yPLOteNMLRyy2SLvOnrg3nV5iD
      E8VwXZuaTfHmN98g+XwEMzNIksTczSv0213K2QKZgQnWNAwOvn/A3NVVlG6PrW8fDek8noCf
      3QdPSc6nic+k3u78EsDUhx12pmkiiALzlxYJPvwVza//nszsJAeS+MMRQCA5STWaor3z2pLd
      zIG30zAwDRPTNACTqaDMxpdfMHX7NtGYx/ptoJCBidLpklqaG2p7amUBpdsjMZUkELbS3g5e
      bIEkE8nEKDeKNBt1hJIVXtBtdyjnCtz6Jz9HkiU0UWDxR7dpV+ts/OILbn3+MSUpR6/dYWI2
      RSF7iC/gJyQG2X/wDAMw+n1Sc2nWPrpBr92htHfI5OKc5aN4/JyP/ukfOuPzBQNc+dlnzvfd
      Jy/PXStLdLOQSNd1+p0O+eMCs1dWmJubOX3/iA+iuLNPZHqK8HSK1KVl57qh6wRiUZIDjiYI
      ApHUJJHUJKb4kKUf3T5leZJkmfDkJLVsnnruCEEUKb3ZdfYDoJ4vsP9og363i8froV48ZveR
      Qa1Wx9SsAgUiEAwGAIHstw+5+pd/MhjDiEdZFDEFaz6yx4PS6RKIhJFkiezLNzQKx9z9g0+o
      lGvEpqccxG+UK2Rf7wACnWbL0klMk26zxezNK2PX2TQMYlMTOHXqhB9QB5A8Hq78T/8Luf/1
      fyYZHN+N0lf49jf3yFxZRW82OG52T6hbAFEQUFWdTr1BeHC6CoLA3sMN/H7L5GaaJv1Ol1Ay
      gdpXmB2YOvVBIn673qTT7bD247unwnlDiRhzNyzZNrU0x/bDDZbWVwhFhy1Nm482WPnohkNs
      gXCI8s4Bk4tzNIplZtaW6DSaePy+IfHFNE2KOwfUiyXyWzt4/D4m50+bNIu7BzTLVboaeCci
      dDttgpNxJuZmxoiEBpqi0mtZIee5V9tEZ2dYuXmdnXuPwUUAh4+e0S6VKGxtk7q0PNSWKIlD
      yG+aJr1mC0xoHpfotVp4fV4W7l5n8e71oTEsfnQT0zR5+e++ZG51num5abJ7eT7+L/8TKzas
      1+f42+8d61nq2iqNRgt/pIXWV+i3O3QbTac9ORSidnRMfGaKtR/f4WhrF1GSCCdjBKNhTKDT
      bA0RTmx6ioURRyBAs1xFOcMMPco0TNP84QgAwBsKYczM0TvaQUBAEAV6rQ7VYhlJlqhW6lz9
      yUccH+RpKwWicxNkri451iLTNHn91fcI4onsbRoGGAbx2ZTlZzBMcq93ydy4TOUg70zM3tzI
      RJxGpUYkmTiZ+Mgi2BBKRNFU7ZSvIRyNkNvaYeXOdZqVGqWjIs16k1dffU+30eL2X/4J2edb
      tBotBNMkvbZMs1SlclQkFI9y9Q8tbrD3+DmxqSQe//ALSVrlGpd/+smQ/lIrHLP39BWCALqq
      Ifu8hBMxmu0egalJauUGkkdm8bMfOebBUcHYNE2u/tGPKe/n2Pn2AYamsfoHnw7WdvjefrvD
      wbNXJBfnWfrsIwKxKFu//orqYY54eoZ+u4OuqoQmEk7bgto/ybJS1JMaQQGB0lEJVbXMupqi
      ookSvliU7MYmszeu0ChVKe0dMrW2gicWp763S3xmivBEgkufnezVwbNN1F7/wpGogihgKmeZ
      PU8n+PygBCAIAkzNUn/8/UD8MWlWaqTXVtB1nXKhTGlzm/D0JLomEJuIDQV+HW1uM7OYobKf
      Z2JBIJSIUc0XiSYT6JpG+SBPo1Rh9ccf4fWfvPbobfEuAgOrRKNFs1QhObC+yF4P209fEgyH
      ESSRZDqFPxggvbLAzsYm/U6XfqdL5s41fKEg+98/YXZlkeLOPvO3LLbba7Up7Gcp72W59kc/
      RnKFdq/86BZb3zwkNpUkEA5iGCatSo305ZVTY45PTxGfnqJxXEYOWF72SqnGyk8+GTvHXrOF
      d8Qxp3a6yF4vM2sWVyi83rUQOjPrOOucA8A0iaamhmR9bzAIgsDh0xf4oxFq2SPWfvopYDnX
      pEFYi92GuwhC8so6ix9b5lSl06Xw/BWTyws0j8ukLi1jGgaqppNas7jE4/sP2Hv8wum7dpAj
      OhGnVigRvb6Ormk0yydWuVa1TvblaxLpGYIuji0K4lsdkWDpMfrS1R+WAADi12+gPv2GYMA6
      9aqFYyv4SdXwBQNk948Qj+tEM7MEouGTKEPDoF04JnX3OuFEjGquSGU/R2xmiuODA0xNZ/Hu
      deZuXhk6OXvt0wVu1b5Cv3OS0F/eO0QSBEvZUk5iR+KpSRqFCtF4An8oyOHWNhOZFMFwiNTc
      LPnXu8xdvcTxfo701UuASSASprZfc9rwh0Okr16yuNBI6qjs9RKZnEA3TaRggOzTlyzduOI4
      p0a95tVcgUquwNyNyzRKFeZvW6LIOAKXfV5qhznS16843tTRKNL4bIqNX3xJOBqmXq4jSjLd
      eh1/NIKuqgjyMOfTFIV4ZpZ4ZhZMk36zRatUBkGg3+3TqNTZ3dhCVzUaR8eYX31rIXa3T6/Z
      ROtae2EMuKrtHNQ1zfqrqJZcIgjEM7PMXzkR38xuj7m1ZceqZFn1TNr1JkqjyfLNy4RiUXaf
      vSKaSpLMWLqSIApnE8BgeQ3DoOyJc/N//K9/eAKYuHmLN38dIMigOpwkgWmSnJmiWqoSSGeY
      //wTJnpVsg+eEJxKIsoegoko3kgYtdfHG/CTnJ8lOT9L+SCPPxKiVa4NmRLBCnFuOKEA1mxL
      h0ckMjOUiyd242gywdwV6+RRXXEjkiyzdPsKx4dHqNUaC2uXONjapjbRRR7Eo9RLVZROB0EQ
      qJeqTC32aRbLFLf3Sa0sOG0pnS5Kt3fKiaX1+yx8ZAWXXf7pJ2RfbJHdfMPKRzeHkLVymEeQ
      JS7/9JOBSFQ6l7N5fD5iMym2v7lHIBqm32pT3t1n/ua649fwhYJkrq8T9Xnxxussff4J27/9
      lqXPPkIQBHbvPxlq0z8oa559+hw0zbKGvd6h3+6iaTp3/vl/aIm1jSbN/T0mF+cwdYPDp8+5
      +tOPhw6mF7/5nuyLLQRJ5ODBE9q1JqFkguyTDcCkcpjH4xGtiF3TpH5cHijYZdROD1VRiE1P
      Inlk+qJIJBHHNE0Wr69zuLntIgDx7NBwTEzDoKz7yPzn/xWiLP/wBACgxSfpFPcIhgLWybq5
      zf6rN5gBPytri0SUOrHpSWLTk/TaHUtUOshReLmFqGnMXl51TrXkIBjr4Olpy4rP72NmddgD
      ahgm6auXhpDn3t/8kvz2PhgG1fwxqfSJpUUQRVILaQo7B/S7XebXVjjK5gitzBKVZTwBP6sz
      l0EQWP38Lt1SjWuff8zB5vZQv/O3r7J7/ylLd67TbbQobu8RnUoSSiY4ePaK2SuriJLI/M0r
      ZF+8Bk5SDkVRxBcOUjrIk1pesGKsfF6UXo+g73RlAxtSa0u8+vtfEZBmWFiZJ+SVUNod5PhJ
      fX5vwE+7esKxGPgddFVDV1XUXg/TMGmXK7SOS2jL8/QaLefAAGiWKqim6JzOg8S9DuoAACAA
      SURBVMgtK+NuTIqsIAhEU0nmblhiotLpUtg5YP7ODeeeXqVKLG3t7f7DZ1z6mSXqxZctkSz3
      6o3d2FAOgiAIdOpNcoOwFq3XxzPGoQhWuMuxFCP9n/4L5EHw5g9OAIIgoMeTZHM5pit1ohMx
      Vm9fY/fFFpf+8MeYpsneo+f4Aj4rsGogx4qiwNz6KrFUku3vHyF5PcRnU8RnUgBDC3C8e2ht
      Sm9MeewxOaLJpXlmb99AU1T6hklhP2vFnlhPWH9EgZ03b7hy4waGrhGfnSYQCXEWWOHTJ04s
      2eNB9vl49suvmL+2Rmpxjm6zTa/ZRpREJ+1TEATkgUfarcOEE3EaxYrTvifgo12qINmlKe1O
      XQPQen2CkTCJWWuNwhMJdr9/zOTqEqGJOAjQPDpmNjNNM18GQB2IgK+/+h5/PEZhcwfTMImm
      Z5i8tMrLf/yK6EyKUv7Y6UpXVPyuanmeYIB2rcEUFoc39NMiiOGKc3KMGS7whIIEYhFEScIf
      jRAaEK19mrvnPeoHCIRDTGVmsczmPZpj3vPQ7/Xhyl3m/4v/BkEU6ZTLlP7t334YDjD90cds
      /1//B+Wgn9pRkV6nS19RyL14DYKA7PXw5B++YPbSMp6ADwyTWq5AZGoCXzDAyh1L9n319QPU
      bh/Z50Xp9DANA8M0qeWLJAebXs0XrE5NS/Y3hdPpkgggeWQkj4zH72d2eX6slSGRnqbwYpdm
      tT6E/JblpsrhxiZ+n4/wRJxgKMSrf/yGtZ994oQuLN29ztPjMh6vl/BEnPBEnHatQXbALfrt
      Du1KnXalhrC8QLNcpV2tD5KLBKrZvNOWpqgUNrdPONxQ1o71p11rEM1MU8oe0anWWf34Jpc/
      /4hGqUIzmyf34jVXPrszZP6UB1YcfzTC0qcf4wZD12nkckxdWiIQjZwE95kme/dOxKVTRXHF
      06Ka26M9GvEJFoHY45I8smPmtfeuXa1z8OSlpQtdXuV4P0dftUrzK72eY7kzdIPy5hsMwzKl
      m6ZJODmB+dmfsfTTn1P8/ju6j+8j720SCQc+DAHE1tbw/vxPSeV38Pu8HLzZ5fLng8U2Ldls
      ZnYaQ9dR+wqSLDM1PcX+iFix9ukd2vUGpmniC/jZe/wcSZLptTvILguIaRp0ag2alSpz1y+z
      c+8JkiAi+bxkbqw79xU2t6ke5EjPno6rMU0Tj8+HFPZiNmVeffEd/mAAURTptNr4gwHWP/+I
      frvL0eYOC1fX8IWCvP7tfZY+uYU8CPuNpiYp7mcJxqNIskQoHmXxxmV2v39Mp1ghfWkJjwEH
      D55RPS6z9uOP2X/ynLnVRWI3LYVWGESQqo0mmUtLZ65z9ahIcDZFMB7laHOH8kGeRDpFOBGj
      XizjjYY53DlEMAwMX4DqQZbGUZHDJ8+pZvPw3f0Tp5wJmAa1vQMk06DT6hCciDO1ukQgFiWc
      jPP87/+R8EQcwzCoHOQA66SuHR2z/+QlWl9xELOaPUJ+/BxdVREliVqhhChJ6KqG5JGp7GeR
      TAMEgephHnGgHAuc+ODm1lfICYJl2i5XWfzEsjIdPNxw1kAAkgsZ0gORrbSf5fjNLjH5S46+
      +xXN3V2Wrq5BMkajXPswBGDoGscPHpLJ2DZkF/sTrPgNsBbPZnWWLX/4VJZkiWgygWlaJQ/b
      9SaplQUixQSGoRMfBIgdPt8klIhzvLVD8zBPp1zj6ucf02t3ONzYpLx7CJpG5toaxefakChR
      yRVo1eoIooDH7yexmGH+zjX2n74iszSPYRjkdg9YuG258gOuJJ1QLMLM4hx7j57jj4Sp5Yss
      3b4GAtSOiiQHiR6+YIDM5VXyqk4kHiMyYPeGYRKMRZhamqc7SJxxg9LuWLLugGtOzaeHxDtN
      1ZzTdXpticLrXQ6eb6JrOqWDPJ/8879yfBBP/u2vaRwVuPsf/yUAc3duUNzaIRwNEhzEClmN
      KiwMOLCh6xxtHxCIRZlcWaRVqjB/zdKvUnMztHsqU6tLLPyB9ej2r790TKH2350HGyx89gkL
      WKd+9tlz5m5fxx8J4zU1QokYgq6Tubbm4IFpmnQHess4Q0Cv3XXuHQ1eEkWJuWtrBCKWwUQp
      nBglmselD0MAGCZiqUAzKNLt9+krKlv3nhAaCYHtdbr4IyEEBLrNFt7wsMxty9h2orgNwWiY
      Sr7o2M394RCJ2RSVWJTJhYzlzs8e0W220XWNxMwUC7evUj86xgRe/vYec1cuYRomeORTnk/A
      CVUWBOF03urge7/bo1IskVycY3JxDkHYIDY9aeU0VBsc72WZWsw4cznVxwB5J+ZmyT59MfRb
      7biMFAkjeD0kMzOWd/n1Lum1E9Nhr9Nl0n/yNk/b/t+tNwkkk8guBTqemWVhENPvgHB6XENh
      F4JAZWefbrWGpCpUs0cs3hxO1Xw3EJy1S8ynyT96Snigq7hB0zSUfp/tJ89pVev4gn46zZaT
      W2IOKpdbuoFB8c0eWteKrWpVaix/dON013wAT7ANks9H8k/+nHK1jKn2SUwpNA+yzLhkb9M0
      KRzkmB2w+PzrXSYWM6facjZIPEm6l71e+i3Lk+kLBUkNLAeGJFHOHpGcm2X/2SskWWb+2hVy
      2/vUj0p0jyukVxZRFZXCQRZfMMD8jdMbaugG2kDBFgQBbZBzYOg6uw+e0Tw6plerUy1Vufsf
      /XuDpJsT0PoKmqrSrTcQBEtB1lSVcr5oeWQF0BUNUzohMm2gSBb2syi6QXAiwZU//Sn5F6/B
      NJlayJB9+fpCCeGS14M08p6DerHEwdNXTn8ApTe7JBczVAtV2sdFwskEtdwR87csbieKIss/
      ukn+m/vMrC6iN1vOs56An8Mvv6NXOXFW1Qtlsm+y9s4BUMkVkR8/d75rg8wyyeNBt+30I0q0
      KIr4Q0Hmr69ZHuuNLUxZxhhwvFatTv7NPl6/l3A8ykRmmrlB3kElV0DtKcjePgICuqahDRR/
      XdM/DAHIgQDRpQUichvZG+HNvackFtLk9rJMp6fx+LwY+vCLtJVen3at4QzWDYIA/fZJ9KQo
      SSzcvML+s1dMLZ4Ezl368V22v3lAMjOD0uvjDQyiFjUNXdMs3SHoxxsOsLa+dOb4e83W0Olp
      Gla0pq5qBGQP859/zO7TV0zNzdAoHDt5sJqionR75F/vkVxbZUK0bOCZ9UWMdpeZm5fJXFtH
      EAS2vvwOQ9XY3XhFt9lCV1QOdg7wRSOsDhDQNE18kRClgzzp9WV67S5qX3EITlO1U843gNrR
      MY3DPPXDLLH5OdJXLhGZmWbhR3eH7jNNk4W7NwEsi5pp0mv3Ke8eEEtPU9k7pPl6l7mBIi64
      is2KskQiM8O8OxBNEJj7aDgKVu2rLLgSbva/v+989gQCtCs1KvtZTF2n12rji0QQRYFGqWoV
      YJAkIlMTBCJhJ0I3lIizeOcaT//hC5RuD8kVaqIrKo18kXa9RXx6klq2gDDAqXrh+AOJQFgn
      RHjCknUDIT8zq4sYus7rrx8QCIdQdQ2vK2xA6faQRRG928cpquGKSNS6PZAk2tU67VodXdVQ
      2132Hjx1dArLwXKE2VNQO11MRWX73hN67Q49RcEjSVak6VtCJ/yR8NBJm5xN8frrh/gDPpLT
      U1RyBeKzUyRmUuT2cw4BzF5ZZfveEyJzGSKDRBl/JERkcgKPv43aP8lem15f5ej1Lqs/+ZGl
      MHo9RFwJ8p16g8MHz/AZJq16g+1GEwRhuDKCcLrkiyAIqL0+S7evInu9ZF++YeuLb2i1ekNh
      GgCl7V1MVTlZPwEqb3aoPtmg1+sTioQIRyMcPH8DArTqTV79+muC8ajlrMsecSA9c8K167kC
      B/ceWmKjKAIm1d09vK5Yq+LWG4TBeCv7B6jxMMFomLkrq2RfbTN7fR3Z53O4gjBQ0CcyM0wM
      nF+vv37A8V6W6dUFTMPAGw5Z+srWLiKwcG3dihdbX0EwYXp+1gr1DgY/HAF0iwUKO7tWPnCx
      zPHeIeFEDMErs/DpLUzTJOeKBTFNk0giPmQy0zUdSZbod7qUDo8wBPBFQtSyBS796BbC0vyQ
      9xGgXijRabVZv3tjSG/Yevyc1M31C2V81IulE5e8YaL0+vgiYXr1BpVag1alTnrZ4jzNYonj
      7X3q+QKix4MnHnccPm4lTcBCTHu8rUqVxY+t01fyyKdEm+1ffsXi+goer5fU3CyaorL38jWt
      Sg3fABG6zZblMBqIVcKgsEA1d8TU3AyCKDB37RJKt8fh6wPmLy8P9SHpKqnM5JDxQTmMk5xd
      GrsuU/FZiqUCmc/vIogiE5lpWrkik7NWss70TNLyYHtl4qkpTKCXDzKdOUl46R2GmJCtiIge
      JnPX19n86j7tap1eq02rXMPj99FrtSnt51D7Cs1ShZ0HzxwLUqtax+P3Mb2QoXSYJz49yeHz
      LVKZWYc7nuQwnBwYE7OpD8gBpjP4D7fQNQ1V1YksLnL4eINuq2PVfBwgZyVfpN1TEKJRXj9+
      TjQRw9B1DE2jelwmEI0Qz8wQnEw4SSmV3UPn9HNDq1JjZmWBdrV+6re129fIbe8TiseGojPH
      gdrrE52cwDRNNu89ZubmFZYWMqi9Ph6/z7IMbWxS2HvBxNwMhqKw8tEN+p0ex9kCpZ09Jpct
      scEmQl8ogDaojIdponT7rrAJgVapMpQZFYyE8bhEDtnrYXZ5gez2PrGUlcbpj0VIzmdOynAN
      bIj9dncowtUb8OMLnM4Hfp+y6oIBrXKN8GRiEG/sTk88SVEVRNHyGAvCkB9ClEQkWaaUOyJ5
      adHiWIZJ3xTQDKtcjKfvR9M0gpNJEARimVmrWsT+IYu3r7H93SMwoXhUol6p03+xTffomG61
      ji8WpXlcRusr+ENBqoUSIid6zwcjAEQBb8B6zWp8coJALMLqTz7h8OETss9fo/YV2pUanoCf
      xZ98ij8a4fDbe4SnJlD7CoJukLm6zs6zl0yvLjrhAwDR2RRb3z1i/dM7Qyd6q1ojmZ5BU6xg
      OP9ItKQ/FLAqRZxDAO1qnWapCvEoxb0sC3eucfhqm+RCxnlOFEVSl5aoyBLTKwvO6e0LBUiv
      zrP9cIPk0gL9VtsJELMJtttocrixSSiZsLKjnr5E0DXqhRKRVBKv30c1ezSUy2CLOcFIiInk
      BFpftTzPHg9+l8PO2WTvmDddjmF844LIDMOgf8abgUzT5Lh0hP8wST2bR+srdLoKuuwZhFub
      tCs1JtMnfhZdVdn94jvARNcNlE4XMrOUcgWigkC9aMUATa0sogxqKfkjYasulCukHaC4vU9u
      aw/NgFa9ztU//gmhZIJeu0u33mD+9lWCsQg7D54xvTwHJrQaDcKTEw6X+2AEYDTqyB4Zpdej
      Vauz9+19gpNJ+n2VYCREIBwmMJHABPLPN5m6tIw/GCAyOUGv1aaeK1ItFEkuDCeUmKZJamWB
      XquNPgh7aFVq5Ld28Pp9yIsyk/MZDp++ZG5tmOX3+gqpRIzzoJIrMLU8jyTLJBYyyF7P2JAI
      j9+HpmmUD3JDhZ1ESXJO7tLOPpPuQlEmHG3tMn/nOpqicvDwGcFomMn5NMn5NFu/+IJIIk5s
      Ik4sczozDLDyXwXbXj7+BNfHlo8/TQFjCUDXqdcrgEm5VGQqPVy0anIiiccjM7U8j9Lr0+z0
      Sa0uOb/Xj4pojfrJeogimdWTkOvDV2/QNY308gLHhWOWPrlN7tU2L3/5Bbqq0imVkT0emuUq
      hqagKyqz66tIXg9Ty/OUc8esfP4JR6/ekH3xGtnnpddos/azH9M4PCQYiyBKIsGYFbrhCwYJ
      RsOIkkSn0fwwBGCaJmLXioNplCukludIX17l5Zff0260uPyzvxq6v5YrsPfdA+bXlgDYuf+M
      tY9vkd/eI71g5bZ2G0069SaBQSy4KMmIgkCn0aLwZo+VO9ecamOyVwRZQlVUPANRoN1o0qw3
      2L73hOWPb9Jvd8ciwERmhvLhEfPXTzzIE7PTVPazQ5XVBEEgfXWdg8cbYyubAXSOj5lZvOlc
      11QVyetFkmWyj5+z8tGJrqBrOh5JxuuR6TSalhd6TFkPVdURRZF+p4s3NN5vYuonsTM2J+g1
      m5T3DofubxRLpJeHTc9ev4+JyJRTZMAuGGCDrmns7xzS63bRVZ1Ot4/S6Q0YsUCnVkdrWXsF
      lkVqbv6kj067w9FREW8wQHRmkme//JLZ9RX8psms68CqVaxKdi9//Y0lJldqGKLE2h9+Tv75
      JgdPX3D7P/hzwskE9//6b3n2979m5fYVGsdlOvUmjWMrjLvdaLC/2UcQBSrZH7AqxChovR6H
      Wzv4omGCwQClvSzBaMSK03AVkQIrDn1ubZHYtGU5mbuxzt6LTdBNDp9vMpGZZWJuls3f3uP2
      oPSGKFou/FA8aimA4iAxQhAwNJ2JzAyPv/yOaCJGbCJOu9Xm6s8/pdNo8uTvf0Pq2mVkn+9E
      dh6ckOX9LMsjtSpD8Sj5rR1CkxNDIdmCINCu1E9VdrCRzxPwDyniselJeq02L37xG9Y+HTZJ
      BqMR5v/AChc5fPKC00UbB20k4xReWSEj4sRpbmYlhA+/U0EQBATDQB4pdSsaGpqiOPcLgxIj
      eADTdLz0bjAMg0RmepAfATsPN5hz1XDt1pu08nkmMjOYJrSOK+y+2MLQdTqtNr5IGF3Xkbwe
      plcX6bR7RGZS7H7/mG6r44wlMJibN+AnfW2dXrNFpVhB8ngIJmJc+cPPqR3kOHj4DF80QiAR
      w5uyPOme2DFSMEiv2SYYj7E48OJ7nr78cATQefMatdUmfWMdj89Lr9nBHw6RXJhl7/5jMjev
      4fH7MA2Der7A3KWTsOZIMkEwHqV8kKeTP0Y7rmACPllm64vv8IeCdOoN9NZAvtYNqwSJYSJ7
      PYiShNrvc8NVC7Rn6FbeaSJOanme1OoyvvDpUoeGYSB7Ti9Tanme/Kttx2ssCAKCLDF7bY29
      Jy9Zuu0qPDuQ2VulCtmNk3KEdupmIBKmnM2f6qNVqhKKxzB1g2KxRK/TJeQW2QZhAuIgN7rb
      aLL11T2ryJRgpaDqqka9VCW/mwUER0XSNI3wiPjnCwY43s+7LFVYJ7c/Pjg9W2xvvGRhbQUG
      L0kp5PNM3byEpqpgWiHduivy0y5RYivBXr+PxatrqP0+hcM8CzevoKsaT3/xBe1KHaXbIzY9
      xbU//xm555vMXb2E5PFQ2D3hVs1ShdzGK5S+Qj1XQOl0uPPv/ylKN0njqIA/Yr0mKTJpGRFC
      EwnCE3G8AT/KoEq5DR+EANR2m5hXIDAzRTAaweP3UXizz9zVS/RaHRKpJEcbLweJ7CL5F1Ye
      gChLTnCWrfi16g0nIEz2yDTLVVKZGRiRkVu1Bu16k5nl09WMW9U67dpJaIKqGXhDw8k1pmli
      aDqdchVhKkG32abwZpfF29cG4Rgier9PeT87VAB2Ym6W5nGZ4u4B4UScYMwq4ioA8ZkU6RHT
      43mw8/0TMldWMS+vYJom2c1t5u9cO0HQMTb/gycvh1Is1b6CHI6SdolwAJu//GJsn+lra0Nc
      Sm10nLaX1y9znD9CUzVUVUFRVMyAj7ai0zq0ippVD3Ls/fZ7+qpKZHICbVCb9WSQJx/rR0Xy
      Pi+GphNPT7N46yrP/vG35J5vDX4/xtR12tUGkakk2aeWN3///mNWfvwxgWiYnSdbzN66waN/
      8yumlzJ4YzEr5LynsH/vEYIoUssdMbuUtoLucgWrRD5QPfpAsUB6r4eoqUTiMV5+8R2xzAy1
      Ypl+o0VqMWOZQQ0DNB0DjYnUJPNr4xHFcNXEFEXxxEnmgk6zxd7GJpc/vXPqN13TqFTr3Pyz
      n5F9sXVKXAEL+Q8fbaA3m2itNt1mi+L2AT6fl6OtHWbXVxAlkbnLK7Sqdcr7OZILJ4FpC3eu
      0ypXKe0ewEGOdq1Bs1iiXixhmjoT6RlHdzkLxiF3IBRk79FzMtfXTxLhXb8DzmuETq7DqWx5
      TucvXARqlQqVWgk16iWSmaayc8D1v/xTxMF7InRNQy0dM7M0R7PbJbU0j9LtcfDkpZPP22t1
      nMK6odQUiZUlNEWlsr0LDF6+4pURgPmbl/H6/fTbm8RSk45IfP9vfkGrXCH7YgulryEXA0ws
      ztNqNFn60W061Tp79x4ztTRHIBpB63Y5fPYKBIHE3Cxz19bRNI1up/uBokE1DcE0CSdihOpN
      Fu7cQOt0Wby6NrYa8OGz4arFuqqx9/QlkizRqtaZdSoJi+P2lkA4RGQycaqAFEDxIM/c9TWs
      AlZWOIW7khhY5QvVapX5K5fQNZ2j7T2SM5OEE3GqR8dUcwUS6Wkkj4fwRJyjvSzR6SSGqqF0
      e076ouDx0CgcM3/nBuW9Q4LTMySvrpN7+ARRgOmlWQJjiv2OOvNsYkjOzaJrGnv3n6DrBh6f
      hxOxxnqmU2+MNjZ2T+rFkhUZe5AnMZ9GEAVEr/cUQfS7XYqdBmLAS2wlxex0iOnbN/H4fXQb
      TXa/vmeJNzbB2g4n46TIl9po0StVMU2TiakkG198R2I2Rbvdofh6B03VaBVLmKYVUGjoBuWD
      HFPL8+w/emGJzI0GrUqV1Moi8cwsum6y+NEtGsdl9h9uEMvM0Gs0aZerKN0egUiIeqHE3qMN
      1HYHARN/OETl9RG9dpda9ghDVT8UAahIssRx9gjfILFCFMWxiREAzWqN3Js9wDqxW6UKmUvL
      hBMx8m/2ONjcRu31Sa8ujeUAtsghCgK5N3tWtQLdIL0yD7LkWIfmb1xm65uHdJvtoec9fi/i
      IExAlEQy6yvOb4mZKWrFEvuPNhA9HuauryOaJruPXhBNz6ApKvOffGTlz+7so+smiblZIqlJ
      8m8OCMZjXPrjn6H1+xw/eTyWAE6yoE7b/iVZZu7aOruPNli4ccOJjrVhb6QIl7volhsS6Wnm
      b1zG0HUW71w7ZWEydJ3Xv71Pr93i2k8/cX5vv9pGkK1K1rHMLKXN16zcvY4gWTVW889eoeua
      Y1ETEIhMTjih4ADtTpflT60YodrRMaLPz+pnVglK3TSZWl5AUzVSK4u0SlWW71r1f+rFEk/+
      /jf0Oj0y1y+Te75FNZvn5p/9AflXb1j56DrVwyP67Q6rn96h12yTf/UGX8BPOB5h/uYVPI+f
      k7lzgwP5Gem1pQ9DAK3dPYqHOVqNFomFDNtf36NdqlDJFWiWKoO67z76XcsUGZiIkblr1cks
      bh+QSE44pS9mB4FYvUFs/DiPZq/TpdvqsP30Jct3byB7PSi9Pgcbr9A0nePdQ1LL83j9PqtW
      qCRz8GhjgEgmvXoDtdE69SJo+0V2sakk8dQkrx88JfvyNSBgGiYzV9acMZgmNAvHrH5mWXdk
      r2cIoWWfD9WU0BTFycq6KMgeD8FoBLV/unT6qHlfcEVGjV4HEGWZ6uClFG5Cyr/aZvnWVQ42
      Xg0Rh53aKAgC8fQ0wViEvacv6TcbLN68jNrrWyXiWx26jZaTZ9zvdB3jmq4olgMMULpdRAOn
      aK7W66N2e2j9vlOLqNto0SxXaRxXWf/5Z8heL4cbm8zfuUH9qEB5P4vW72PqBpNLc2Sfb9Fr
      tsi9eM36H31OMB5j7/5jus3WoFS9gCBJSLL0gXSAVoNLn94dOvG7s1O0qg3mr62jqSpaX2Ei
      bb0l5nBz26mXH0pEKW5skQkO6wSyz8v8tTWO97JD1w1dx+P1snb3Oodv9pwQAK/fx+rHtyxF
      8cVr9p5b8n+jcEyv3WXh8rKFiIKAPDtFce+Q7OY2s4MXYkiShF2XEixZVfR6SK0tkX+9z+rP
      PqPnqna2//Ap064qEXC6MtnE8iLlnW2mV4fvA+jUGtSLZV599f0QktvxgI3jMsn5GcA3JMuf
      QncB8g+e0jnMOXnEAgKF/UMwrPKUuY1XNPJFJ3QCLOeZMD97Kjwilkry9F//HdHJJGBSyR4x
      nZ7G6/WSe/KS7QcbGKsdPF4v21tZPIvTBCeTZA/ymEqfYDxKs1rneD9LNVsgPjOF0eyQf/qC
      icwMzWKJymGOau4IbzBAIBFj8+v7+CNhfJEIlYMckuxBabVpHhWYvrREee+Q6FSSV198Q2pl
      kU6jSX5rF1VROHy0AaKIoSgc9RW0QQBit9li5/7TDyQC9awXLhR2DolPT+ILBghEIwQG2fte
      yedssqHrCAOzoyiKBBMxTFni+CDH9OLcUHXmZqVGtXA8lG/arjaIJOMICGjK8AsnHCSRJVJr
      y+zee8LaZ3ep5YvOWMAqbnW0cwi6blWVWF10Xu5t19rRNR3Z78MXCiJKAnv3HqHrJpHUJOXd
      A2RZJBC13mTYLJZRul0n9t2G8GSS7V9/SShuneb+cAh/JESzVCX3+DlLl1c5zh6xdPvaqXIf
      pYOcI2cPT3L0u8BkOsXs8sLQ85qusTBiGRqnELdLNV5/+dB1xSQYDrM0KAQmAjMuK9jCpWX2
      n27i9fnRFBVPwNprtdcnNjtFYjaF2u+TuXIJAYH0+orlezAM0uvL9Ltd0lcv0et0SQ+ywtR2
      m8U71+nWm1SPjkmvL6J2O6QG0kC7UmPuxmWUbs+qtuEPEJ6cQO/3SczNUj8qorTaJBcyHDx+
      ztO/+3cs3LlOeT/7YQigXyyw++g5k+lpshub+KJhYqnJU3ZogMPNbdKDmHK7UsLq5x9R2suR
      2///mHuT50byLM/v43Ds+0oQAEFwCy4RwVhyr6ys6qyqruqu7pnpsZk2kzRm0kE33WXSQTb/
      hA4yXWRz0EEmk82Y1Naj6qWWzMo9IzIWBoNkcAex75tj9U0HB0GQwcjMqlHm9LOwiADgcDgc
      /vPf+733XXIMmm0Wbq0a3NNyjRv3LzqrAmBamJ/gPLJHp5f2PRFWrTfpbe1is1spp3NYpur8
      lXQO3Wbj3l/9gp1//AjR7SafLRoEel0nnIga5BKTgDy2AJq/vUa/LTHQRcKLKeK31tn/3cfU
      0lnkwYDBUCH55usMjq8cD+D1ecg+3cUXCtItVRkMh+j9IUv3bmO2mOl1lnejkAAAIABJREFU
      JA6/fILT7yV2Y3HSGBLN5mvXP1fzfWHq7+loFkqcPTFNtjpfSOu6jjc2Q2DswWAzWYn6L0rM
      zVqNerFGr9U26u0WyyVOgkk04ZkJYPO48TliFM9yOBYSKC4H+d1DSoenqIrCzu8+A6Bbb6Gp
      CspwRPrZHuV0DsFipXR4ca7Kxxk03UiPpFoDudenVa6x8+uPsDkdtEsVdn/7CfJgwOmXj2lU
      Gjh9XgQByvuHxg1rNKJyeILd68FkEbE6HbhDge9+AOi6jklqMT8WSp3fuMGw2ye/d8SNKe39
      81DHGpMGEcbANQoChOZjhOfj9DsSR58/MhwB+4MJtOEPCZvXw8Jb96icZvHNzyOVyoa3lq6h
      iiaj9q7reLxuAl4XkqoRv7lKp1ojf3BCKBygWW2QmGKP6bqhdS/VDCkTVySMVCoRSERR6m1s
      r7B2MokiK/duYRqnWKdPd5jfXJ8036ILSWbmE7QqNfY/eUhkOUUwHjVmhGvkR1661C+VRC+q
      S75ggLmVy2mlpqrsfPwVg/aA6n4GeTRClC9/RrvZYGFxhdLjY1RFYTjsUztK45sJoesGVFy0
      WJhZNpCdFpsVp8+DOhoRu7FAv9MlfvMG6ae7LL55l3a5iqaq+McDThctLI/lH5feHJNpBBPL
      77zGUOpRfnFAYm3ZgMRnciTWV1BGy5SPz4ivL6PKMo5MkfjNG6iyQnH3YEKQP9vaY+6+UTjY
      +ttf4/S4v/sBoI5GdHae0+91sLmdRBeS2N1O/JEgJ4+fI5rNzI95pY1iBYYy+YfPjMflKv7Z
      yEsteH8kjNRsE79iA/RSvIItqA+HlA6Oid1cpZqvEtu8yeEHn+AL+ydOKMpohAmwOx1UzgzF
      A084hDsU5OCjL/BHQ7iD/smsUssUaJSqKFLHUIDQwRMJMeoPsTtsHH/wEeI1lkTT5niCIDCz
      kKSczjHq9RFMJiLzcZxez3jG9LP/4CmCyYRUb2LpWlHHArTnK8xeq0OrVLlYb+g63WaLZtlx
      /nByoY56/cn7BEHg9Ok+IcccImbQod4sMrP4spq1IAiEAhd2rsVylvnxzWD/wVN0TaNweIrT
      60GqN2nkS/TbHYatNsPegGahTLfRopEvGZgeTZ1UjbqNJo1ckW6jRTNfMpShGy0auSJyf2Ds
      r1BGHg7p1ls0ixVUWUZqjP+vKEi1Bo18CU1VJ9uf77tZKCMIAt6gn9Tm+nc/ACpffYXbpBFe
      XeJ4a5foWHw1GIsSjEGzVOXkq2dGvXgwJByL4hszoTRFZXYxiXnsLD+dwzZKVYQrd8Cr9fNr
      yx8Y+p1ut5PM011mNtaMJpPfS3jKh0BT1Emp1jQaTqo1giCw+uN3eP4PHwIQWZijfHyGI+gn
      vLxA+fiMYa+POpIJzc/hGXt56bpOdvdC5qXXaFI9PKHdbNJ51GDp1hoWmxWX32vgmTAolbV8
      kUahjDAeJGazCCaBUCqBMhyhjb0UdE1H11QEswVNN2AQ5x3ryMYK7VKVmYW5yTnK7B1Sy5eY
      sGcw+h++4IXzjNXuIHN8iGssgqUDrXodi8V6fsINvoF2AZd2B3xY3E6qZ3lsDjux1BzFw1Pm
      bq9hdbkwlSuGfdG9m2Se7ZHcXKPbaDPUTAw6HebfeQOrw87KT97j9NMvmb91A6vNitVipn5a
      Ibq6hMVioVmtM3fvNmdPnjN/ZwNnb4im6Th8XrRcCZvTSfbZHsk7N+lU6yiywsJbr5PZ2iG5
      uW5wore/YyyQruv0vviIcDyKIAiYLeZL+SKAPxrGH724m2RfHE0GwIVl6vUqCtMxXQ+/UDx+
      9fa+SIhuvUXjNINnJjKRCJwue/alLlKjhcPlZOfvPmDxB6+PqygYKVGlRuEwTTWd5e4//wWC
      IOAeH/uo3yf//IBaJsfCuPrUPDmhncuBScRmt5DcWCaxOMug06V2fMbs4uVqkGgxE5k3/IjP
      S7BNjxuL04FrTEOcXrhqqsqwP8Q/G7n0/KAjMZJ6l4zoPCH/JZiIIAj0G5f7IWazhUAsTGQs
      HamPv1cofBnt2pAuVOPMVgtOn4eNH71F4cUxPreLSChA9cURgs1q3HzGuH6b04E74DNMU5we
      BAEyj7fHNw3B0Fx1OWiVq1iP7DQLpUkvxGKz4Qr4DE5COke7XKXvcozxPn3jO/cHDKQuw24P
      VziEK+DD5nbi9HtJvraJWVG+2wGgqSpaIYfgsky+8Gg4fEk1AQzQWTVbwGq7KPmd38Gui26j
      RWjmYuCc68dMxzfpJcTXlmiUqjz/1a8vsa3AWIArFiuy3U4pnSN2c4VB2+iytkoVzGZjMJsC
      fsy2y6mNrutY7HZSr2+SfrQ9ed4XDRNfW+Tk4TOWX7uQXnF43VTGkOXpC/dcelwQBJSx4Qcm
      owdiczsnBn/n5+o6l8nxi9ecjZcZdFfDYrGiKP0LdOh4X1dV9K7+RufMr9jqItmdA5xuF3PL
      KfqdLqe7BwzaHaqZPL5ohK1/+AibywF2J+5wEKvTMVGo0wcDFl67jWASmd9YxmwRCa+uIFrM
      lA+M2dQZ8LH41muUDk7w+D04vG72fv0RVlXBYhJwhgKoqkbp4Jh+s0Ujk8dqs9LMFUltrHy3
      A6BfrdI6PsY1H8fl8yC1Osxeo2zWLFVpVKrYbXaiqcsY+1d1iw147vUWqBfv/+ZjDETDCLpO
      s9rg5MFTrE47gUTMIL74PMwsLyDVGkRXFi6pUFgsZmrZIiarFUfAR+nghNMvHhNdSTHs9pE1
      HVcwgCLLnHz1DNDRBgPDmfLKcQuCgD8Zo3iSYXbxgtd8fucXBMMgxGQyIZpENN0QBjuf9XTd
      MCA3jaVPrl7Y113+UrtDPp0xpOP7QxweF6oZivVTXA7H5I0dqYOp7pykkya/g4bWurSvRqdO
      5vgMQTAM/IaKQmbvyCChmExUixW67Q6RZJzQfJzY6hKaqrJw/zb5vSMCsxGyL45weRz0pR7N
      vGFZ2222aBbK9JptmqUK3UYbe7WOaDHTbbRoFSv0Wx06lRq9ZgthDOeWhyNG/aGhytEbMBoM
      CUZDBOJRhp0OobkYnXKNzndNiGl89YDVt+6QfrqL1W5j2OsZdzQMOO5A6tGs1PAnZon6FulX
      G5ew65quG3TIcTXhaigjecInNluuqQa9YgRcfdY/GzGAVrqOKiscPHhC4tYa2Wd7xDdu0G9L
      pJ/sYLaYEa0WOqUqiY0b6LpBtra53ciyyvKPf4AFlV5bIrCyPNH9P4+zLx4C16dzvqhBRq9m
      C0TGNkrTNEjzlGKezgW3+PxiP2/U6VP7nwyEa86DPz7D/P1b9DtdWsXqpGmXfvKc+DhlBcgV
      K6ReISx1HuqnX2H3uvFEgji9HjrVOvX8EzyREJqi4gkHUEYye188JryQ5OThFsNun50PPmPY
      G+DyexEtFqRqA3/Ih9YxBpguy+iq4SFgsjsQLBaGnY4hwDsaoQ4HjKQuvVKJQb2B2SIafmNW
      C7ic6GYziqqjajo2qxWrw47ZasXmchJZmkc0f4cmeQDB19+g+ehjLE4H5XwRp89L6eQMVVEZ
      DIZEFuaI37yBxWZFqjdf+p384aBhvtzt44/PEJqyBg3Eo7QqNRAMAaYb965Rc3vV7HFNnGNm
      zDYrcysLaL0e0ZUUmS1DzzJxa81wkHnwhHBqjlF/QL8jIbXa3PurXwIG9Dj78DHh+Tgnnz5g
      4+fvXxptk+vxFcfgCQfp1lvU8kVC8espkL1WG//CyxBvYEKwn3486vUZSj1G3R5SvWmkTDoT
      A3CL3XapkXjVVf3buK3YbBY8DjvN4zNeZAssvn6HcCpBcnPNKG4MR3QbLaxWC95wEIfXbYj9
      ZvKsra+w+8FnBuzEZCK2cWMCDWkWSgQSMdqVOoFEjF6zTTAeRbSYqZ5m6LWMwRBZSKKpGr5k
      AofXTa/eJJiMG/yRRpNBq0On06bX7lA7yyNaLeiqRmH/+LsdAPbIDH2bi7n1ZcqnWRxOx+Qi
      LpzlCF7xur06ApweN06Pm26zzfAKr9Xl80ykFeX+y7LoYOhC/jHhCRv6o5LUI3l/E3kwpHhw
      YuBSWh3MVitWl4vbv/wptbMcLz74lNU/+QEChhLF/OYaseUkjXyB6v4RNruFVq01Md+76vI4
      HTPL8+Se7L7y9a/zyroKg1AVhaPPvsI3E8ZisXL81TPi6ysTKDQYgLtpuMPV7vK3UZ7TNEOs
      ODIXQ0EgEI/SqRr9EEEwnHh0n4depf6SI7xoFvHNhIkkY+x8/oiv/sOviG8YHeB2qcr+Jw8n
      dMZ6Jk+vVsdss2J3OQknZqlni2T3T2gVK/R6AwPxmS9h9bgZdnvM376BZDczDHoJp+bQMBG5
      sUx2a5fNX/7kO/YIA0w9Cd1tpXqWmyicTV6cCh0u5bRXd3Rt13Py+tct/l5xYN8izg/D6rAz
      u7rE3u8/Z/7eJt4pp/pQao5GtkAtnaXwfA9vOEBma5foygIHD7YwobN073Uivf6kn2Ayiy9V
      w87DJIro15hjX2xgIrd7MDGynmT3RjWURr7MaDCkWSgTXUnh8nuZHac3w8GAyLjUO32BVtK5
      8Swg0Gm0YD4+OXevXFhPn6fz/0ytP66TWCmfZJB7A2rFMsH5BK2yARvvNlv4Z0Is3dmgWamR
      HPeF4hvLZLf3uXFjEdFsIjg3i1SqEl1JcfrVM6wOO/5omMTtDUKpOVqlKvH1FYb9AYk7N8fF
      CBt2lxNZ7hiqJA47NqcDs82CxW77jvsAgoDucCMIMqs/eI387uGFMsO1XfwLvc+XBsHXXv/X
      /0jXqyH84aHrhrVOeDF16eKffL6uYUFl7Z37YBKonmZ59utP2PjZe5RfGK1425SLfSAe5ezp
      jmHU0GzjCQen6vYCQ1mmkM4wGalTeP92rcHCa7dx+r0vHQeA1XVM4uYN6tkC3UbrWh4vXD6d
      oWSM+bF7i9linuoMfP2M89J5YKpsfc0AmEnNEVtZQBdNLL6+SW7viMhyCnM6y9n2PmZVo9uR
      wCROQIzVszyjXh9VNfwDhu02w26PZrHCifacTr2JKjxDlRV6rTajbo96Jk8z/7eEElH2PvoS
      RyCA2Wbl8d/8I+HFJI/+778jmJjlxYeff/cukfbN+yhbnyCO4adTL16queuaNulSXq3pX2Y4
      XTdDXD8ArnMq+UOO/dLjr7kQzDbbJRErm9PBjR++gSvgQ7QZ3dppYSpPODiRPcztHJCYIpF/
      UzgL5W8o7xqvBudi+GMz5J/uXHuDmH5mor+q69jcLrqtDk6PG13XaOaKhhjwmEBkczoQBJBl
      BZvTDgjUznIwNES+mrUmiqpQPskAhsar1W5DHck4xtD1br3J8YOnNAolhr0+o8EQTdfRBYFY
      co6RqhBbWuTcXD25uU7lNIsrOoPD5yXzaIs7f/lz0o+3Wf+z92mc5bFHIsQ9bvIPvmLj/XfI
      b79gfnOdymkGTyyG3e1C6Q+Zv3sLZTBk4f4tKqfZ734AzP7ilzz527/B3qygaxqP//EjIsk4
      OjqZqRq5MQh0pEbDmM51nVa1ji8cnDjB9OoNzgFb7VabQMJoyNSKZRT0sZuKwLksoMntIJ/O
      XtxBjT80SlUQRSZ5A+cw48sLSE3TOP3sAecmHqqskH/y7EL25BxApqqkn2xPnuo22yCYaJer
      yIMhe7/7DG8khCa+PIiuRXR+3Tn9OhfEyRc53/j6mwgYKVB2xxAXa+ZL5MZ9BR0onWaIjmEm
      otnM/Fjn52Rrl+S4TJ1L55i/uYqmaWiDAfPrK6iKgniWJ7W5ga7pLNzdIP/imJl4DGU04sUX
      jwwPA1Fk4c4GVoedudur5F8ck/jRW2Sfv0BpdRi2u3SqDexup/HbqyqaqqLIF0Sb899HPFf/
      0PVLEvaaqjLs9ZEHhpbQuUK3PBjSa3U4/uqZYUH7B539PyIEQcDrdTETdtFrS9jdTiJXdHOu
      C13XsdiszC5c1qE5b/4U8yWS48qPxWknupL6RonDyT5E8ZLmzLcNXTOI6fP3LjuUX8sp3jlg
      bnPdcE3fPSC6MEfhCnfB2PYPm6UEvn4ATK+Vvi57dwcDJNYMppsyHBJfX56kO4O2NAGQ1U8y
      1Ma2U1KzTX3MG+jUGtRyxbH3c4t6oYymqnTqTWrZAtL43061gRkBRVEJLs2TuHmDg0+/opYt
      0K7UqWbytMs1bO4cnWqdaCzKzEKSw+f7hJfm6TY75PaO6TXbDDsSmS/qhFJzpB9tITjd1Ip1
      SoenRIHsl48IJmdp5otIjRb1Up12o42iGdWuTr1JJVNAN5lY/tE7VI7T3/0AMIki9nffR/vy
      t6iKcn29/hVxXQVi0vmceu4PIXb/p8Z19+vzlO26aorFbjMM2jBYT1K1cXHwgjApR35TtMpV
      amd5NFVj7vbqqze8MgOUz/KMxp8/6g/G3gYCzWKZM5MACDQKZaZhhdPpmjMcwBubNS76Vsfg
      Z2gaflml2+vhn53B6nNj9nlA10lFguiAw+PCZLVgtlkxu53YRJGu1B1X0Jy441E8iVkyz14Q
      v3OT6u4+yZUFDr58gisYILw4T2xtBTAM0l0BP1azMOkwS/UmmtNHMDXHsNUkvr6CrqrE15cQ
      TCaG3T7xm6tYHHY84SB2t4tBt0/81hqdSpXy4SnNfPF78gi7e5/Df/e/4vK4vl179lvF1LrA
      JHx9leg7jpehAQKi2US7XMPudk74BqOORLdsuDPqExDbt5sBBp0usbXll8qI3xTR1UUS47t5
      +SRD+cyYhdxBP/ObRlVOHsnUs0Wj665zyWxctFqwj/WSLDYbDrcLXddRFBXZasYV8Bn4noDv
      0vrM5nLiCfrp1prYPS5E0Uz6+T7KcMSwI9Fvti/0VXVDLUJTVQJzMRI3V3n2u0+RxpWqWjqL
      KsuIJmGC7zFbrbQaHRqpOWonZ6iDIY1snn6rjaaoSNUaumb4D/tmI4z6A1RVY/+DTw0Zltkw
      ju/LJA+TiciNRYZSl1a5SqvawBc2AFGaqnG2e0BidfElPM7XxtQ4Mlutf3Au/cfF5c+4ulAX
      RRFVVSnsH9NrdVBGhnx3q97CH+3iCvgmFknnkbtC2nlVnOvrvypapSql4zNiaxd+vsKVY56Z
      Ar89fH7AyZPn4/dWiC4lJ83A6VtUu1zlZDyDqLLCk99/QTARNc63INCr1FFledKpPo9+s83Z
      ox2apSrdWsvIBBx2PAEf2kjm6X/8DcFkHLvbSSurY/e66PcHVE6zBtfZLBKIzxAeK4Acf/mE
      pTfvUHhxjD8WweZyUjzJkbi9js1mJbG5Qebpc2IrC3QbTYazIcLzCXRFZukNo+KUuHOLRrbA
      0ZePKewekH36/PsZAL3TYzyhAMHYDDOLSQ4+fYgn6KNVqdFtdnC63WT3TyZ3mnP0Sr1YHdeW
      mXreiOGU+tiwN7iEn/k2zZs/NqZLfeehadoEs5PfOUQQTfhmwkjNDppZIPbaXfY/+hx/JHD9
      Tr9FmETTS5zi6VAVheTm+iVq5zlc+boIxKMTLdIzqwV3KHBRw1fUiYKd0+Nh8f6FZunpsz0W
      r3Tdz7Zebtw5PG7m1pYpHKUJzsUQLRZ2P/4Si82GIIq8/a//gkaxTHxtmWGvR33KP61Tb2L3
      +yi8MG4kuqZTy+axOmzUskUGkoTFZqNRqqHICvWMkeY1snnkXtdwlu926bcl6tkCotlscAhG
      Kr1Wi8hCklAyjt1m+Z6U4ep13OdGx4KAWTSTPzilVihx8637NCt1ZpbmX6ZIjherV51MAAqn
      mcn/NVX5g9YBvVaH8vHZBCVpsdnwx2a+1T6kepPSWLLlUug6w96AVqXO2vvvAjDQMvgTMZqF
      Mnf/y3/F4d//muq4GXYe7XKNylj27xzKcF6R0s8Z8GMSfK/ZpuN2XV7cjtcfnWqDXruLzdW8
      dNG3SpWL4sDUvlvlKqXjNOhM4Mbnd5pBR8I3hix3my2KY3qijn7J8HryHap10s8u5FgGUhd5
      JKPIsqHmUKsb8GW/l1qhTLNUAfSxf9cQeThEqjYY9PpItSauSMiAVVuMO3v22S53fvQWhZMM
      N3/+J/SaLaR8gdU3NjnbfsGtH79B+skum++/TTWdJTyfwO52kXmyzeafvkdm55Dbv/wZ2We7
      LN7b4PjBFiI61fR3XAY9D73fm6A6D754TCQawRvwMZuaQzSZGCoyM+Mc8rq4vo598ZzFZiP3
      ZBeLzUK9VCW0kJiucAI6gXj0QiLb4cAfCZHe2mV+4wa5g2P8VyxJX3EgOIMBggsvM9EEk4DV
      bie7vQeaztnT5/Q6EiazmcBcHLPNxsqf/3ySqmmyzEDq4lZ1/KEAmqYZEuCqAaabv3u50hSZ
      Sl9apSqWQBBnwE/6y0cEgj6SGytUMnmckQi2KRBecHmRwu4B4aXURA8JILy+BjpkHm+x8eN3
      Lq3Nes0WwbEM/UCWmZn0KXQKOxe+DOfhDPpJ3ruJKBqwivTTHTZe20TTNCMdkXr4Z0K8+Pwx
      yz98HdNTgfjqIha7jcStNfqShFSqEVlMkn62R/LOOiZRZO+jL0k/fkY9nUNpG4R4zWxh2O0z
      bLUY9AbUMgVEi4XaWQ7RJNCu1LHmSljtNmrZgqHPlM5hMpupZ/LMLs1hs9uYTSW+H2EsdTRC
      O9oFp9EEc3jceMd3erPZTKNcJXCFwHEpvmU2M7swh8VuIzKfuJYre/Rom8TNVbwzIUyiCYvN
      imgWsdis18qOvypEs/mlcuv5GkDTNGJry+x/8oCFN+6gygqHXz4lkDTyWF3TyDx8glnQQZGx
      OazUjo5hNDQMpM0imqoiWiyXTPleOgarBdP4OBZ/8AbZLx7ij0WYXU6RPThh4e3Lju+ixYzF
      Zr22TGy2WjHbLivCtettcsfGDNup1Klnx8K9ArQqhl7/BelIp1Wqkt8/xmqzoaEz7PbpSRI2
      h4Nht0/h+IyB1GUky5SPz4zyKTpSpY7ZYWfUH2AfN8kamTz6uKkmmESW3ryHzekktpTEtndE
      9NYag7bEqNczNFlVjdStNXRZYX7jBmVnFo/XaxQfHPZxyVpg4dYNBFWhtH2ASYfdj77kxo/f
      +j4okQ/wCQpwwXudjp7UxZuIXvNOI151/U9XfTRFnTwSRXHc5Locsfk5yntHnH717MJb95w5
      +QekT688nnMIsmi4wdvdLoNGKZrIPdnC7vPRrdUJh72XQIBSrWnIdY/f35d6FL9hYdyp1IlE
      jBlrIPXGHdkx8Ew0Gb7AX1MtUmVlTN43HGo0RbmUZgYWUyy99w4AJ7//hOAYnl06ODHUKqwW
      Tp88JzUGrYWiEU6f7TH7w9d58fED/LEZ9j78gkBiFqU/JBSbwRXwGcdls+H1eQnNxRB0CM7O
      MJB61LJ5bJWakY6Ou+q5ozSHn32F3B/QrzfotyVGskK/I4Gm08yXaJYqHD96Rq8tcbq1i9wf
      0htL1Hc6Er12h6HUZef3X6DJCqmbq0itNoqusv/xg+9+AAyePMTjuL5BVc4VcYUDaKpKu1pn
      1B8y6HYnNqStWpPRYEhkfg5v5IpC/tSVeFUQ9rrwhgJI9RapsVvidHiCAVql6kSZ4JWhT/56
      9Sa6TqfW5PTxtlHzdjpYefcNNFVlIEXp5l5uhgGTFMThcV0LkpsOVQfHOJ1z+r0cHJ3hDgZw
      eFw4vG5efPAp9/7qz64c98X5yW3vYXc7DWvTZIKn//gxMwtz6Bi9in5/xNmXjwBDiuT8eESL
      4TdstloRxQu8jqZpDIdDdJOA0+chtrqI3O2RvHmDTqXOoNvD7nQgms04XE6YzMBmzDYr4miE
      3O0zaHVQRiNGskzx8JTowhz9kczyn7xD+uEWt95/Bx3Y+/ALQsk4nUqVOz/7Ienn+9z9l3/O
      3m8+JjgTQse4JiIrKVqVGmvvvkFu95DYygKZZ3v02h023n+H4uHp99AJDoSgUH/peXk0opTJ
      EU7EUPpDY9HjdBIIBYwGkaoxGoyYW1+hnM7RrFQxmUzMrS2/JBJl8Hm/+VgUVbl2Qe2LBMke
      nX7zAIAJTOPrBpzD5yF17zYmUUSqNTj6/BGza+NO65VSznX7GXb7SLULw+mrA6/bbFHP5HGO
      a/DOUBBJ6lEr1XD4PCy9dY/nv/4Iu8eNyWSikckRu3lZwiWYmptcwO18YdJVTz95zsq7b0yO
      a+tXv+NkrNLRa7aovDjG5fNSzxUm+kv1sbRicWuP+kkGM1A9zmCSVXrtDppJoN9sU8/kEVSV
      ZqlqVGbyJZRe3/AEmJ0hnIyT2z2cOER2Wx0KJxk0TadVLDO7nMLmcmC2W3GHfbQrVUyiiUGn
      y+nDp0iNJrOrC8iDIbmtXQKKQj1XRO72aRTKaCMZVVHwj2dgXfsenOKjf/EvKP5v/wshrXup
      YWSxWgmEQ8TGi7vpC0HXdVq1OrKiYLHbcPk9OMYuienn+wRjM5PrYbLPbxgBg14fu9t1/YJa
      ENBklZNH21hsVuManXCML6oxuq6jmy8PoOtKrtOCtM6Aj6W375N+tG3QKr9Fv2LU69OtN1+h
      6gmR2Qilp8/QLVZu/tlPsLldzK5dAOp0XccVCDD/+l3jWDT9kvUp6FeIOhcPrq6H/LMzJMed
      51axzKjRIRibQTSLJM/V4USRuVurjEYj5MGQufUVlMGQufVl2tU62hjzLyIwt7aE2W5n7s46
      FpuN2YU5+p0ufckg5Hv8XuKpJLLUI7GYJLGYpJApcPMn73L4xWMC8SiapuMK+OnUm5ztHCAP
      BswtJ1G7XfyzMwx7faIrCyQ2VrA47MTmE1hsNhKba1TTObrNNmfb+9Szhe9+ANg8Hmb/2/+O
      3X/7P2Bp1w3L0nH3s9VsEle1Kz8OdFsdZE3DHTQqQ4HZiwpNcmOF4vEZ2tSF5/C62fviCZ6g
      33hi8oNebNNrS5O693Uxv75M9sUR8XODt3Ok6tQ2uqaROc4w6g+unwEEI4Xo1huGwKssT+ry
      osVsiLNexf5csxt30M/MK1hfAKXjM+Jvv0Hm0Ra1dJZOtUGrUMZiSz6eAAAgAElEQVQV8mO2
      WlGGI6RanWa+iM3l5PTRU+Biluy1Opx9tWWYi/f7hKbWYFf5ys1iCWVkNMJaxQo2h512s0mj
      UGHYkTCJItVckUGvjyAI1LIF5NGIUbfPzscPMI2VpAviIbpqVIUGwxHyaESjWKFfbxpaPo0W
      7XKNfrfHi4dPMZlNvHi4hdPpoF6q4IlF8MxGSbx+j+p/+I+cPHqGJxxg8c277H7wGWfbL6ik
      s+hjJfBWtU6/0aJVriG3JRqlCoLNQr/VIZCYJbI4j8Vm/X7AcDavl+X//n9C+nf/M4v3Lkp0
      I1Ule3gyke/TVJWu1GVm0cCN5/aPDXWy8V3p3IhBNIv0WhJg5J/h1BzdVmeidXmdlIoyGlE9
      zTK7/HIJ8/w9ijK1ljhvrE1towHdao3qwRHnJtQXtXXGx2hi+f4ttn/1W9xBH7pJxOqwIw+G
      ZB4/w263ItUvSOX1bJHoyuK1MunT0ak1aFWbIMBgKGNXFIKpBSxuL6kfvGWUQ+Mz+KMhamd5
      BAFyT7cJLSQNX4NcHrvbza2f/3iyz16jSbtQYmZKYEzXLqd3/tmZiedXWtglNS7PFg9OcKkG
      9Fsbyqy8fofRyBCeTd5axWw2k9naYWY+wWgwpF6sEFuap12pIzjtBGMzBtEoaRiLpHf2WRjb
      TZ09f0Hq3i1OHm2TXEjiDQVpHp3R6/ZJ6zpWp53F1+/w7NcfU9g/QRkZfBNN1Vi8s4E8HFHJ
      FoivLlHPFbHYrcxtrpF7cczi/Vucbe8bomW9wffTBxAEAU8ySc0XBi5ElLyREDaHHafXM7k7
      FY7SRMf6OIkbi5ztHSEIINoMzIggGJ3f6StTGcmUT87wz4TwjaVSrqYmmqJea5gxHbZvgSb1
      hIPfiCTVdZ3Nn71Lr9Whnskzt5zk8MsnvPkXP7nYZvyvSTRjc172JmsUK6iajjKSMTuMBpU8
      HLH8J+9e8GXzRbyxKJ6osW5Z/vG7NE7TZHcOsNhsrP/0h+z99hNm11bIbe2gjBScQT8nX21N
      Pmco9fCF/ZeP/evYaF/Dw1AUxZDBnAIG6joT9QrTOdnJJFA6PKVdrtFttJhNnivPvTwVKqMR
      p8/26He6mG1WTKKJmXiYo0KR/KGh/B2em6VdKNMsVujUmxxv7WK2WujUmzi9Bi2yVa7SyJcp
      p7OoimqcX1nGGwl9j0bZAHYnDIwBoCoKrVKFTrXBnT99b5LLy4Mh7UoNbyREX+qijkYIZguR
      RIxGoUQ4lUAQTFQzeYbdHvndA2rpHLGl1LUL3POoZPJ4XsGi0jQNgW9HoKln85cdZfRzOuf4
      oW7wXOfvbDDs9vBGgmiaRq/ZIbt7OPE5OH9Du1KjMYYbnz/vX0gx/9b9C9jFt1jhOwN+8lvb
      rPzwbfZ+83uyj5+hDkeoioLd78c7G6GZyeG/4qVWOjihN5Yf8cWiqLLM8VdbkxFaPTxhUG8a
      6U2+BOPfqVNt0NB1HF43TalDZgydqBfKiOOqUXUMl1YVhXbFKLtKzRbzt1bxhIPkXhxzdnBC
      p9bAbLPy7MPP8c2EkWWFp3//Ib5ICNFuJ768QL8jkckWKJ7mUFUNdyhAYWef3M4BnVqDcCrB
      7MoCJquV6MoC1XQWqVKjU2sQXUwSmJ1BFE3M3r2J6yxPp1TB832I456HIAgI9fKkIaaMZJxO
      B0JQ4/TxNgbRRaPbbONwOxFMJqq5At5IiEa1Tr8nYfO6OBr/OGablWA8iiL1iK8s4vC6kQfD
      ays01bMcNocdh8/DaGTIrJhMJhRVYTQaGZWSQhl3+JuxOsG5GAvfIBOy9/FDTp/sMGh3WHpj
      E6nZZnZpHpfXfQGZHudNZosZi+OyGFj+IE3ua2arYX+IIIqYLBZaxRK6ptFvNGnnC5ypChs/
      fgeTWeT4wVMqJ2fc/MufY7ZaOZI/YeHNCzvWVqHEqF4zVCwebZN6/c5Li2CzpjE75m+YRHHy
      3eu5IgIGpkh0OkgszhswF5uV+bFDpj6uu8vDIaWTDHPrK4bHb6uNyWRCHg5Zfvse+YMTPKEg
      vbbE7Lk39MOnpG6ukn62RyGbp1NvYHY4iL/5Ov2Pv0DRTXjCIeZvr6OMZPyxGZThiKf/8CE2
      l4NmoUwkER2vS4qG9lS+BE4HyArLb94ls/3ie54BonPQMbqKZqsVVVUJxmZolmvEllJYrBZy
      h6eAQHbvkNTtddqSxPJbdyml8/jm4izOzoIgkHuyTX73gG5bYum1TQRBoJor0hZNl+iJYJQV
      o4tJus0Wg25vIjPYa7ZpFg1Zv3a1TiT16oXnt4lzIN7y23c5efCU1R+8xrmzjNlinmh+nseo
      PyCQjOObvQzD8AYKxOLXl2Tr+RKVfJG7f/3PJhdru1TFrA2xWeIkbq8bZWRNMxhQYwbWaDQy
      2Ftj4B6cl3PHO9anmcCXvtQFRknX0VTt2glJ1zSEcbozfT7Oo5ItoKga/XYHR8CLdTRCluUJ
      J6JZLCNaLWS2X4CuUz3LY8KANmz+6XvkXhzhDQXY/+1HWB0OQ3a+0+X06S79jsTBZ4/odyRe
      +2c/I7d7iNVmpVWp06jUjY75vZssvXmHfrtD9vkB6Sc7aLr2/Q4Ax+17DH9r2BoNuz2sViue
      gB+TSaRZrhJOzOILBxj0h3iCAZrlKr3hEOXwjOj6DRw+D7ntPdSRTKdUxRfwYfe42H+4xdLd
      DUwIHH30aMK37fe6qKqCzW5jWG3g9nmMPH/cOZ5fTE2m+nAoRCtbAHT80W/RD7gmJobYFgv9
      lkRm7Nc17PWuZcHVC2UCKy8vyq+rMBUPThn1eqDpxG6vkX30DE3TcIWDZB8/I5SYoZkvM7u+
      MhkYZpuVYbXCo//9/yA4F8MswNmnn2MSRUaKTngpNfksVVE4fbQ1MbxjLJ3YKJQQxlZRrVab
      4uEJ6FDcP2EmlaBbbdDMl9DGvOdKtoDotCMA9XIVq8+DIsvMLM4xd3N17JRpnON+p0vmyS7N
      UgWXz81Qh1atwf1fvs+gIzGzNI8uwMGDp+iqyqDTxapqtNIZkjdSqKk4Dp+HhTdu0yyUsdqN
      5pqqqMwuJ2kWK9z6xfvk9w7J7R5itlqonmYJxqKo6Cy/ff/7HQBmhwN1nGdbnXaKZzlsLgcu
      n5fjZ3tIvb5Bvm5L+MJBZLOZ1R++xcmDJ7TyBYp7B8yuLGD3urE77ahtiZmFOQ6/fIJoNlM+
      zrJ8Y2Nyh8tJJyzcX//WygZun4dWrUGmUmfu1uofzTTLPt9nfnMdbygI6EiNFmqv99J2ykim
      WagYPmVTMa21ORoMKbw4IhKLYk/M0mt1GIpmUm/cRZUVBp0OKz98m/zTLZZeu0Xm8TaLb95D
      MJnwBAN4gilKB8ckN9cvQca3fvMpiqwQTRolUNFiYeHt118i/4uaxuzcLLqmoZpF4mO+waAj
      ER+bBwqCQGQhidlqYdjrk5jeZm0JeThi+x8/QlU1eq0OmqrSyJdplavc/cm7OD1OKmd5LDYr
      kVQCkyjiCvg4236BIAi4gj5Moki302X1vTfZ/rsP6Utduo0WUrNDu9qkU63jdBmEfavHTbvR
      pFEs419IIujaJHWTewM8IT/PP36ASfyOleGuRuD2JtmTH5D7m/8Lh8/Dyi/ep5UtoJRreOcT
      OAI+krfXaFdq7P/6Y+yRIHu//YSlt+5ekhmUB0P6tTo+n5fC4SlmqyGfHkzNMmj1cLqNheZs
      IkluP83c2sK3vph9oQBuReXs0Tae2Ax210WFRtO1axtf03GuxBafmE8IV/4dPxIE/NEw+jWV
      p2k91NzzfebXV64dxKLFjCtorFtamQCuoB9HtUF2+wU2l5NWsYzZLNAq1YivK5cgFh6/m4X7
      l023r9MV7bXalFQFdJ12uTqBgrdLVSpuA8bdKlUN509RpFWuGfV4TadVrlM+PkORFfwzYZIb
      N2hXaugC+KMR8i8MgVuLzUYwGScUj7L76UPS2i7tSo3U2hImk8jR9h6ugA+p1SH91TN0QLTZ
      0TCx9NZ9rE4HpYMT3E4boFM4PmN2NkK/JXH25DlO39iqqmrgiUrHad756780Kklf+2v+/xwm
      k4m5f/4voS8RlluIZhFPJMTBpw9Z+emPyT/boddqo4xkQispEispRv0hrWKZFgKh+TiNfInK
      wQk+n8fw6M0W6bXaqLJi2AYJF5Uc0Wwm4A1TTheILrxs9PCqEM0isfkEB1s7hKf8r3Rdo3YN
      sf08lNEIAdPELGLyPk279uJy+TwcPN19CYo9PQA0TaOULVw0sdoSoVsbXI1zxQRPOEBt7wi7
      VcQR9lM/TDOo1hj1+uhjtelz7kKvLU3WLVKjydGnD67k98ZrgWSMzPN9bvzoHWpnORyRCKt/
      /jNyH33G7PICDYuZQCKKrus0imWsdjujkYzVLGITTVgw0xmMpcr7fcrpHPVCmWahzKjXo9/u
      EpybpS91cfm8homKy2l8PhBJxPBHwzRrDWZvLHKmagTmYvRaHU4ePMHqdNAuVVm+u049X0Jp
      djh9vMPCW/c529pFqtY5lrqE125g8XkIed1k9w6/P6f46TCZTCT++t+Q/ff/J5FhFdFiITg2
      Oba6nNROM4iiyGgwRNd0nD4Phw+esvbu6zz/1QeYxpCE1nCEIBiLy81/8WecffYQqVghFrm8
      kLXYbAzrVSr5EpGrUoxfE4IgYHc6iMxfDBxN0xjBK8Vi+602z//fDxB7AzRdoyV1CS8mDfiD
      ptJutqZgFcZ7pGKV/V99eGk/rU6HQdto9Nk9LuKrF32HTq2BNr5Iy/tHSFWDY9ytN9n/6AGq
      LLOwujSxj0143JhEE7WDU8Qx9kdAQMoWaZiNlGVoEkisLV9LCso938fudk2sjrpuF3a3C4fP
      i9XhwOXzYHc6sI8beVanHU/IkJZsnmZw+bxoqspo74hWoUS3JTF3ew3/rDEDJFaXUVWVFx8/
      wCQIDKUu6rh0Wi4ZBYph31B47kpdBFGknskhiib67Q4um43Z+AyZVpvs422s4+N0B3wcf/YQ
      31wMBBPOUBDv7AyN0zSaorD4xl2So+/JKPtqiGYzsb/8K7b/7f/I7GyA8EKSzLM9Bm2J2NIc
      FpuVyknG4IeORqDp5HYPSSzN4wn6yZ+cMbtigJ7kegurw87Ce29z/NvPX+IVd6UOofUkJlGk
      3WhNuAj/KfGqdMrp8xLdWCHqN5pLtlaLxK2XFRymO9U2hx2vxXrJF6FQrkzkAcGw9Nz6zSfE
      Nm7QKJRZ/7OfAtAplEitLRgbLRmcA1VWOHm4hTgG3uk6tKs1bv/svUvnRipXmZlPMOj2eLG1
      QyNrp5ktoMiKMVDGx1jPFOi3OlTPcmC20G20MKWzOLxemoUSqqpQyRQm5d3yyRnieA3TrtY5
      HdMlHR4XM/MJpEYLXbgsfCaKIm6/l5nUHJqijnsyOvGFJMoYKez0uhFlGa/ZTD8cYP72Kv1W
      h9LOAcNeH0VRjPfLCtVi2XDRic8g9/uU03n8czGa6QyqIqMpKvJgiOn78gm+LqxuN6bEAmYX
      HD/eod7oolUK2OwWTDY7/W6fUDKOxWZFHcokluYRzWZy+8ckNlYQzWasdhutap3qcZpgao4b
      v3iP7JdbWNp97A4HvZ6EGHJMUJ7Vfp9uR8J5DShOVRRqxTLTubpyjbRiNZ2bSJmcrwYMYqVR
      ImweZxgEAggCjGSFQe0C9mB8pDD1Hmg3mrjXVmBqKVDNl9CvQKLdM2HCy/MIVgu5h08wmUXa
      pQrC+uWutNlqYW5znVa+RDQ1h67rpLdfvCRH0yzXKHvzdJstHFYryTH2qHB8Rvz22mTNYXPY
      ia8v4w4HcHs9WG8sUitVjHr95tgY/IsnLIzTPgEIpxLYnA6iS/N06k0CsxG2/uH3ZA9O0DQN
      eSSTebaHw+Pm+QefsnR/E9FiZjgYoqkq2Wc7dGpN1HgUVVEZ9vvGLNDpIphMtBsGLXXUH9Bp
      tLHY7QykLv1OF3k4ZDSScYki3VqTSCqO3O0xOzdLu1rn2Sdfcuu9tzj43adYLd8TJ/hVsfpf
      /zdUP/4AZ6dLQxpx4723CMRnGUgSo3YHy5ipZHM5yOwdYbVZiSzOTxwVBUHA4XKid7s0sgVC
      qTmS79ylvH9C/tEeMzdTlyDO4fkEuV3DseRqSM029oD3EvDupdAhFI+SuvNyDg5QyxUxS0Ni
      V6yOrgup2aKSL7K8fgP7ROjWCLPDjj3gN+r2sowvPsv8m/c5+eIR9ZM0mz96m6HUZdTpkN5+
      QWJ16ZKWj8PjomOzcvpsF7k3oN/tk909xCSaiC6lEM0igdkI0cUkkOR0+4LPexXuMG0KoowU
      bE4mcuo7H36ONzpDLVsYZ+tG9zdx7ybl4zPKh2k23nsTEAjNxUiuG5iiYa/P3uePEEURZThC
      NJtIbKzQbbWxuxzMLsxRODzFLtpQTDIOhw3RYkF3OnH7vAzRiS6nDGGtwzQ2lwOH20UwlaB4
      lEZTNeThiFA8ytnzAyJL85w83eHWT36APBgSmY8b8HuX8z/vAHBGo8z/6/+C3G9/g7n+d1Qy
      BTrVGrqqGZLYa4sGsz9XZPnNO5SOMyiyTOHxMSbRhMlsxu1xU8uXGChnBOZimESRmdVF7D43
      g2IZrvR3vivFCGU0orp7xOL614hWTR1DvVxhaao0OR1Om5Wwzz2pyVfSGeo7L0BRuPnem7TG
      1qILb95BVzU+//e/Ir62hIAxk50L4qpDmcXN9UkzTpUVtn/7CcG5WdRpcvslasXl89Mu1wy0
      ZrUBmgF9aNUaqIqC0+8jeWcdud+fIG3FpztUzgUHTJDfPzLWbIWKoWqHjjqSmUnNEV9dIn94
      OoUjueB6a5pOtWw4PWIx3O1nkwnjpjhlDjK3scJoMKRWqmIP+RkMhqy99xa1fAFZU7G6HMws
      Juk1Wxx9+ZR+q41UqWF3u2jmS/95B8B5WAMBXG4HlqUlkm4dQTTyV6neRB4Muf1TQ2XBGw7w
      9O8+5J2/+vlkFmiWa4STMdwBHy8++JT1n76HIAh4oxEEUaR0ekZ0flqL5/r83Rgn31AqFaBZ
      rGB2HIOm4wn5L5pubQmrxXJJVArGv60gTCU+UCtVmBmjIK+LbqNJemv3ojsrGE2l8PIChXQe
      u2gs/tGNu/GNt+8zM5aQTG/tsnDvJvJwyPO//4jM7iHzY8d1qdlm8c07+CIhTp88nxiJy6rK
      2f4x3VoDq9NB5snO5FgsFjPJDYOU5EkkcAb8nD18THJzg/z+8cV3HIfZamF22Sg764pKYm0R
      XdfJ7R5P+gPppzuTHsLVX6F4cka7WqdZrrK8acAclIFBZMmnM9icDpqNFtYnO3SbbZThCN9M
      iGAyxtzmOmdPdiYHZPQmrOx+8DlDqYsoitx6703atQbbv/uMxHLqn8YAcKcWUCIBqgfPOZJl
      zHYrUktCbrdZuLNOq1yjls7iD/i58fom7VoDV8BHr9WhUSyTur1Ofv+YSMDHs//n77EF/ZhE
      4+457BiAutj4R/njWltGCEAgMcvcrVV0TSP/4phyOocqy1jcTjyrKYavmGHO4dPtUhWL2YTL
      63nlbGS12yY5NRglTmskTOqt+ww6Ejt/8/fGQtFmQR4MGTTa6LqGgIEa1XWd0t4xG6/doZIv
      Io9GhlWoSSQ0hoks3Lv10uefPXnO/M3LM9jx9p4hbtVoITrdoBso0l6zRfX4jEGrjVRr8PzX
      H2N3OWmWqvgihstju1RlOK58KaqGVG8awsbVOiePt0EwkK9StYbZajWILPMJfOEAJsEo+Sqy
      gjqU0VSNxNoyLp8H0+Ep8eUFOvUmcq9PIBph66MvSD/ZoXx8hlRvooxkWrkSolnE7bSzurnG
      6c4B2d1DBt0e4fkEC69v/tMYADa/n5HZhtVqIfXum4YHlKpy8psPUGWFxlmOxFKKcyfI/FGa
      cz+s+dtrFE/OCM6EMduseDxO/AvxS3AGeTCktHc08Sh+Vfwhg0MwmSay5u1KDVXTCCautzU6
      D01VqewekZhib10X9il4tK7rFHMl5sfu6QAza0vMrqTo1psAVDo9PB436Dqy1OXprz5gZe0G
      JpOJQbdHpVDGH49OypOvYsVd97yuGZWkgdTD1WrRbjbpt9t0m23cfg+Ld2+ijGQqR2lml1Pk
      7SfUC2XsLicWq4WFMRXz5OkOjUwOu8uJ2SyyOMb+2w5OCAQD2FzOMVPrBe1yjWalRjgeNWaA
      4QiTKJI/OMHpdVMtlDDZrAx7PWSpT6taxxUOsPD6JpHFJJ1KDavDgVpr4vC4qI7RtqmNFfK7
      JywsLZI5PkXXvwdK5LcJQRAYWt2orQZnn39JeG0NVyiA2efj9NHzcUfQhKooBkdUUTCZDPW1
      ylkOWephnzNSimgyQfbFCS6fdyIDYrHbmNlYIft0F+FVa4BXYMGu3/Clb/C1XHlBEJBqTcqH
      p8ylkhNDu2kVu0uKdlPHITVa+BaTY+l340UBY1HqiYTQdZ3KSQaby5A3d3g9iBbzJE82iSKx
      taVLQgDXDQIDq/9yt9nisBOci9FttIjMx9E1jcFwaOTVU7zlc8EsURTxJeO4/F4GjfbkdafP
      gyccMNzjm9OVsSmfCCAaj+ENBjDpAsFohNHQoFlarFZUNHzhIKpZJHX/JsNen9pJlviNRbY/
      +pL8i2NGvT69RguX34epPxjLZhoS6+oU3F3QDamcfzIDYPm/+jfkrSa0032qOzs0PIYRNGP0
      oiIrHG/tklhbxhPygw6NUgV1MGJ+LM8BRo8htbxA9skOi+9cQH8tNitz927y/B8+IhIJXXO3
      +3aL49rRGUqny6Vy6UhGRye/tYvD637pQtJVFanawO31kM6WsGLm/CfvSV1ststVoHangTo0
      VJz73R7OcJDazgFg1Pnb1Sr9epNzHwRlMOT40TYWq4VeRwJVQzIbg6CeL6Oo2hhfNEUR7XZx
      By6jU2v5EvLYLON87VLJFsEk0G22kXt9dHRDCl1R6XckTh5vo+vQyBYYDkcM+31KmTzekJ9e
      o81Q6jKQusZCuN5AVYxu9MnTHaRqHVEw0SmULz5Xh0alSr1UoVap4PC4kOot3D4P3baEN+hH
      Go3I7/9/7L1nrGR5et73O6FyTrfq1s2xc09P2sRNIte7pCiTMEDSBmmQEiCboAQBFmR/sQla
      gCw4SKINCKZsGQ4iDMjQB3+waYM0l2FFLmdndqanc/fNqW7lnE4+xx9OVd3YPT2zs6uZ5bzA
      THdX1Qm37v89/zc87/PsM+z20Ds9JFl2h+ibHRY/d4fyxg5WrYHgkem1Wu4I6Maeq35j29iW
      jSWJZD8pOQC4C3f2l34Fx3F4+g9+E/V4n7WvfpGaR6J6VEQfqqy+coOjrV130Nq08HjkSa0b
      RsLcI8Fpx7hI4Sd7Pdz6ma9x9O5DMon4Bex7afeQTqP9/Jt0HMLRiIsivcSOdvZZvHHlwuun
      ne14Y4+YdAJ+K+4fks7kz8Tjsk9mfuWyJBGqxTL5z7/63BHK4uYeU6OOrttkksnNXgz9jrZ3
      mJ/glUb3KYosv/nK2dc8HpZev3XmtcDGLtPrS2e+v6NHQWZHTb9WsUL52Q5Xv/I5JFmivHNA
      NJ1EkiVapdpEknX/7feZXZ53k+StPVKz025Z23EQn0oIHg8LN9Y53tghPz/L/uNNFq6ssrmz
      6+50Xg+W10s0ESOWSuCRJQr3n9CrN3F6fXx+H4IgoA6GrN28iigKbL51FwTb1Rku/qjYoV/S
      BEFgWC4RDvtJ3rnOzl+8y8qX3kCZStN8vIEgCsxfWcGx7cmX7zgOw16fVrnGsNsjmnZJXtVe
      3906z4HNREli/nOvcPDOfVLRKJ5T9fOZq6vEX9AHcGybg3cfPPd9LlGAGd/jqX+de/ODS7On
      wwRbcF44PzxWS0EQqB2VCAQu9jzceP/5He2zH77sIhfDJRfZWnVfd9x7LDzZYv7WFff+bRsE
      mV6jhW/U91B6AwadLvtPtsktzV3oh5iGQbfeROkNXOrIVoeDZzsg2IiOjd7tEwy5MAyPz4ss
      icSnUswtzbH7/fvMjWadj3cOXNpG0yQ1kyU7P4OwtU8yEv9kOQBA+/490hEPoiSRns1S2z0g
      u7aMdOcG9YdPyeSmEEYxtG3ZFLf3EASB6eW5M7+UZC5D6dk2c69cv/CLFgSBxc/fYe/te6Qi
      4TMwhA+2yxeNbdvIH+o8L3+J0w7yQbQqgihgGi7y0zJNorGT4aAPWvDqYEhpc4+xk6r9AdpQ
      5fjRJkqvP3I8h3qhBAjoioLscZG4vXKNkM9H5aDA1MoC+bUlKnuHFJ5sIXu9E9SubRg4ow67
      JYrokoyiaZT2jvD6fYRHQ0OO42AjYHs9DBSV/afurPPc6jLPnj1l2O1j2TatSp3umFi31UHt
      9hFEkXa5jq3p+EJB2rU6giiNyMkGtCuuvjQWnzwH8E/n0TbeJhAOEcumGbS7HNx9SDidRB0q
      kwTueHMXQZYJxCLYhjHpC4xNkmXMTh9TN57LtLb0+Tsc3n1E/CXCf0EQRhiWi+/ZlkWz1iAQ
      ufi0/bjtg3YLtT9EHBEDiLLkYqkE9/v4IAeIpVNML590sfcfPGX91ZsIgsDeg6fkrk27UAZN
      J7++RGlzl2Qmhcfnw1Y1ktNT9Ntd0uMRSlEkNTdNZfeQhVtXsUyTVqFMYtoFJXabbdJz03TK
      VaYX56jsHdFvd8guzGJZFoLHQ2omR69cY3Zpnt27j3Ech9hUhtkRJ9Gg1WH7z95h9fXbdOst
      ggEf6lAhvLpMp9UitzKPZZgko26/pmnCoNcntz5HbOpHPRT/Epa8/QrFwgHi/kN8fi+heBRJ
      Eilt7iFYJwJpgiQxd22VwsY2iVEz6rw2QHIqRbdaJzX3fCj0/Gs3KT7eRHAclN6A+KiSOeHK
      t22qe4cuZ+U5El/HcWhU6hiO5cavH0Bt8nHYsNunuLWH47isEZFkjOQpVfmpxVnKh8fkF+dQ
      en2kuISmaAy7fWTZQ6tcIxKOMewOOHq2S351HhBcbqaXrseWQMAAACAASURBVAOfzDhMdqTx
      927bbL71Hl6fl16zjdrtYegGhccbqH0FQ9NQRvX9dtXtL3j9PvYebeD1eui32pR2DwlEI/j9
      fgpPtlzqzEaLTqPJjvYUU3Q1CayRss3yjXWOnmzhOA5WOISuaQS9AaKJJLXDIv1OF8ES6bfb
      eLw+fAE/vU6XTqP1yXMAQRDI/9Wf4+Bftkl1C8geD/5ImKXXb1F8tEm7WkdT1BOlFYfnauH6
      Q0Gq9dYLHQAgf2Od6uYe3aMT7v6xI5W39wl7vViqxt67D5k5da7KUZHobJZI8qMLX1xm7UqD
      PXvj0veG3S4er4+52+7E2uY79+jWmhi6QSKXod/uoKsa9/7191i5dY1Y+oRT1XVeh0Q4TXZm
      ll67w+H723RaTW5/4wv0mh2ORt1dgEapOsEYNY5LiKM+TKvRQrRsWpUaw3oTj89Lr9FyK23X
      Vnn0J2+x+rXPT86z/2iDhWvrHG3usnDn827ourFLbDqDrRvEptyqXHX3kKU71zne3MWybALR
      MN5gEK0/pHJQ4M43vsze3Sd4BYl4JkU4lQDbJpyIIckShWc7eIJ+mtU6pkdDlEQKO/tEYnFC
      kTDyaBdU1SEzq4ufnD7AeRMEgZmf/wWO/4d/gl9tjZI2kUg2RadSRxkqqIMh6mBIv93F4/Wc
      aBA7J1h7cOjWGvRquTMgL+fMX9x/+WNhxKqXfrNNOHnClRNOxtGqDfcLj50tG4qSdEEa6OOw
      oD9KJnl50y6ThEGvy6DjUhTe/JrL4rz53gP2n25z7StvoisaRqdPu1SjW2+RXZx1vx/HTVZ1
      XUcAwrEokXgM23ET58hUahJaANi2xcy1VbdP0+kyszTvwp4lkfzyPJIokMhn8YWC7Nx9hKlp
      HDx8huyVKe+dCJhoijppYjrOmJbRIbMwS+HJFtXtffyhEPpQQRRFgpEIjUKJdrFKdm2JSDqB
      OhISdxwHr1d2GecMY8LA1y7Xya8sEAiHGLQ6TM/NoPT6qD2F/PIi1UIRwSsRiIbQ+jqP//W7
      OOIn1AEAPKEQoW/8PLV/8TsksieJXCg7RadYxTZdVZjswuwYLuMWryfNJHebzs7mGRarVI5L
      zIzhBc9peqUWZ1EGCpxyAkEUsJ4jZGdbFuIP6AC6rtHrtInE4h/84ZFdlgUsXl/n4OkW4USc
      plIhPzdPcAS3qG4XXAknUcTn8aNqA3RNI6CFCMdiWKZF4fEupk9i2OmOur8Oan/oTpLhLuJe
      q+MyQQ9Vhr0+uqqhqyoILltfbtRpP3iySfb6SW9m8O591KFCq1rDGc0H1PcLKN0+vXqTpZvr
      BCJheq02taMitYNjrty6QbNSQ+32iIUCDDSDxnGZQaeHEIa9v7iLL+DneGsPpVJHkmT0Xp9O
      vYUvHOTxW3cJhaNYpsXB5hb+UADLsJiaW8M2TMJTs+xsPPnkOgBA+vZtpF//u5h/+H8SS0ZP
      4nLLxihVSM9OX9rRvMx0y/pAqMLY6vsFeo0WkVSCUCxKY2v/0s85tj3iu1n5UCIbp23xyhr7
      TzY/lAPARf/1BvyTbq8AE+7UcXf8Mjva2CEUjboI2uk8xUqRfqUxOs5VtewclwEwLQsnGkSw
      HbS9Q/r1Jkq7i2OY+EMB9H4f27LpNlo0ilWm1geT6/TqLQ6HKrkrK0wtzWGZFoID+ZUFqvsF
      Bm3X6SxVx1J0fF4fjXKVXquDNlDpN7r4I0GsgcHs0hKaqiJGvG4SK4l4vB4isRhenytJu/La
      LTa+e5fMdA6v30ezU2d6ZZ7Ndx+yffcRxkAjsZYiHIl+sh1AEASSV65SU3+W3p/9HpGkO82V
      WZqjpGkUt/fJr54deD+fCI/tZeVIAdKLs9T3C3TrTRc/8xxWCUEUya3MU3i2QyASctnHPB9c
      bbnkB730Zcdx6Hc7IyY6Acs0MUwdx3bwGxcT7g972fTcNNuPHk6wR4FIiPTsyUOiV2+Rmsm5
      UI5en9RMziWePSqRzudwLJtQNEwwGqbf6VE8PEYQBXJXVlB7/cl5QuEwC+vLHOzs0SvXCcQi
      VPeOEEWRbq1BKByiuLmH2hmgdvusvnKdjfcekkhkyK8vUtzfdxPhVhvbsgmEgpQe7xMqREjl
      0hQ29oin07SqNda/+CqmaSB6BBqNCspAxbQMVEUhnsvg8XnZfecRW48e4Xh+xLxAH9WiS0uU
      /0QgoBvIXleeZ/rKCsemyd7DpyzduvaBi+7DzgGkF2epHxy7tH0v4AyVZJn5G+sMe32qh8do
      gyGLtz/4fk7b6SH402bbFt1ek1R2aoTp9yFJUQzDoPhol0GnhyiMqBMFJoLYYzIr0zAoHh5e
      aAYamg6mgyiIZPLTJKdc4GC7Wsd8cEL7WDsswIgGsnZYRJBdKEHtqIhtmnQbbfxBP96AH03X
      Wb55Bds0KW3tEc0kJwjYTtFNpueXF6nXGswsL9Cp1Inm0gQTUUTDQhQEVq9dZeO9+7QqTURB
      xDQNyuUjWs06KzevY1kW3XaLZC6FHHFnf3fefcj6ndtuniFC9ahIMBwimkwADrOv36RZKJPM
      JN1yuOPQymaYnVtgf3/z0+EAvmiU/K//Xfb+q98iFvbROCwieT2EEjGiy64KSPw5pLhj+yg6
      wumFGZqFEsN2F140KQYEI2GCkTAHjzbo1ZsIoogkyy8lbC2KZ8OnMaubZVn4gwEi8bPhUQBX
      7COeyxBNJyc/8/0/+i7733+INhhi91UcILmQHU1+nVjjuAxdk9ApPiLTMIhl08y/dkqcTxRZ
      et3tAyBLLN284vKnDlXm1papHBVJzoyS4AdPef/3vk0qnaTf7tI7KLmdXQFURb3wMydncvQa
      bURRwC/Jblir6wQjYZJTaVRlwOyVZXAcOvUG9WKJYb/PtTfvgANWp83uvSeEolF2Hz1l+uYq
      K2u33Dnk958QTcbpdntMv3qDxnGJfqPp5jam5VaVCsfY6qdkBwCXuMnQDfpNlbk71/H4fAw7
      XWo7Bxxv7WFoOuF4FEPXJzO7wIQGxLxE3vNlLDk7Tf+o/NKfz68t0Wu0QBAobu2x/OrNF0oe
      uU/2sw6gGwr9oYu0TGQuZ6nrdVoMt4buYrZtBu0een/I1HoSMekeM+z1saSLI46maeI9Bdto
      1mr0hl38yfOEASfHCiOKlLE2m3Ou2OAL+rFxSGSSJDJJCpsH5JfmaVRqNKt1jp5tY5kWnlGz
      sHFUxB8OUXiyhaXpJLJp1MGQYbtL1rQmIobDXp+p3DTJ7BS7T58hiCKWYdBvtrn25h18AT+V
      wwLBaJh2rcGg2iQUi9Lv9hEkkb3v3ycYDhLNTdGu1Jmaz7D/4Jk7S+z7NzgU/2FNlGXCM7Pk
      Ev7Jlx+MRVl47Ra2A8G5PINOj2blmNw4LzgVhvh+gEmY6EKebrlBNHlJonpuY5E8MtFRXdsb
      8LP93kPWP3+H05Th5/k5nXMnCUUiZPLP713ouo7s97J0aqTy6P4WC3dWcHCpygVBwLRMQMSy
      LFd3zbE5fLSJOlTIZ2YwDIPj/X28ET/rb9zm2d2H7L33ELU/dGELpsWj/+/PCfj9LjNF5btE
      UglazTbGg2eYpkW1WCExm6Xf7nLlS6+z9WffxxcKEJnOUD0uYZgGr/301wAXarH1/hM8W3uI
      tsPyjXWWrq3SKlWRRzCIh3/0F5QPC/R7XeKj6l+r3kBVVITRkJNbiVIo7h4iShLaYEi/3aff
      6RJPJ9Fsk6vf+gq779wnO59HVVRkr2fUyBQRHJF0LoeuDz49DgBgev3oqubi4WXpTOUlPp0l
      Pp1F7/cv5bfpjEhwP4rFpqc42D/mMnL184GVPeLRFASBQCSEPxJya+cjAJlt21iONXEA972z
      52jXGtiGfcExDF3DG3RnYjVVYeedh8g+L8FUFEPTJ4tjfF7LtJBFGU1ROXi8SSAaITWXJxiL
      sPnWXRzNYO3N2xP2u/hUmplrq9QOiwQjQUKJOIVHm0xlMu4gUqnI4ivXCURCROQAHp+XQqHA
      0uu32fzeXap7R4QzSeaurlLZO6LT6qD0Bwy7PXzBAOXdQxaurhBJxLAUleLmLs1SlVg6QatS
      JzaVJpvLEYyEkeseiluHDPsDFq9cIRAKsvn+AxcZrGmk8zmmF+co7h6Sv3oFUZIo7O2xcHWV
      erHMzlt3ufLVz/H4j99yF7kskV9f5umffx9ZkBBEgUbpE9gJfpEt/o1fp/r290CSsXsdzOIh
      OA6izz/5THxmmm61QSybPnOs/QLhh/ODKXA2lxAEgfjSLLWDIulsZrLQrMsg16f6ArZloTX7
      bH3nPYKxCMF0FAGXPPe0nV/o4ViC6bmzUGWATrNBbDpyZmJMEASUwYC2blxoyqmS6BIMd/sk
      c1Nkl+cnP2tqdhp74Go1jJNnQ9NQB0N0VUWSJWSvgqHrqIriNtE0A11RMTQDzRSwLNMdyRwM
      kUQRvyjR6g95+O3vIkgiN37iDUzd4PFb75LITWEYBqZuuGGqbSM7EoLjYBom4VCIZCzK1t3H
      hGNRZteXqRXLzK2uTojSwtEIkUQCbaigakNK+0e0601wBARRoHZcwuPzog4VYtEwm995m9zc
      NLXtI6YSGYp3n7H+ynUiyTgHj7d+9NygP6hJHg/TX/7Khdc7u7u0fu9fuhKZtkO32iCey0wW
      sTUS23ueXTYhdb6cGkknqW7sMXzqMlI4jkOv1eFFIAttqOATZLLLi66aoaJQ3i2SuHoSSgm8
      PATHvaeLqM5AKEQ4GqGwtYuqKPhiAWSPB9uyyC3N4tg2Q0U7e5wAiWya5qjOjwP9Xo9Bq0Nj
      v0BuJk+n1UPp99ESMYrb+0wvzdIpVehWagRXF2m1OmgVlcKfPKVaL5D9yTeZX1vi6OkOkiSx
      d/8JmfkZ4pkUs1dWqBdKVDb26YZDdFttbnz980yvLFA9KNBTmtiOQygeIZOfRhsoo06/Oz3W
      KFdJZ6fwBwLYpsXxgct0F51KEogEMQ2T9Nw0hmng9XuxHYdENkNqdprOUZVIIo6mqNQKZUKx
      CFMLeZpHjz9dDgBw8Ae/jy8WA0Gg9/QJvvws89/8JtbXf5a93/891P0DotMuoZIkuwjR6s4h
      stdD4cmWyx86iiEndm5Y3lVtl884weC4xsLS8gnkAihLBRqFEqLs8uJH00m8fh+NYplht48k
      yyiiQa1UIjs7gz8QIBqL0aicKMKcZ7KDFzjEC0qrUzOuK7YbTaJzKfyhwOgQAXWocPjuQxcz
      JeCC1Do97IhC/hSHkXNcIjWTo1OqkhzxKamWQSqfpddokRpxmA57A1L5rEtFXjaJJpIQgcFQ
      QanUsEyL+dVlyocFlE4Xv9/H5lvvEYyEkH1e8ksL2LbN8c4+oizTrtTIL8xQKRSJTCVxfBK9
      Rguv5MPR3ZDOULUJrslxHGZvXnEnvAyT0s4BSzfXMQyT2bUlijv7CIKIpeo8+uO/QHREth8/
      BlFA9sjsPniGJMt0e41PnwPMf/Nb1L/3XfROj9jNW/hTbqKUvH2HxK1XsDQNUZI4+u/+IVPJ
      IIePNt1ZUNNg+U2XUtwyDLznhi/O2+nFX98vEMN7ZvGPPxPMJCYLq1VvYgwVfJEQC6/dQBsq
      JOanKb53QjyVmc6hnnK+WqmMgBsSfeBgzHP6BadNHSrEhJP7G/+ZW5jB55FdUcGpNMG1JQ4f
      bbrEvaN8RBsq9JotlP6AzmjeV+n16dabDLs9GscVHFxWh+rhMf1mh36vjePY9J0uU2uzxLNp
      Nr97l3qpQrfZJu5NIXlkRFFkbn2Z3QdPOdrdQzc09IGDx+vBAUp7R+iKxuqrN7Esm0G7Q61S
      xUgZ2IaFIArUiyXS+WmX9WLvkNmrqwx6LsFvee+IeqHqOqkgEEnGkD0etP6QmaUFCls7zF5d
      prC5j4wHVVHIzc18+hxAEAQyX/zyc9+T/aN8YH6N0nBIaGaWzGyW4wdP6Tc7RFLxUwPmz7cz
      QyiAeOlzWSCUjLscPXCCHxo5jy8UxBeCwFQcdTDEN1JLP11/rxRLyKOcot6uEJlLw3PkDMal
      yMtM13UMTUfRB3hHxLin8xrZ47mgUOOPBCnuHzG9OOdKFg0V1GbHxTiF3QeEWbKwAUQRjyQB
      ArLksj7bfg/iaop4No22oaC22rSOBkghH5H5HKpjEc6kkDwehn2XL8nj8zGzvoxlmi4UIxDE
      7A+ZWp7H6/exc/8JgiSRX11EH2rMryyjDoY4NhiGweb9h4RjMWaW5+lVahxv77N4bZ1AKIho
      yBzd28Yb8dMa1GjVqm7ZV9Vp1etIfi+IICCiDIaEIqFPnwO8jFmaxvwv/TKCINDd3qL+7f+b
      1OIch++9T/gLr116zPMgFODy4MT9PjfpFZ4Pvx6f5/T5bMtmam2Bg/efEG6pxJIn8GTbtjFN
      HQeotY/J3Fomu7JA/6B+8WcyTQzDQFeZOBwwYVurlcsk5qdYvH0J25xw+e4STSXYvPcE3XHw
      B/xIHpnEVIpBt0d8VERoV2okshk61QaRhOvgzVqd0AgZKzkQSydpFSskptLEUgmKhTKRZJx+
      s00oHkP2emgUZIyRaJ8oiliOK7GaXZhBkkdNw0gYXyDA/EiY2zIMlyV8JA8aicdoBYP4w36a
      xSqSJOIL+Bl0uggCyB4PPp+PVC5Lo1xl7dVb1I7d8FOURWbXl7Asiwd/+DaqMnRDsuf+Jj8l
      dqko3sOH1L7zx1z/j/4e0dU1vIlfY+Of/JdMLS9x8GBjRAt4Aps2VA31uE4gGBw1zkYnEkBX
      VXxBP7G5OZ696yrRjJUee+02c5wdGD99T4IgsP/+I2TZgy8YoFdpE0u6ndt6rYItQf7GMoHR
      +ZQX4JWOD3cJRSMoHQu1c7qz6sINeq0Ogl+kU2tgWxb51UVESZrwq15m3UaLq1/93GRneP/3
      /oiD7X1apSr2aMerHR6DZVM/LoNhAAKN4woCAtpQwRIclE6XRqGMaDo4jk2z0UISBVcIu9tH
      kiUaparLW2SabNx9iM/vp1mpYUkiuqKiFysk8lnarTbixi6mrjNo9jgcbtOs14gk44RiETrN
      JgvXV0nhQjpEUcLQdPqNHt1mC9njob+xhWkYaOoQr9+HJEtoqsbR0x0swyQWT7nDT8n0p98B
      mo8eIXo9JK6c4Nizb7yBJ3BSGvWnUtz4rf+C8v/y37NwCSK0V2vQ7Jqks7mJkNzYlMEA3dEA
      h0gszszi4uS9qqd0KRp1772HLsW44wr0LX3BhReUxF10zVWyVAyVtVdvT44bdk/AY71uC1sz
      JrQnjIY4MvkcofDlUq+GoTOz6KqfG7pB7ajEoNtjanEG23bODP+PTVe1M2OcqbUllj53h8N3
      H5IbMcg5msbcygKOabIw4hm1DJOZhXkG3R6GYJHKZzGHGrnZOVdyVpJcNm9RIDkzjS/gxzZN
      ZtaWUPoDdNXt/IrPZFZ/4g0Adu8+YuH1W+SurVK8+5D51UXax1Vya7Pkry1QK9eYv7JE90+b
      bLx9n0A4jDpUCMZDgEAkEccX9JOZmaaws8vCtVU0VaW8V2DvyQbJdJpkdgrLMChtFZlZWMLQ
      tU+/A6RuXXwC94vHJK7fOLM4Zb+fwJd+Ev3738YXDJwJCSzDRBTcjimcDYdEUaRTbqANlYli
      /QeZ7PEwu756oacwtbLAsz96i8TCNMFE5NwxMs5IRyyznGN2ZfHM+47jsPXWo0sdwLZtBr0T
      EiqP10N+eZ5WtU6zWCUQCbuLdKTkPp4Dss71RmzTretbhuEC5hiFXqPQZdwvsEwTQ9cxdR1T
      tCfvm4YJju32B3QDy7QwdQNJllB6A5rFCpqqYuhu/0QZDBl2egiCgD5UUHp9TM0d1rFtm1A8
      QjAanvQmSjtHbg4ViTOVz2MaBnvbT3Ec0BUN2euhtH9Er9WhtHeEJEuu/li3h6kbNEplbNNy
      YST9AaFh+NPvAJdZd3ub9oP7zHzrZ844Qfz6DY7/n39FdvEsPt6yrAsaXOPj/MEgM3NLNKoV
      cnM/mIyqJEusfuUNfEE/xyNh6bF5A36MchVTv6hJML4fT8h7hlHOHU+sIfgcIrnoBQ2AYbfP
      7NVVvH4fW/ceEzqjgywwGAzPMGl0CiWKggCmRa1ao7Z7SCIRp3p4TK/VobKzT/24Qnp5nmav
      Q+OoSGIqzfbdR3i9XurVIu1ak9hUitLOIY3DEkZXo12vk12YwSN7aA5azFxbpVEokchNoVSb
      Lu/PyiK1Jzs0Gg0kVWfY6RNKJ3n8vfdJpFP06y2isSiKpqKXy2iKgm1ZRBIxpKCPyFQKtdRG
      6Q1YWlmnfFQgvZhDkmRSOehXe8RTKXrtBjYOnbaGbcs/ng4w/ZWvopyqtY9NlGUs/1nmBkEQ
      cEbD9oauY5ommmliCgI2MFQUPIMBubnZl77+eG+5LPH0BUeh2SVh+dRsnsrmLt16i5IgnmFo
      AIikY2g9xWVi61UIhEOklzMEo2FKe0cXyqSOY7vD7kAgGmbunHaZaehn7jOaSTF79YS31Bgo
      zC3Nj8YYBWZWFjF1g4VbV0bkYxYzKwtUDgrEUnH8wQCOAPPX1zF0HUcxmV6YxzLNCUP3QNeI
      ppOovQGhaIRQPEq7XCWRy7gPAU0juZ51xfgsC9nrYXpxHssymV5ZwDQt1K6Cz+tHVRVkj4zt
      OMQySYbFptth9nhQtCHNcpXMbB5/MEDLaBCKRGg2avgDURIpPw79H08HEASBYO5irC+IIv4v
      fJ29P/19pEgUx+PD9PoRl27irL2Gk8ngj8cJB4N4YzE8wSDbv/3bzNZrl0MlHIf6QWFE535y
      nW6lTkmWL59dHJ3nsie95JGxdINQLIqhaGzdfcTqneu0qi73zbAxRELCNE1y6zmS06c1zy5e
      TBBFKvsFREmaUA+eNlMzMA1jsnN0601K2/uT99vV+qj0Ca1qHdEj06o1XE5/B5qVGqLowi20
      oYLX56VZquHx+7FMk3a9iShKdJstintHiJJAo97AHg3Uh2MRRFmmfniM4zhoA4XcygLRdJJe
      tUFuYQalP6BRr6EqCnuPnqENFBZuXSUQDmKbFuXtQ3BcojTHdlAGA7YfPSGznMfr97Lx3n3m
      r64SSoco7O9iGjr1Ug3bdBgOOj+eDvAiy37xS4Ru3cYwDLdMaZ9InwaDQTweD/2+m5D2ej1y
      v/AL1L7zp9j3HxB3bHwj8ivXEQR8Xt/ZcUgBlm6PtIpPd5iFs+zLG2+9x8Gj0zG4ew+GpmNr
      JkvX1inuHaCrGs3DGqlEjtSCS0I16Pde6mfNL82PYOACpdJFSHdqbppBq0tsyk14o9NZpk8h
      THXDZHakVeZ8H6bXltANg/y1VRzbxlA1cssLCLJEfCqF7PUw6A1IZTOowyGCahNPp4inkzQ6
      DWZWlzEFyC3O4dg2i69cw9B0vKEAs9fWsG2bZ3/2DoN2l1alhmNZWIaJIIlc//KbbH7/PpIs
      sfnufXKLcy4w0nLw+nyUtveplSvEogky09NsPnrA9PwcyakpUvkshae7pLIZykdF5hbniUTj
      3H/vrb98DiAIAl6vl+ElwtW6rhMIBBBHqE0Afz5P8Ff+fYRfdmjdv0/7rbcQNzZIjngnw4nY
      S88Dn47dk/nchRBnbHvvPQJAkmSX31OWL0AmXmbATRDFk+MuK4Wexz+JwpmfRRCFEdWhy4Ax
      hpiPqenBmegweLxeZK8HySPj8fswTRPZ63V5lYpFIjMZvIEAkWScvXcfomoqRx4Zc6iCR8LU
      dcpb+8RiEQb1JitX15FlmalslqO9A9TBEH8kxPzVFQpPd4jHXRHyrXuPyc7OcvRgk1A4jOSR
      MAyDYChMMBxm0O1y9GyXQbuHqZgEAkF6rRbtRo14NvmX0wF8Ph+yLF8YkjFNk263O3GAs5h9
      iL3yCvE7d7AVhcbbb9P99h/SbnZJpOMffg74Ze5VFBjLG73Ieq0OnUYLcYRzOrescXDo1BqU
      NvZOXhZh2O65NfL+AEEQqO8d0as2CKeTCED9qOjO4lYbBOIxjg6OaVTriA+e0ilW8Hk87N17
      TLNcQxkMsAyTXrXBvmXTa7XxBYIMhl2Wbq9zvF/A1A20wRCPVya/vEb5oMDyras0q3W2v/se
      S9dd8cNhPMbmvUdEEnEkWaZZqRGMhrBGYZyuuRUoy7KIp5IkptJIsoTHJ1PaP0KrKsQySQxT
      x7RM5uZXaPpreB0/ynBIbm6eWqmIoihIv/mbv/n3fxjcNp9kEwQBj8eDaZpnav7AJCwSBGFS
      JrxQ/pQk/HNzZH7qGzhXb1PrDOkVS4i6ivcF01+nrddoEXmOZGu7VCWaiLvaV6Uyak8hEo5N
      dg9D18Bj4w8FcWyHcuGY+VtXCMYi1A6KRLwJJMeD5MhIjodhq4+fALImQt+CvkW1VELUDZLx
      BL1SHTkeYem1mxiqztKrN0hMT2HZFkuv30LpD1n76hdIzM9gqipLr91kWG+yfPMK8akUum6w
      /OpNfMEAAZ+P3MIsuqaz/PpNBu0ukUSMQDDAs+/dxe/xE45HCMejDHt9xhT4Y82DXrNDt9bC
      sixW37xNdCqFZZrkluZolqtoQ4VWuYbWVZBFGVM36HU6mKZJceeAWCJBIBggGIngDwRQlCFD
      dUijWMERbBrlCoFAhErhmGjsE0iN+KMyWZaRJHe7PG2nn/w+n88VnQgE0DTtTJ8A3B1DjsdJ
      f+uvIv7MX6O3s0Pr7jtIB1ukwy4F3wRQd1RE6w/dRXyu2fY8S0ylSUylOVBsBl/5+uhVAcex
      sQWoSxLg4L3zE1T3t5i3B3h8PnyBs0A/r6Ig2CK+wMkcQSycIT43RWf7yCXLUhQ65RrdetPV
      BEZg0GzTKpbdPwsl9/sxTRzHodtocWTZIDBB1tqWdQYKAhBOJXj2/fv4g0Fyc7MkMmn2njwb
      hXYSzXrT7XC3h3jx0Wm3WLy+zqDXp/Bsh/z6EsFo2C0aOJBKZkgm0+w+3MDr9xOOxShXjple
      W2LQ7ZGdnWH38VOGwwG2YGPjsPLKbQ4ciMZiqIMhsf01FAAAHblJREFU20/uk5u9hi/wYwCF
      +Kj2IuzPaScIh8N4RhiT4XCIZ8SG3O/3z0xfGYaBb26O4OIiouPQfHAf/cFdArUCsmVQ3Tti
      /bVbk89XRwvqZe4zNDtL8q/8lUnINr630xUp0fo65X/630zCpjMcplysujqCQ3p5HsnnpV0o
      kci7FSVJlvBFIyjtDj5RwukOQdURRkWD4tNtOqUqtmmTWpojHI+x/+AZT9++68b/pkMkHsM0
      DFrlGoNGm/U7tygfFPD5/Rzv7pOez9Mq18gszJBPxLAsi1ahSiyVdNGmzRbKwJ137tZaBAJB
      WoUqvkiATrNFNBnHHwpQ3a8xHPbwRnx4fF7i+QzdVpvZ1WUqxSLLt69R2j2kXakDDsc7+6Qy
      WXy+EJrWxZv9hOkD/KgtHA5jmuaFjiicLK5x+CMIAqHQSQ/B7/ejKMrkvbFDWZaFBYRu3iJ2
      51WswYDad/+ccDBBteGSTjm2TWeoIdc7MEknT6xvWNQ6J9AIPTF9Fp16Cms0aYzJMoFf/FXa
      /+J/xu5c7Fqfd3XPaF4gns+i9ge0KnWUdtfNrh2HSCaF1R0STSVoVapEM0kc2ya3OMfizStY
      pkVxe49wPEZ2aZahopDIZ9l5+x6l4yKecJDi1i6+QIDi3gGBUIjjoyNy8zPE0knC8RhHW3tY
      hkn7uE4inqJZrbml28Mi82srxJJJGkcVMrk8uqax/ewxq69ep3RwxLA/IJ2cQ9dMvE6QXrON
      bZmUDooEw2F88TCHGzv4An4Km7uIloOuaDSqVXyyH8PQEaRPID36j9I8Hg+RSIR2+6wqjHCq
      ZPm85DYQCODz+TAMY1I2PW+maYLPR+anvoH8rZ/GUtVJ+SY+Pu8lu1DYcej1esSiURAERI8H
      0zrLdCEIAoFAANM00XVXGdKbz7Pyn/3nFH/nd0gcHD03ebZMA+8oHBIEgekrK5S39sjM5xm2
      e2i9Pq1uH9k5lx+d+j+nWChtywYERFHEHwoyPTeDqRtYmsbM6iLFnUOksJ+ra69x9GQLj89L
      s1InkohS2SmwsOTido4LByTmc6Sns3j9PjqNJsFwBMe2adXrTM8toCsqc+vLlHYPUft9+j2X
      WuXRn77DKz/5eaYX5zANg+pRcaLW06+38YeDCIJI7ajE+o1XSHiyGKb6l9sBwHWC02XPsU3G
      KS3ruQS4oiji9Xpd9ZEXxPSO47i5xoegT5QDAaxR6fGyc9u2jaqqeL3eSeIOruZv/jd+g8L/
      +r+R2txCPDftpqsqPa2FtxVBV1S8AT+tYgWf30cgEp5QvNsHBbbfukt5e59oJsnBO/dc4mHD
      5NGfvkV8Pg+yROnwGKU3QO/30bo9+vUWejrl0h/iOlh6JsvWvSf0Wy5zdeXwmOWRcIkvGGD/
      8SaO5HD1a28gShKP//h7aIaGLTgojT7VUpH51TVq5RI4Hp6+dRfbcZAEifxSFp83RCDqmSjP
      yB6Pq9tmO7SqdSRZJr+8wP6TTbx+P6o6RGurOF4LQVVVx/dxKZt8Cs1xHDRNo9vtnllo46en
      LMskEonn7gS2bdNquVWLl0lsX8aeW306Z6J4QhNyPp/xSBKFf/4/Ed7cxBgMcQwH3dIJZIPk
      VufBcendfekEjmGSWbwI9bBt2w2Pdg8nxLcAR892WPziyVxFr9FCHdEotit1Du89Jp7L0KrU
      J7rEg/6AK196A0PXOXjiktWGggFa5Rr5xXlXN8AwXHWXah2vJDPsD/AGfEiiTPu4xvLVKyPA
      2yHTC/MUDw5IZjL0Wj2Gwx7BqSiiJNJvdVzA3lAnm52lVNgnmkqgKkPajSZv/OxPUdzaY/7K
      ymc7wLgv4PP5UBTlTBlUEIRJx/h5DnAanPZxmSiKL3W+0/CM8583LIuFv/23aD97Rukf/WOE
      fo0rP/HqGSxSbmGG2lER85Rs6+Tcts2w3aVTrlEvVklMpSdPWByH4sYOOC6jxbDTQyk16JXc
      WYRIKs7s2pIbXo2IeQ+23B7E4dNt1r7iakF3KjWkRhvZI9NvdyjtHzFzfY1IKkEsEKKwd8DS
      ras0ihXUbh9d0/D4vDg4k+bbsN8HBCLTSbKr89iWjTp4xvLtqxw93iUSjzPoJZhZWKR4eEh6
      dpqtt+/hDQfZuvf4sx1gbL1ej8FggGEYlEol4nG3uSWNNACy2SyXfU/P20F+ULMsV070B+3R
      CIKA3Wqx+3f+DqGAF9EvE4iFiGaSiLJEs1QjPj1Ft9Uhd+Vk6L+ye4jRGzC1OIep69T2Dpld
      d5UrC892WPzyG5Nr9OpNuo/3SUxlsC2LrcdPCKViDDo9YomY2yBrd8itLaEaOh6/H0/ATzAW
      pbK5izNU8UeCZOZnON7awxsMEguGKB4d44uG6FTqLCwvU9jeBcullI9PpRl0uoSCYYZ9hfnX
      19EUlWGnhyyC5PVy/GwPUzWJZ5IsrK1ytLOL5JfQDJNwMobtfIL1AX7UFgwG0TQNwzAQRZFe
      r4fjOIRCIZrNJsFg8FIHGDfVPB4PmqZ9bPcjSRL6CL//g5jjOPimpgi9+Tly9QaO46BrGvWn
      RbqDNrd++ssTEq/i402ya0sgCnSrDZZHmKZBp4vaG7g0jECv1aZxcOwm+Q4MO10G9QaGYSII
      EEsk8KfjrIwkV/fvP+H2G19h7/4TkitzBKNhJFlm7+4jjKHK2ms3qRfKLgEvbs9Enp5G8sgs
      vnYTy7R48od/TmY262ochIKEEzHqhRK9UgtD12iWq3j8PgxDp1lvsnjzCrFUgvzSAruPnrHx
      9DHhWARLN4nGom5jTPoUUSP+sE0URXw+F8OSy+Umia2qquTzeSKR55PciqKI3+//WB3gdGj1
      g8IsdF0n/e/9u/T+63/kIl19PpK+DLqjn5R7ZZmZtSXKu4e0qjXmr65N3utWG0yvLU1KqfM3
      rmDpBsNak8z8DKGAn/RUmtL2PpnpKWzLonxYdAdwBIFey+X28YaDWIaFNlAQZYnM4hyRdIrj
      B09d0UbDILs4h+z1UqvVGHS6xPYLLtViPkMoFsXr83KwsYOh65R2DwmGQkg+kdxoqF4QBJ6+
      9R6hWJSqfYxpGIgBD6FYhHQ2Q6fWRHIEltbXaBvKZw4AUKlUJqHGYDDA5/PRbDaJRqMEAgEM
      w0BVVSzLQpIkJEk6sxuMd4GPMxcYn+c8DPujmjedpmNePmwzNkEQmF5ZQBTdOd1IKsFY0ug8
      o4RlmqhDdcJ+fXDvKWZTo0WVqcVZ5taWUAdDCIdYW1lg/9EGyBKzc3mKz7ZR2j3mbl91p9B0
      g7lrq+w/eEq308UWBVKzOfyhAJFoGE1RiUQjNCs18kvzTM1OU9krcuX2LY739rFDQcojfTcB
      EP0+CnuHaKaOahks3rrK5tv38EseqntH9DtdwvEYss/7mQMADIdDZmdnefz4sctYYFkuF323
      i2EYeL3uYLlpmkQiEfr9Pjdv3jxzDkmSCAaDDAaD51zlw9vY4T4OJ5D9foyVFaidME4Il03l
      APFchv2DEkNVxNtt0BnqBKsNAqEAwXDoUie3NZPpmTl2t54gCSIO7shjfHWBbq1BMBknNTvN
      zvfvIVg2K7eucfhsBySR5dduYmo6oXgUbaiSmp2mWSi7vY2AH38oiK5pHD3bQTFMwpEQhu3O
      MXiSKSKpGFPJMKZhIUoi4UQUURTZfesumfk8pmESWFikVasyf3OdWqGI4Aj4/L7PHAAgkUjQ
      brdJp9N4PB5s28bv92MYxqThNa4OBQIBAoHAhUUpCMIkjziNMrVtm06nQ/wUx//50OayMEeS
      pA9EgX4Y03Wd2M/92/T/2f9I+BI2urGpikr16pvM/fUvIfn92KpKRBSx+z1ad99Df/c7xNIJ
      QKB+eIw1asI1y1WsqIvdt2wbUZYJhkMU7z1h/vY12vUWuqISz2bwh0NsvfeAaCqBpqiUtvbQ
      FZXFm1dwHNh5/xHqYMjy516huH9EMBAgFI8i5maI/OS/RXzjPXqNFg1FR1i9Qmh1Dc9rbxAM
      h3EMg+a738PafISmqNi2zVGxTv5v/ga9/QO63/sOi9fX2bn/FEcTPnMA4MziHC/0wWCAqqoX
      KjuSJJFIJCYgunHoA24uEAwG6XZPBtRd7h+TVqs1+fv4PJZlTXKHbDZ75jrnneI09OGjWmR1
      lcF/8Ddp/O7vkuYsffzY6mKQ7Nd/El3XsXQdxk4YjjD1jW9y3GkjHj4j4PcSC0dIxuLoiop8
      Y4X0bB5BECjuHpC/vorS7WF5ZZL5LMnpKfYePiOcjNOrt8ivLhGKRTh6tk1uPk+71qBbb+EN
      +IglooiyRDiVwBPws3/3MYXNPWKv3CGQn2X7/n2yv/rrzH3zm3hCoQsPj/DcHLb57xDb2aa7
      vcXcL15FKRwhDXss/sf/KfVv/wGRSoOZhZm/nHDoF5kgCJMO7xjqcNoJLMtC13W8Xu+Eh/80
      XmgsQDE+ZtwFHnecQ6HQJN8Ih8OT/OF8hel0L2J87h80D7BtG08qRfC1V6ltb6NUy+SWTuh9
      BUGgM3cF7/zCpcc7jkPs5i2G/jDVP/8zEuGQS1ZrW5hAOBFDEAV6rTbxaXfGt1OpE0m6JeVe
      u4M2VOjXGmTm8q7OcKdHKOayP2y+cx8si6nZHKIgUNor0K02WHr1JpZlYRoWui/Iq3/vPyF1
      8yaS9/mcR4IoEkinia5fwZ9KEVlaIvHq6/iiMTyZLPu//wdMpaI/vn2A8wvoo9h48XY6nTOA
      uTEwzufzoev6BCTnjDA8tm1PKkIf9YltnYMWn98NzodQH9ZkWcZsNmn94f9LqlUkEglx2DNI
      /up/iPWcEGkckomiSO/+PfTf/edgWRiajmqZRNNJcKBWLJMZMW+0ihXiU2mUXp/F128hiiKF
      RxvoA4Xs8jyRRJz9h0+RR4RjkiQSjISp7BVQNYP1r7wJQKmjYS5eZe2XfukHlqZ1HIf2s2cM
      N578+DrAOJR5WS6fF51H13U6nc6ZncDv9xMKhc7E6o7j0Gw2J3MGpzE6H3SNsY0X9bgRNoY7
      fNwOMDav10v93vvYj+4R/9ZfQ4jHL5zvMmCgx+Ph6B/+fTLaAF1VKTypEYm5tI+K1WLti9dB
      gPLeIYt3bqArKuWDY2RBIBSLoAyG+ENB1L7L3tapNVi4cYVOtU5164DZ5WU6rRZyKkpyLo/5
      1Z8l8errH/vk3ceXZX3C7HRo8oOex+v1TsKVsamqSr/fxxwNiIwtFAoRDAaJRi9ncLvMxpNe
      p4f0XwSHMAyDZrNJu92eoFGbzeYEj6TrOsPhcNKdHu9IlzmjYRgE1tZJ//KvXbr4x9/B+YVn
      miaBn/qWOz/gdzWKvT4/Xp8f2ePD4/fh9fsn+mcevw+fz4tj23i8HnemYKjQLlaIZZLkVhY4
      fLKFbTuEo1EkWUIQJZpdne61zxN/5dUfytjpZ8H/S9gYegycSXDHYU40Gp08qf3+E2bmSCRC
      t9v9SE/o85j/8X2MrxsKhRgOh5OQyzRNqtUqgUDAjbd7PbxeL4ZhTJp6juOQGtHJj20wGBAM
      Bp8rIvgiDFT6c5+n/J1vEze7KFodUdEAgV63TWHbrZTVjopYOKi9AZFYlG6lhjVQiCXiRBNx
      us023Ubb7eqqJt3MHIG1Geq72yR+6lvc/sVfRPL5fiiLH/jxDYF+GGbbNs1m88Ji8fv9RCKR
      i0MojsNgMEBRlEuHbk6f97SdXvTj6bTzCXG/38c3Whjj48f9i3EiP1744/+8Xu8FeSbTNF8K
      b3TZLiAIAq133sb/f/0rdE0jNZKSPdo7YPVrnwNg/94TFm6sUzss4hNFes02qXSSVqXOcDDE
      7w8gyx6qrTaz64v0l67jm1tk5utfxxu+KAb+cdtnO8AlNg5HLqvDX/YkUlUVv99/wQHGvQHg
      uUMzl9nYwUzTxDtKSM/vIuOQbHyvcFZ77GXyg5dd/M8zx3FIf/4LbP4f/zu+rgt3wHZQeheb
      geNvbWphhtKzHXILs6hbByTSabYfPMHJz1LNLpO9cZuZr371I9/Th7XPHOA5dp4vdIz6HD9l
      T5sgCGiaNnkin38vEAig6/pzwW3nw5zTT/DTdn4xv2hxf1gM0Qf1GJ53LstxWPitf0D1n/5j
      oiG3a91V+hQ3drBNi2ahhCyI9JttHNMiEAlSL9dwBAELm42nmyhT03i8Pl79tb9OIJ2+9Do/
      LPuxTYJ/EBvX5s8zx41DEVmWJ6wS49eeF+KMF3M0GiUejxMMBidP9dOfGdt5DNDzzvky9qJz
      jHMDgHa7jaZpKIqCYRgYhkGtVpv0MxRFodPpMBgMcBwHVVVpt9sMhy7LhRyPk/obv46mGQTC
      IRavrxMLBUkl48RCYRLeMPPTc0gOpKbSBGMRJK+HYCKGHA4hx+J88bf/2x/54ofPdoAXmq7r
      k8H3cRMrFApNFsLpp6xpmpimeSHGBiZOMwbRaZr2QqizKIrPDU8+rmRwDPkYY5xM0zwzEARQ
      LBaJRqOTPKPXc6nMx3nNGEFrWRbydJ7K7CqhdhHZ65mo2EzY5Ub33m93yK8vE45HadRaBO98
      icU3P+cKH/4bsM8c4AU2BsF1Op1JU0waUwRyMVltt9uEw+FJxei8nT7udHh1WXlSluUJGO78
      8R+HiaI4mX0YQ73HjHmndzXLsiahncfjmcwgx2KxSWnVO6JATP/Sr1B5+y0S7/wxwci4OXj2
      uo1SlcBAoVkoomsGA8vHrb/1tz+2n+vD2mch0Ats/EsfT4dZlvXcciG4eUOv13thxQfcp+9p
      +MR4wb2sfRyQ69Pn8Pl8eDyeCTZpXC0aN/vG9xsOh5FlmVAoNIGKnMZB2Y5D7ie+QqPWxLZs
      l0BX0yjuH2KO5JVCsSjTi7OIsodWs8viz/38D63E+TL22Q7wATYOX/x+/4R+5HT4c7oMCe7T
      fDgcXmicnT/nuI4/Pnbc+Br/e3ze0zvAZR3jj2qnq1zjpqFlWfT7fRRFcXn2ZRld15EkafKU
      NwxjsvCTI72zscmyjCPLdJ0Azr0dOs0Wqak0oWiUZ+89IBJP0CzVkaMRxGQKRxfJvHa5aOGP
      yj5zgJcwQRAIj2rSw+FwEitf5gDgNpfGi/yyhSoIJ4P4Y0JeOBsKjZ1M1/VJWHLaPo4ZgfEi
      h/+/vWvpbRs7o0cSKT5E2qIsO4jb8TRIizSLAgMUs5jtDNpNl93Ojyj6P6boz2kXBYJ2M5tZ
      FFMEbTCBgTycQI5jvUhRl6TYhXLuXF5RsuSxLCPgAYIksnQlJd937/c437mQzNckSea8HNfF
      aDSSo5kM6wzDkK+L41hSxelEIk1hH/8MR7YDzICg20XDMOZXm376C+BlDZ/85tcYD0bozUwY
      rrviE24flQOsCRqa67poNBoIwxCmacIwDDk/rGI6naLZbJYar7oed9c4juXjqnE3m01Mp9MC
      7RooPw2Yp+hVJhVkq+qfiw6pwrIs2WUuW1Ml/HEjSNMU977+GoNvvkGe57g8n+vyxFGE/sUF
      4g+y9FORovvbzzETAthhI7bKATYEd+9OpwPf92XiqIOKbSwVrlrPcRz4vl84MdREudlsrswr
      eFrQUIUQMsEt+1yGYRROGF0gWAWp4TqEEAuCYgzjjIMDTB4+RCoS2LYP03BgOy72jvZgexZ6
      py+QxxNMX5yi/8MPS9/7NlA5wDWQ5znOzs5kKZA5AgBZTweAy8tLhGGIXq+3QJqL41jOExiG
      Acuy4DgObNtGrVZDHMfSUAEsTZTVTjBBtbooipBlmXwv4MdGG0+e4o036313njJlJV9SxNu/
      +z1Mby5RbjabsFoWHK+Fer2ByfMLZC9GcGCiq42W3jaqEOgayPMcvV4PURQhDEN0u11EUQTb
      thFFEdrtNs7OzuSEmMrMZKJrGAYcx8F4PMbjx4+lYVKF2nGcpXKNZUg/3MBOUKkC+FFhjoM8
      OnhZyDrs2SzLSg1fnb+o1WqwP/k58j//Cb1vv0X0t7/j5OFcee7kVw/x3+/+DdtxUXs6xbTf
      h3N4eOX7bgsVGe4amM1meP78uYx7uVPv7+9DCIHpdCrZmAyRWEYNggCTyUTGz1mW4cGDBwDm
      RjwejyGEWLiwm88l9P4AqRubDAHxuUx8iavKrJxwU9fRqRxM3q1mE+lwiPN/PoHxrydo5jP0
      z9/h00e/RJqlSP7wRxx/+dVan3cbqBzgJyLPc0RRVJgKC8OwQH6zLEvW0FcZJ08UrqOOVepG
      qV/hpJZMNxmmZyeYDS4+plIy+Od3797BdV20Wi0kSYIsy2SzkFwo9fRilUgIgU6ng2w8hghD
      pGGI/pN/oPW//+BV3cYXf/krzCXNw22jcoAt4OnTp3Bdt2Bc9+/fX8m8ZGzNizd0A9QFcFWj
      F0IsDOevC+7Wtm0XSrv6+wDA+/fvMRwOEQQBsiwrVMIYvvFko4OORiP4vo979+4V8hnDMPD+
      ++9x+Nln8t9qF6hygBsGQ6GLiws51nh8fIzJZHJlc4z3FZCQliSJDLPK2Jp6Yntd6M5VpjYN
      AL7vS0dhZar9YYpsMpmg1WrJn81mM2RZBs/zZGim0kaEEPAePSpQS3aB6gS4YZA2zVhe7bb6
      vi/nA1a9ngYYRZHk2+hGyUpMmaFuegKMx+MF5ywLu3So0jBcq8yYeQsPk3K1CsVraXeF6gS4
      YbCsCRQNkTRi27ZX/ofTOPI8h+d5ePv2rRxtFELAdV0kSYI0TRGGoZRu9JTpKT0kugrs5qoh
      EGv8y5xAPZVYXSqbQWDirnaMuRlsyoHaBioH2BLKGJ5CCHmry1WTWDSUTqeD8/NzAHOHGny4
      ErTVaslGm0rVqNVqUpmCs74qp4d5CY03CALJA2ISTdozE1xg8bKOPC9Kt9Mh1CtmmaOoz1Md
      bJc7P1E5wJZAo9PBxHFddDodtNttyTRVewmc/9V3UVKU+/2+LMWORiOpgMcuNXsCdAbmLBTq
      4u5PWrS6Y6sdZa5B0MlIpdiGyNdNocoBtgByYobD4QJ9ul6vIwiCjZyAxjkajWRHmYZVNjij
      zzPrBjcYDNBqtUpDEFZv9FkEOluappIZq/cO1IqV6hz83tz5KS95F5xg92fQRwjG8b7vLwzH
      qMS166zH4XsauGmaC1wevTGlPl6r1bC/v18gw9GZuMszJFLB9yRxL47jBUIeS7ksi+oGTge5
      Sxtu5QBbAHc6wzDkhBiNgeEES4GrEk19zUajISUZ+R6MxcsqRWolRzdWveKjGj7zlGWgejbz
      nDAMcXl5WSgAqDX/er0u+Uh0tDRNpXreLlGFQLcAVkrG47Ecq3RdV9bOSV7bZD3SLbj7q3G8
      TpNY1iBTB1zWKXsCkJwhNtAoHhCGobxPgRNmrFZROIy5B6UjTdPEycnJRip6N40qCb4FsKKy
      v7+PwWCAJEkwGo0AzPWCNi0JsuvKuwf0nV6lSZTNEKinETe/TUMyvoanhmVZcF1XKmZw12dl
      yLZtpGkqVe0oEnAT8pU/BdUJcIugcdIJaHSmaSIIgo3LghzE5zANAKlMoRu0HvZwKJ7PXccB
      VNU5fh9VCYPhHfMF9jPUMU9gTtfudDobfddtocoBbhGM49vtdqHzmqbpQlK57nqkGhAMNXTo
      Rq5e7L1u6KPX7lkt4nrMexiOMSdRf/Fz3xVUDrADcE5AFdJlfrAJVP6Qqt2/DKoBcufWL/94
      /fo16vU6Tk9P5SnFGQDmMmo9nwZP2odq3MvmGe6SA1Q5wI5Qq9VkIqw+dp11HMeRwlaswesX
      7Knrq9QF9WdpmuLNmzfodrsYDAbwPE8O/PT7fXQ6HSRJglevXuHw8BC9Xg+WZeHg4GBp2KX/
      /S41wYDqBNgpVIlF3/evLVRLbo0eDo3H4wLbUuX7LDPWo6MjPHv2DEEQYDAYYG9vb34ZxsuX
      MAxDqlKrd6V5nrdQbtWrT+qwzl1ygCoJ3jE4vH4TxLDZbCZ1fVgqJalN3fFns9nCjs1qDdfg
      8/v9vrwvmRwiKuDxd07CkQZNJyv7TjyxvFuQPl8HlQN8ZKCYrRACw+Gw0CnmRX0c5mdnt2zX
      JqbTqSxVxnG8lM7NywSZM1DhQq0Ycf29vb2VjbbbRJUDfGSgwQ0GA8nmZBjEyg87sUxSdWOk
      sfLkmEwmaDabkopdxmPiY3wtTwS10sVhmbuEygE+MlCBQt952cGlHKN66k8mE6lm0Wg0ZOjE
      RpfrurJrvGwIR80z6Dh0tDiOpQhvHMdoNBobzStsE/8HXDeo3QYUnpQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='child fi by state' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='economic conditions and PA' width='192'>
      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
      pEoiWKy1b05EB0ecqsBGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='fb list' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='fb per capita' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANpklEQVR4nO3dyVMb2R0H8O/rlgQSCCEkNrHjYWLPeMGTpGpmqlJTqVQlqcoph8whp1zz
      N+WQa6pSueWWVPbFLo9jO2N7DGY3CINYhPalu18O2ILGjePXRjb0+34uprH6pyd1f9Wb+oeQ
      UkoQaUgIIYz3PQii9+nMA2Db9lmXJGobbgFIawwAaY0BIK0xAKQ1BoC0phSAZuUAf/7HLQDA
      +vI8bt++i+Xlp7h96w7KTZ79oYsn9OYPlXj46DHgNFFvOrBEBJdH+7FYbuD6pSHk6w46jcPT
      oLy2RheFePMrwRKNegNbuRx6Ez1oVktY2y5gcqgXy9k9XLt6BSFDwLZtmKbZ3lETnQEhhFAI
      wJthAOiiEEIIhV0govPHsWzc+tUfleaJJmK4+fPvAVA6BiA6n+yGpfR4q3n0eJ4GJa0xAKQ1
      BoC0xgCQ1hgA0hoDQFpjAEhrDABpjQEgrTEApDUGgLTGAJDWGADSGgNAWmMASGsMAGmNASCt
      MQCkNaUAHOxuYXVjCwBQLeXxzdwi6vUK1tY3wU4odBEp3RNshjtQXF9DfXgQ25tbSA0MIbue
      RcSQ2K9Z6O0wIKWE4zjtGi+Ri+Pnk1eitY4qBUBKB6YJ2A4Q701gY2kBTlc3hmPh1kCklGyM
      Re+M33Xt5XxKAahXK4jE++DUiuiIRNCZ7MdEJoVnz/cwHQ1BCAEpJfsC0Tsj/Kz/Aq11VCkA
      6aFRpI9NzyT6AACXJrt8jILo/eNZINIaA0BaYwBIawwAaY0BIK0xAKQ1BoC0xgCQ1hgA0hoD
      QFpjAEhrDABpjQEgrTEApDUGgLTGAJDWGADSGgNAWmMASGsMAGlN6ab4rY1V5A7quHLlQ5R2
      n2Nl6wBTw0ksbuzi+seXYRqiXeOkAKoVKti4t6w0T1e6B0Mfj53ZGJQCEI/HsbGVhwNgv1TF
      RCKKhZ0CLg92IVex0B81YNs2+wLRG6kVq8jeX1Gap+/SINLfGm5NO5aPJmwSsCwLgGIADg4O
      YDWryBdKEHYDT7fL6Et149HKNq7MjrR6rbAvUPDlnm5i9d9zSvNkbkwic2OyNe1nPRFCIBQ6
      Wm0d2Mo1INCqoRSAwZEJDIxMwBAC6PkQY1MSQghMTUkIwcMJnVj1Jqr7ZaV5mrVmm0bjn1IA
      DMO9kgshXP8SXTT82CatMQCkNQaAtMYAkNYYANIaA0BaYwBIawwAaY0BIK0pXQmmYNhb2Ubx
      eV5pnv4PM4j1dbdpRO8PA6ChvZVtbD5YVZqnu78nkAHgLhBpjQEgrTEApLW2BKBQKGBubg5S
      ShSLRdy/fx+FQgH37t1DvV5vx1MS+dKWAAghIIRAo9FANptFOp1GLpdDMplEJBJpx1MS+dKW
      AOTzeSSTSYTDYaRSKeRyOQghUCwWsbOz046nJPKlLQEIhULI5XIoFAro7OxET08PhoeHEY1G
      kUql2vGURL689jrA3bt3cfPmzVduhXyd/f197O7uAgDW19dbv19cXAQAPH782M846Qw9W15E
      bnNDaR7jaTcS1aOt987Cc6xtql1LqC0JFLuOjgEru0UsK9bYD5fhPOxoTUvHUa7RUY4i+vAh
      gNcEYG5uDktLS5idnW39rlGroFhtoi+ZgFWrYCdfRn86gUKximRvAkIAyWQS6XRaaUD0bnXu
      AN0FtWugl2e+hdSlodb0Jnpgrqqd0BifnsHE1ZnWdPF5HvX7e0o1UhND+Ojq1da0Y9nIDz9T
      qtHZG8PVFzU834Wv7n6FhacLr7StKJfLyGW3EEsksLOxgVCiD+trq2hUGzBjXeiJHD6efYGC
      R+JsluvxGhL+6rlrvN04PAMwkhnBSGYEQgjX7o+0LfRlRhE1gGhXFEvzT9GZTmGsN4a6JeGE
      HDbGugCko758HOdw2R6fVn/eEzVsHzWkfOsakGjV8AzA8PCw169RrpRQqBYQDpkIhyOIp/sx
      kUlhbXMPH2ZCh/2CwMZY553w0cLSNAxXQyqV48Kj53XXOLeNsZ48uIO1rX3U6hI//MkP0fni
      DRubnDn2qDgSqQEAwOWZXvVBEJ0DngEwTROGaSAUEvyuBAWaZwAc24ZjObAtwMceFtGF4RkA
      wzRghkwYDsCmhxRknns4vb1J2JaFrkQCISaAAswzAMtLy0gNDOIgu4Gqj1NmRBeFZwAmpyex
      8OQxOlIDiPKvvlCAnbIFWMHMR1fR2NvmFoACzTMA09OTmHv4X4SS/YhxC0AB5hmApaUVXLk+
      Czu/gwq3ABRgngGY/e6n6O2K4oOpqXc9HqJ3yvM6wP3b/0TVjCI3v4r0tY8QvG4wRIc8A/Cd
      7/0AhmHA/vRTGCa/DEHB5bl2m6aJJ48ewpK8EkzBdurH+/bKE/zmt79Hjd/tpwA7NQClUgnN
      YgVNrv8UYJ7HANWDHSQnPsL1L6YR53UACjDPLcBXd+4hIivYPaj7vueS6CLwDMDE5CjqThil
      nSx3gSjQPAMw/sEVTI5lIKTDs0AUaKc2h1lbeIJ8NYy6lIgwBhRQnlsAx7ER7e6CJYGIOFr5
      t7NrePDgazQcIJddxd17X2N78xm++s8D1P20pyB6zzy3ANnlp9g5qMEUIddBcDKZQqkBmAKo
      NCVmBnqxUKrj6ngKexUbAzHJvkBtJh0Hqm+vYRiuK5p++gLZtgPLslrTvnr6OO4ax/v7vHEN
      Kd3jsPz1BXpZwzMAo5cu48ncHFKpEdcmYmFhDk6oC4VCERHhYO75ATIDCXy9ksO12QzMF1+b
      YF+g9nnw23+jkFVrJ/jdX3wfnYlYa9pXXyDzRF8gH1+RuTB9gQBgeGgIuULDtQW4cu2To4lE
      HMPjhz+OjE2qD4LoHDg1xqvzj/DfB3NocHeGAsxzCyClxOznX8B8vIIOwTNAFFyeAbj1lz9g
      bWMbTdnJ06AUaJ4BiITDgDAQMQ12hqNA8wzAzc+/wOxnh/v+Br8MRwHmGYCN5Xn87V930RHq
      xI++/CniJkNwFso7BTTKan9VJT7Yi1BnuE0jIs8AjF26jJlnS/jPwr7rSjC9nWd3FpGbzyrN
      c/1nnyGR6WvTiOjU06CVpomZ4RTqPA1KAXZqAEYGE9ixTXTzGIAC7NQAbGwdIGVYKLExFgWY
      5zFAo97A5PgI1g8sbgEo0DwDcPfWbchGE9Pf+fa7Hg/RO+V9R9j4EIzuGJ7NL8HyegBRQHj/
      neCpGYxMzXj9F1GgsO8haY0BIK0xAKQ1BoC0xgCQ1hgA0ppSAKTjwH7RDsOxLdRqdTiOg0aj
      qdyqg+g8OLUrhJf8Xg67hRo+mJ7AxvIiyqIDUaOJvd0iPrh+A/EI26HQxaIUgGR6EOXaMwBA
      tLsL26ubsPr6MDOWRqnhIGaCjbFew5HqN5jatu1qBCV99Ou2TtZgY6zXN8Y6zXZ2Ddu5fcS6
      ExCGgUh3D8bSPVjK7uHj/hDMF1+cY2Msb4ZQP+QyTdPVCEr4aFAQOlmDjbH+f2MsLwOZcQxk
      XnTDQg9SA4c/XU/2qw/igtlf24HdUPtmVN/0wGFbQjq3lAKgs6W/PkJlr6Q0z2e//BGMCANw
      ngU+ANKRuPPrPynN0xGP4saXn7dpRHSeBD4AgES9VFObhTcBaYPbZ9IaA0BaYwBIawwAaY0B
      IK0xAKQ1BoC0xgCQ1hgA0hoDQFpjAEhrDABpjQEgrTEApDUGgLTGAJDWGADSmtIdYbVyAeWG
      QCoZR718gPXtAsaGerG6uYdLU+MwzvhPqpZyBXz9u1tK8yQn+3H5xzfPdBwUXEoBcGCiUtpD
      KhlH9nkOMcPAN2ubyMRC2K1a6Osw4Dg++rScwrZtWPWm2jwNy9Vvxk8PHMhXe9b46XTk2DZs
      ++hDwU+/JMd2TozFR08fx37r98RxnBM1fPQFku4atuOjpYmUrhp++hMdX75KAQiHQ2g0GrAs
      G4BErdFESADVehNxQ8AwDEgpIc5oS+BriyLgen4frXheqeGXMAx3HT8vxxBvPRZDuMfhp54Q
      4u1rwF3DT58knKzh8/7tlzWUAlA82AcME5VqDaOjo9jJlzHe142t3QJ6O0IQL1acs+qF42/B
      u5/fzycVgFdeg6+RnHgv/DS1evX9PIMafoL4Sg1fRdzvh88PuOM1HD9b+GM1lALQ1z+EvmM9
      sIYHowCAzFCn+iCIzgGeBSKtMQCkNQaAtNa2znC5+SyW/v6N0jwjs1MY/fZ0m0ZE9Kq2BcC2
      bDQUWxJaDbVz/kRvi7tApDUGgLTGAJDWGADSGgNAWmMASGsMAGmNASCtMQCkNQaAtMYAkNYY
      ANIaA0BaYwBIawwAaU3pfoDl+cfYLTZw45NZbC/NIVcHUl0mNp/v4+NPPkFX2GzXOInaQu2G
      mEgMU4OdqFpAOBqFzO+i2JHAtekh5OsOOo3DhkNSSl8Ni6QjYVlWa/pkc6o3qiHdNfw2xjpe
      42VdVbZlubaxjlR/T2zbdr8eH42xrJM1fLwntu24avhbvs6ZL1/H8tcY62UNpQDEwgLZgo3J
      3iIMw4ARimAgHsU32T1cvzYK80WTItM0YZjqe1fCEAiFjoZkmupbFCHcNXz1BRJw1XhZV5UZ
      Crnq+GkEZZqmq4af3kKhkzV8NJMyTcP9WnwtX+PMl68DH93lji1fpQAMjkxgcOTw53h3HOmh
      UQBAemBYfRBE5wAPgklrDABpjQEgrTEApDUGgLTGAJDWGADSGgNAWvsfPMzj8uFAfoAAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='fb under avg' width='192'>
      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
      kW7NMli5XFUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='food banks by zipcode' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nMy9V7MkyXUm+IWOSK2u1qXrlmiNliAaIMghCYKgAkgDZ2dnbGx3X/YH7AMf
      9ies2b6s7dPYGJczS3J6wAUJghAE0UB3oxuN1qXl1Tq1CpWxD5ke5enpERmZ91ahP7OyypsZ
      4X7c/fjxc44fPy7s7u56oiii0+lAFEUIggDP89DpdOB5HgDA8zz/cxDIe/TfLIaVEVa2KIo+
      HYIgQBAESJKETqfjP2fbNhzHga7r3HLoNrFlB9HMo3/Yc/SzNG2qqg5976TqB+C3i+6jYeWR
      75rNJhKJhN9nnU6n7zlN06CqKlzXhed5aLVagXSoqgpd19Fut/2xMwwDnuehWq0G0gcArusC
      ACRJCm1rWFvIdzz+lMkP9Iuk4+gJwGOeIJBGhhFI/x1lcpHnyPtkAkiSBNu24XkeFEWBZVnw
      PG+gwzzP8ycR6XCaTvI5jLnIBCT9E/YcTTupc9h7w+plaR0GVVWhKAoajUYonSzTkLrIZ5pB
      aRpkWYbneTBNM5Qex3FgWZY/WRRFgaqq8DwPqqrCNM2h7R82LrzPLM10WX0TgH2ZrYztcF4l
      LBFsRbzZF4X5WcLpSWnbti9Nms0mPM9DLBbD4eEhBEFAPp/3JwL9/ij10ogyCLyJNGwAh4G3
      akWB4zi+BA0rj1c2j/nZskVRhCzL/ipqWZY/GQijS5KEVqvVx+SdTscXqLIswzTNsdpI80IU
      8HhY5j0UJHHpzhEEgdu5LIEss9N/RwWPgWhJTDqXfFcoFCCKImq1GpLJJFci8xCFpqCVjf58
      HGYPq3PUiUTGJ4o6GlRu0Peu66LRaCCRSPjjEI/HYRgGXNdFq9WCYRioVqsD78qyDMdxUK/X
      YRgGJEmC4zhj9d+ogoxe2QBqAtC6MA+sPkmWvzD9jRAYpl7wVgheGawOSr9D1AvXdX16yGrQ
      aDQQi8UG6mTtmnGY9iTKiIJxhAYBb9IMW83JM7wxo4Wjbdsol8s+AxuGAU3T/FWXqKM8WJYF
      x3HQ6XSg6zoajcbIdiMrlEedQIIgQGYZn2YO1vikK5AkCZ7nwXXdoStBEIZNHhpB+ir5m6Uh
      aJUKU7+iStgwp8DjmgTHAc/+YlVUFuQ34iDh/R6LxeC6rq/CNJtN6Lru84XjONyyyfOyLEPX
      dbiuG1pPFCk/ipCg2y0S6Upb+wDfkAPgG56O40BVVb+TohiRBGEMNArxNJ2iKPZNZPK9pmkD
      yzBN8zgIoj3MWTBuewkkSTpxegG+QS0IAjRN6/Pa8MbXdV3EYjHIsuzXQ5g5FosNaBT06gF0
      jXTLsnw7blTaabDjHxUimYlAv3HCI4LtCNqbIooiJEkaYCya2emVZFSGIC5E9t0wDwAxxFKp
      FFcXHWXSsu+FgdfOUQ1+9lmiKpzEChNFABDmJM+z7wiC4HvfNE3z32s0Guh0Oj5PsfXS/+jV
      OYh5h7WXqFuxWAzJZHLkSSAriuL/QevUQFfPD/MiuK7LNY6DJgD97iggk4seELY+VrVhPQS6
      rqNSqSCVSgXaEiepvgSpHVHq4dkVRBUlkjkKxpncw+ghIDxSqVT6vnccB7Zt+/o/b+ITmmRZ
      9oUmUZeiqKGiKEJRFAiC4L/XaDRCV17WAUPqlemOdV23j8mIj50eBNoYDfLO0I0k30XV4+jn
      SEOBRzo+qZNsgtH1kPdZw5qsBJqmoVwuI51OD9AbRPtxQauVozIk/awkSWi322PvJYwKdgXj
      CRWgOxF4m1SsTk7bHeR7WZZ9NZq1PWk6WHQ6nYG9gyDmZ8eXqHe+F0iWZZ+xPc/zlz4icYmH
      RVEUrvFECB9lo4zdaKPLY1cc13UHdnzJu5Ik+atQkJRhB41IDFqNIxMpSPrwBo/9PQrGnVg0
      g43iODgOaNWY7Uv6Gd73rusiHo/DdV3U6/XA54jeTsaS1kCC7I5R6A8aF3ryiJIkQVEUdDod
      OI4DQRCgKEqftKd/Y2f0MBWH6I60/hjVKCOTyrbtAZ82KYNMzKCyaLiui2w2i2Kx2DcRhtFE
      nqPbO+rgsM+RiceDpmn+bqmqqv4m068DdDvJONL/gEeSlYwxMWw1TUMikRjgGxrEcA5i+HHs
      Rd47hD4WMnlYFEVfv6SlKq2vka1sVkcdxcBjCaU/85iJlc685TGMCXm0pVIpVCoV6LoOwzCG
      MnHQgJykqkSDqJ20+vS4EFY+EUCsmkn3KY+pPM+DZVmIx+PQdR2O4/ixQrxxbrfbaDab3P4c
      hbdkWYaiKH5MGA1d132Npu+der3uz1yi6hAdidaxySYTcYPStsIoKgDPM0IbS2FlhdkXrITh
      uUQJJElCPp+HZVmwbRu0IyBKG3g0jfJOFIwj+aKUScCqsDywYSSjtMM0TX8DUtd1mKY5YLM5
      juP3/UlMdBIIqSgKarWa3y7ipeLVIfM2soh1Ti9rsiyj0+n4Fj4wyMBEXYqi4ozbYHqy8HT3
      IM8DD4qioFKpgOcJC5JGLC3jTICTZuxRECTRec/RYJ/hGbmjvu84DprNZp9xf9yJb5omdF1H
      IpHoo8WyLO5m26CzFt2ZRHR+oiLQeiBZosnfRDXiNZyHoOhCmmAAfqAVu5zRTE7HkfAGk0cP
      /QyJSmQnzSi6/a+LoUetexQJLghCnyrMU12GeWuILdBoNPqELBknOlTipFY827b9fQjXdaHr
      eqB6BQRMABqu6/bt+BIfNCFYURS/cbT05w1OUCODiKNDnVkQu4V2jxKoqgrbtoc1DUB3eWy1
      WgPxQkE2yTgI2uI/DjRNg67raLVaIxnIo04Cnto6DMSzU6vVAIynQhGMMylorYbsDwQJCzko
      BoNUblkWDMPwg9/YQgiD0hWM0tCwpTPI503qI64zdhlml/iwTiSDxdY/rA1BngaalqCBP4mJ
      ZZpmXwTluOBJd3ZVHtaHvDEchR9Y7xqN466wtBbTarUGVSDi6w2SIp7nod1uQ1VVyLKMRCLh
      GxiapvVJWrbRQXrgMH0RCI/toG0T3j5AUGfy6gt6btjgsczOto9m/lHVsqgYNwiRR0uQg4H+
      jlURg9TeIOHAgjduQc+OC6K1BAl5kQwUfYyQZjCgK23IqSJZlv24C3qA6UYTA5Uujzezwxqq
      aRr3oAQpH+jfHeZNgCBfOy1xCC08mqJKHp7kJ59ptZCOtWJp+HUhbAyCXJz05+PSHyQUeSAC
      mBdnpCiKf7aABgm5DiyTMH6n04Gqqn1MQw8sMYzpTRBCNInlID5YFsRWGEYMDV5UKg3epCPe
      KuLBitKpLE0nKX0IWIEw7Fkaj4MeFlE9QY+7/qD6dF1HLBbzBbOu66jX633PkChUEh0QFSI5
      sMxucrHRgrZt+xKZqEPkf6IOEX8rrzMdx+mLGmQlMCttoui3vJ1IEozF7gMElSXLsq/+sW0/
      SeYbpkrRq8WTXCHC2hk0aXmeO7Y8nk3Bgm1fkKZAJy0gY012yGlaTdMcecdcBLrelkQigVgs
      Bk3TuEsMANTrddTrdd8tSd5Lp9O+oUF243iNJfp6EHgqVVCHkMGhpT2hi6xUPHWEt0+RSCT8
      lSvMeD0JRGWOMIRNjJOcNGFBbvTfQRNiWB9GWe1kWcbOzg4ODg7gui5qtRpM0/RPnx13jGTg
      UdQlUW2IVGTVGUEQ/FmmKAri8TgURfEZnjAZWY7YwaD3D1jmJP+zHRo2mPRSxz43TIWioSgK
      ms2mv8sdZncQuuj/TwJBtkfQ5yCVZdgzoyBIOgcZx2y/RY1cHTZG+XzeV8GJyk4yTRwXQrvd
      9ohqQhiYFM6m0yBpR2gGSCQS0DTNl8rkQAQwuIRGMaCCjmfS3/FA6mI7PcgjwSuHuBbpXcQw
      Iy2Kd4fQRqTWsDKGlRX2Dv3eSUxOlunYeoImLa2qhIG2NYP4gfCkYRio1WooFAr+e5ZlRT4b
      EYQ+XUcQHh0UAOC7Pwmx9I4sIYw8Y9s2tra2uvsCooh/2VjDpXwBC8nUsQgcFbzYHtu2/V3l
      YWi1WifiXqRBC5VfB0aNdyIgdB+XyXjldjod/1DLsMRYuVwOhmHg8PAQnuf5O8snMcm5yj4x
      MnK5nK9b12q1vpADApILRpZlTExMYGtrC9NTUzA31/De3i5W5+YhILq/PYo3Ikw6NptNf1eX
      lBWWGYL9jj4sQ3/P+zyOlA5aSUbR2+lVKWgVor9vNBqIx+ORyx+GcdSsumXi490dfGF+EbIg
      oF6v+6HSQasWaV+n0/GFBy2g6PdisdjARleU1TAwFIKsBrTxSHsr6ErIAQPbttEBcPdgH3/2
      zHP4T+++gx/fvY2X5xa6dgYnWxtdXxCC1Bi2DAB+wB79nOu6kUMjgEE1ilaZ2KAtHh2jelZG
      nQDsgSK6HN7+C32eI4ieUeyaIJst7Pmjeh13Dg5wMT+BdC9EmvZ6sXWzXjDCfySuh2SkoMuI
      xWJ9O+RRJkCfDRDWANd10Ww2/VlGd74oikgkEtjZ3cW7RwfYqJTxb5//AqrtNo7KZfxqexOa
      JOE3V04jqT5ylUaVHrwJwIZlE7Tb7QGdtd1u+7kooyBsAoxKO42T9NAETTz6O0Jns9kMPPcw
      bMOSpZ+tKwp4jFgsFpHP5wPdvbzvSS5S+nxBIpGAqqo4OjryBUkymYSiKL7bPswYHxoMRwgn
      G0yO4yCZTA7MNNM0YcTj2Ll7C6+fu4Af376FjtdBs9WGAKBuWfgvn32C15dWcC5fGKnzgoxl
      ItV4A/OwXMIn+7v42pnzQ+v47u2buFiY8Ms5V5gYKI+lifwfdTKcJPPTNLDfsU6EYaD7L0xi
      hq3CUepgwcZg8epjPxMHjCiKSCaTUFUV+/v7EATBn0yiKKJer2N3dxcLCwu+5zHIzog0AQh0
      XYemaTg4OPD1ZeIrJhnBvnnhEhYXF5GLxfHWg7uQRAGapOLl+WnUTBMLqUEdexwM63xdlpHR
      DYji4HPvb29hIZXGVM/bk9Z0xBQVn+zvQpUknO1N0DApSxBlmaWl2SiTZhyQ8nlu5iC6fh2g
      V+4geyzMbiQeqkwm0xelDHRTpEiShMPDQz/cPZVKcd36I00AgnQ6DUVRUC6XB2L15+fnIQgC
      TuXzSKgK/u933sKXl1bwwc42npuZhUHtGZyEn9rzPDidDjqeh81qBfePDjGXyeJiYQKnJqe6
      q1O7P4PAw3IJhqL4E+A3lpZx2GyibLYxk0iGuuVoXXkUyf+kmG2YSzHIbmGfG9a2444du9kq
      iiJatg2tJ1B5xjEvcpmXfY44Zch5cVmWUSqVkMlkAMA/L1Aul0efACTW2rIsPysYfei9aVmA
      IEAAkDEMnJ+YxNsba4gpKu4Wj+B2PCxlMiN1cNAyTT7/bP0h6pYFURDwoFREq9PBxcIEHMfx
      6TMdB+9tbeK5mVn86erlgbq03om3mNKfw58dBFrCjssEUVaNcRHE/Gw6GzpshejKYZP6pGll
      J0DTtvDXn3yE1xaXcWFiso/RSQAmsWeGpVMHuhMjleq64DudDhKJBDY2NjA5OQnP81AulzEx
      MYGRk8zQ2+O2baPVaqHRaKBWq+GwVML/9dab+OX9e119zQM6noeHlRLuFo9w/fAAm7VHiZTC
      pCPb4XTmOZLDiODK1DSenZlDxTQxYxg4ajWxUa34qbkBoGa2sVmroGYNdp7neUhpGjoAEoaO
      juehHZDXMqoU54Vd8NQn4lWLWq6qqghzWkQphzC9aZr+Pg7RrcfBOCubIMv4u88+wXq5BADQ
      ZQWvLCxhKZPte05VVaTT6e4KMcLhH0EQfBc9Oca7srLiq0H5fL67PzQS0UL3cAHvlJYgCFBl
      GS/NLWA2FsdupYw31x/i7YcPYDkOPBlo2jYszgku8j77mf6OeH3I97QEnox3VRlZFDBtpHDa
      MDAdT+Cz7S1YroOLhUkYjoM/v3Q1sF2CIODlxWUs5fP4eGMDn+zv4t9dfWaU7glFkO1A/x1l
      VSSBi6wUDHOl8upi6TIMo8/fzoNpmqjVar5TxBGAzWIRU7qBeDzuS9wo0DUNMVGCoSho2TZ0
      Wcbq5BT3WZLNgU6fEiW6ll7RPM9DvV7vu9QDwGgrAAlFZbf0SUWiIOBCYQJxXcebaw+xX6uh
      2m5DFERMxRNIyDJOMzOc6HBkiSaqFBuSTfz7JCqVxBsJooC246DUbqHcbuPd3W1s1qpQZRm7
      9Rq2e8fyYrEYms0mAOBO8RA3Dw98Go5aTRw2G3hQPMKb9+7iTC6Pl+cX++gMctNF6TOeC5X9
      Lkj6ku81TUMsFkO73YbjOH0r8XH0dbICAdGvIapWq2i32/hgcwPv7e+G5mYKgiJJeGV2DglV
      w//zyYd940HTbVkWarWav/tL0xtGJ3lu2PmLkW0AMgkIM5EKaaKrtoXrezso9yxzx3NhOw5W
      YnHolo12u913Sod0PAmZJpKInCGQJAmFQqGvcYSJru/v493NDWR0HeuVMp6dnMZzM3MQBAGv
      LiwBANYrZeSNGNB7b7deh9Pp4ELP3fnLrU14goDnZmbhAUioKs7m8n1tDupogmKriU/2dvHc
      7BwSlB0RRVLxvEOkHzzP81U/krNp3EzIQaCT3NJ9ToxOIqSIF5DE43x5YgJN20JCUceiR1EU
      SABeXVzGMiUYo6px9MTudDpo2jYelku4XTzElxZXkO0J6qDyxvICkeWPXXLJAG7Vqnhz7QEc
      14UAwPU6cF0BLdfF2cIEVFX1U6ubpolEIuHvChqG4eePITt9iqL0hTGwDV/OZPGgVMTrK6dw
      JpfHciKJZDzeR9ub6w9xLlfAxVQapmnii4vLfeV9eeU0BEHAR7vbWMnmBtrMbizxfru2v4fD
      ZgO3Dw/x7MxspH4MqkdRFLRarb76aBde0Cm3KKDTDrL0NJtN/5YXeqeW/L67u4tEIuEffIrF
      YtAF0d9o265Vsdto4AvzC5FokSQJtmXh4sTkQFvCvHD03XAEVcvEGzeuwfM8xFQVNdtCvscH
      QeUkEonx3KBkErB+1WKrib1mE4os4/dXL+ODrU28v7kBURTQcmxImua7ooDulTqe5/lBUSQU
      m9b3h6HtONhr1HHYbOKpmVl/Zep4Hu4Wj7CSyeIb5y7CUBS4VIpFGnrPI7FWLuP6/j7O5vN4
      hVKBeJ4nloGem5nDraMDrE7w9VgegoziKGEbvJiX44DUWa/XuZuLhPHq9TpqtRpisVjXjdjr
      O8dxcHdrC0XBizwBgrKPA+Gh3axa2XYcxBUVL88v4r3tTWR1A0vpTOiBnng8Pv4EIGrQfq2K
      YquFU5ksIAh4c/0hLNfF7128hHQsjv/60YeQRRGiIOKLi8vIGTFsVSuYS6X7DF3axUncllGR
      j8XwJ6uXkTVifZ1y2Gzg5xtr0CQZC70AN7mnVtRqtb5ALFL/N1cv49rBPgDg9tEhbhwe4Bvn
      L/plsi5QWnUxFAVPTc0A6DJnq9Xy+4nQRRL9Bk0itsyTcj2GeaKGPU/+JkdmdV33jygSdzg5
      Svvy6TOBF13wwDPcWa2CfZ7cfEmr4N+5eR0LqTReWViEJknI9G6pCarTMAx//MeaAEB3mf75
      xhrajoOEqmI6kcRqYRKHrSYSug4FwEQ8js2qjaxu4JWFJXy4s4WtWg3fWk33MYEoitiqVpBQ
      NaQD7vilGYKd2Rl9MM6lYMTwh+dXkWZchiRuiVzwxiKuKJiIxVFut1Dg5AoizMmTwPRkOjw8
      9I+NAo9ubIynUvju7Rt4emIKi+kMqtUq5ufnIycPHgc8D9uo8LxujA0AP7RaluU+l+yoZRN3
      LG8c6PJIfxAXOPv9S/MLSGtdpl9mnCxseYZhIJVK+UJW+su//Mv/PegIZFhBACBLElzHwfn8
      BCRRRCEWx63DA/z9jc8geR4elEpYzmTxvzz3BeiyjJlEEqeyWaiMB0MQBPzzvbuoWyaWMllu
      R/JOmLFlAI9i/z3Pgx5wBoBIknq93nd5tSAIeOPmdUiCiPP5AhbTGb/usH4goOkjO5GKokCW
      ZcTjcX//omo7WM7noUvd1Y4OVOO5gI8LOgcnS3/YxlcUGtjYo1HoXq+Uca9cxCJld3U8DzcO
      9hBTFKiS3Oc187xunio2o1xa0301loXpuhB76lsymfSzmXheN5xi7BVAFEWcyxcw25t5nU4H
      ddvCg3IJjttBsdnC185ewGI6DaXHvKosQwk4cvh7Z89BFfuTsR4HYX5xApLvtI/BPUAMMHTD
      bAAW9JkEdhC/SvnLyVLM0n7SiNIfNHiqSc0yEVNUyAEJB0al+6DRwFubG1jI5bGUycLzPNw8
      2Me1/T3sVKv48srpSLQFCUdBEPDfb17DmXwBX72w2nec0jRNtFqt8ScAGVDaGK6bFtKajt9Y
      WkEhFkPeiPURFuYSjDMhCHRDo258sLTRZfCg6zpqtZp/WyEAfGl5BdPxwSORQSsJSydrV7CT
      +aTVm6gIWjlpeyYMe/U6fvzgLmYSSXzl1BluuaMKrqdnZnFUq/pj73keFtMZbNequFCYGEoX
      Pc5B4/3sxBSWp6b98Gjyj6T8HHsC1Mw2fvbgHp6ZmAJp8kwyiT+7/Gi3Nao/lz1kEsQ8wxDF
      XckimUz6G2z1dhub1QrmqGOcQYZq0HfDVBheeZvVCuKK6vutHwfYvgyiM6ifDEWBKknInuDJ
      MlkU8fLsPFK9MgVBQFxV8ZvUBGMFShh44z5jxGCIIorFIjfkZOzdlFrbxFalguaQDL80g4/S
      gFEk5d/fvIaPdrZx82AfNnWTDHszTRDIDTlQZOzV62hSbkjepCQqH5tEjG4H/ZmmgVWJAOCd
      jTV8tLs9UkzQSYNHF420ruNPV6/g+dn5yGXaroubB/voDJHiQSiVSv5OMNAfX0WfBiOHtXiZ
      AEnyZjqDOYHjONFOhAXBsiyUSqU+JmHVAPJ3YG5Ghjl4YKUuPUk8z8O7mxvQZBkf7GxhNZtH
      G8DqxASmEkm/44ZJkVar5Z+bpWknf/PUGwL6Iokg+oPa5nkempYFmToyetIX4bVarYErVofR
      FNQWWZYDL8Bmy3xYKuFH9+/gjy5eQj42uHI4nQ7efHAP5zI5zPcOtJD6AWBvbw9A131M9oeI
      Iex5nh/rT9RwcgtMPp/3yyFtD8KxJgDxd5PDCLZt+0cSaYYPy0BNfu971vNw9+gQK9kcVGrX
      mVUzaEksCALqloVfbG2g0mpClRV848KqbyAF5QklaDab2Gq38Nn+Hv7owupAPbyzwISuoDO6
      QW2kwU62IM9SVJWKB3YCDPPWhPUTydnKAy8lTc0ykdL4DGg6Dr5z4xou5/K4NNe/spAQDJdZ
      0clYkux/rihCAiD0vpckCaqqomaa+P7d23hxehbz2WDX6LFFDQlRJcfVVFVFo9Ho62C2Q8M6
      3/M81E0TP19/iPVqxW9w2ApAOiel6zhfmIDtujiby4dKMpYez/OQ0nRM91YNunzyGeiGPNw6
      OozUFrqcWgDT0CpSmFv1uPYRjyZeXcME1bB0iaygCmJ+ANBkGX925SkspTPc38k+g6ZpUFUV
      kiShZtvYb7eRSCRgGAb+4c4tfHSwD03TYBiG79ZWJQk5TUeMcf+ajoOfrj1AvRcWP7YRTBpr
      2jbeuP4Znp2exalcDnXbwnvbW5hOJtF0HbwwOx/ogQCA79+9jcl4As/Nzvm/pXQd37x0FRKV
      aIvV5VmGIMiJEn5nYRnZ3qwPeo5thyiKmInHMZ1IcJ8lDHfYakLtpWMk7fh0bxeaLONcvjAw
      UT3Pw8NyCf+69gB/fPHyiRi6PJsrTKqTq4joc7isB4hV90ifs88PU4HY56Og3WNoGuyqSuj6
      ZH8XB40GFtJXIAgCXplfgN3p4G+vfYr5dBp1y0LLtvHa7BxemZvvU388z4PV6eCg2UTLcZBQ
      teNPgJrZxnQigaTWnXmf7u3hF7tbaG/YSKgqVElCRtP9TSUPgIBHE2A6mURGf8QUJEpUBGDE
      Yj7j0x3LGqDke1ImGXBd10M30AjYe9JYZqLreX351MAzh80GjF48052jQ+zWa3h5fhFKb3Nm
      IZPFa56HdG+Lnseo9PelXmTpKwtLkIasllEgy/JIIQrDQJIiBGGYDeN5HtquA1kQA/eFCARB
      QLHVRN20sJBO44tLK3CoFD17jQbe3dpApd3GUbsJeEBaVXFkWbi5vYWlTBZXp6b9slKahm+u
      XvbrPNYEuH90hDduXMfXz55Hvrfxs5BOYymVwfWDPVhuBw/KZZiOg5lYHLu1Kt7b28GZdBYr
      2RwUScSFdHfnl0gowrR0Z7ESio1SZCHLMmRZ9pNkDWMUQRB8TxC5Y8pgQmnDdHPiF/c8D9cO
      9tB2HGxUK6hbFi4UJiCLYje82vMADr37jTr+9eF9XJqYwqXJKdQtC3uNbsh2lKDAYTo9oe04
      KhPBcQ100m//ePMGMoaBFwqTgaEQBJ/u7mK3XsNi5inIougLBUEQkFBV5AwDpuPAch1sV2s4
      ly/gdL6Aimkiqw9OfJofjjUBFjIZXJmexk/W7uNcvoCnpmawXqlgo1pGy3FgdVxMaDouznSt
      clcUYbou2l4HP3x4H5PxBF5fOTXUJmCJZg3R44LkmiEgHgVe2bw9C5q2Ly4u46jZPZK536jD
      6bh+kFwQrQ3Lgu26qJhdZ8JCOoOF9KMD3J8nhEVwAsNtIiK5X5pfhK7IkLzhB3FeWVyC0+uH
      YrOJumVisbdzTJwfuVgMxVYTs6kURM+D2+nghbn5PgHGE2bHmgCKJGEumcKdwwNUe0ti23Ww
      kM4ia8RQNduIGTp+vLmOF2bm4PYOLVwoTGAxnUGCCWzi6fgseMxPnqN1VnJwJFI7FMW/WIHc
      NFKr1fzgrzD/uO26uFs8wrl8oZsIQNOR1Q1kdANOp4NTmdzACkbKJFjOZJHRDaTG9MY9SRDh
      EGQHRIEgCJhNpSAI3Xu7whJ3AV0+Iy7iT/d3ceNgH//+6edgug5+tb2FlUwWZu/8ScO2cL9a
      QaVWRQNA1jD6VGwWx1SBDrFeLuH3zpxDQu0y82+fPus3smaaUEURDdNCUtOQUG9m2cAAACAA
      SURBVFW8vrSClKYja3RVpiAJx2P+sGfpGe553XvN4vF4qNeCnkiCIPRJIvr8cRh26jW8s7mB
      iVgcOUrPLsRieH1pZWBi264Lq+P6/UUmdJrK0E3TGAWslItiGI+LqHZH1LJisZjvPh9mp1Ta
      bVydmsHNg338548/wEGjAQ8edupVVE0TV6emMRlPIC5ISMcT+MGNa7BcF3966XKgN+pYCl25
      2cT9UhG/2tnGzzfWcNjq5m38wb07eGdjDXFFgSQImEsmca90BFWScCaXHwg2ozuEdfUF+e/Z
      FYJVlYa59IDwTThVVf2MEkBP8vTOrdJ1L6TS+NalK74NxNLIrh7vbm3gu7ducN27bB+Mqv5E
      dfseF0GnyoBok5ZdvYmwqbTbgbvGVbONv/r4A/z04X184+IlJFQVcVXFUiaL/+m5F/HC3AJe
      nF/EVrWCF+fmoSoKfvfseSRU1d/Z59F8rBXg4uQU7FYL729vYbdRRwdAplJBqdXCVrWClXQW
      ecNA1TRxRDFTFITdLRAEwgCtVqtPmpCGh2UOZkMaZFlGu932pWq53YYi9q8KhMET6qNgLl7G
      DHpSnkmmUJBVP7tCmIs46t8sTex3w3ZDo4CUK0mSf4HKKK7OIHoJmpaF/373Fl5dXMJFzqm6
      pKrhxflF3DjYhyrJ+IunnkWp1ULTtuB0OvjZ2gN8vLsNAQJyvfMhd44O8eL8Qt/ezkBfHmcn
      +Ac3ruGTjQ384fmL+Pvb1+F0POzWa7gyNYOtagW/sbjcd7icJiKK14J+PiirMm8QSDpwlsnZ
      5+j3eWoDfXKMpZknbcnkYz1P9Hthn4MkuNVx8bBcxtlcHgKCs0MH0UWHeYyLo6MjX10h12gd
      HBxAFEXE43G//HHUrk6ng7ZpYrvZwEI6Ay3kfMpP7t/DQbOOb11+CgBw2GjgVztb+MdbN+DB
      Q0Y38O0Ll/HB4R6qpglFlPAnq5cHDlod2w3qdjrYq1ZxJpeDIcu4OjmDqUQSLddBPhbD3372
      CdwQ6WA6Du6XijhfmOCqRDypFyRt6GfJET2auXnv8gxkdvASiYR/9C4ej4cOLNl3GLYRxJuE
      5Psgte5BqYS31x9iNpFAQtUC+yFMBTqOG1QURaTTaZTLZYi9yMpUKuXvzo6Sej4IAoAzEZIm
      PzMzi4b9KHfRp3u72K5W8NzsHHZqNUzE4/hwfxebtSoSmgZdltF2bKTRPwFImMXYE6Djedgo
      l2DbDnbrNdw6OsT//NyLmE13jzv++eWnoIV4YTaqFfxicwPzqTQSPYYNQ9Sl1rbtPmkXVG6Y
      Hku/G4/HueoKe1+C67poNBp9G29Ryuf9zU6CM9kc5pPJgbSNTwokxmZqagqSJPmZmAnNT9JV
      mzEMZCj19vm5eWQNA4fNBmRRwrevPo27R4coHOxDkiS8tLSCu8Uj/OTBffzJ6mXfm1Qul7uJ
      tsZVgTzPw/bhAbaOjlBut7FWKaNuW/jGha6BEhaBSZik5dgw5P6kSjwVgScVecxlmqavo/Lo
      DdK3hzEr8SqR8ADTNP2D4MAjj5GiKKhWq34YBrlGtsWxf1j1jW0r/T+hb1hod1Abd0ol/HRr
      HV85daZPH44K0zRRr9eRTqcRi8VQKpWgad2ViKx85JLFcVWgoDvUQt/zPPzT7ZvYrlXxtXMX
      IQjAdCLp94PjOPj+rRs46G1IvjS/4K/8xWKxu2E6Uo0MDEnGfCqN+VQaLcfGw+0yVEkaGn5s
      uy5+vr6Gq1PTvlRjBx4YLZ4E6Pr+yUUYrLRmQZiK7BeQPYCgSULutCKZEdhBJnUSY3OYZGRp
      ZL1RvP2CYeDZNACgSRLK7TbUXjDbqExq2zYMw/Bz8TebTf8qKcJokiQhk8mMRPdmpYKfrt3H
      189dgALgl1sbSGt63/0MYaiZJnbqNby6uIzZ3jFTun5FUfDa6bOoNZuYoQ7CA0A2291IO9YE
      oAd4LpnCa4uyPwEAoNTqpitc6UlEEk1ouy52KyWspNLI9XJS0sxORx1G0fsJVE3DW3du4an5
      RcRDUmMAXZ3d8zw/Ax3ZjCE5idg7xaKoVQSkXtd1T+SCOdbrFOV5WqA0LAuqJKPSbiOlamg5
      Drbr3ZCBKOUZhoFWq4VCoQDXdVEoFPzM2+ROZnoPJSqdKV3HYqpr9HZsB+VWO9BFzuJhuYT3
      tzbxjQurKMT6x4a0v2GZ2KvXcL4wgVqt1ned77GNYBazyRQWeikpCAE3jw6wUa34E8BnSMfB
      H1+8jMPDQxSLRbRaLd+zQM4YGIbhp0OMAkEQULNt3KxVkTg6xNnJKRghOSuJK49kqPM8LzTW
      na6HJ2V/dP8uYoqCZwqDWc6iYByJP4xOwoiFeBx/dukydKk73PdKR/jZ+hoMRfGDFI+aTXz/
      7i389ulzmGA8RuRCdBokmZmu61BVFe12e2SXaErT8MXlFXQ6HXzn7nXMZjJ4LuKJsw+3t3Dn
      6ADnCxOYiA/GEr29sYZfbm0grqhYyeaQSCRQrVb93X2gG4Iy9gTgbdSwIbRfmJ3Hs9Ozfe8A
      XYlSqVRQKBT81CGCIPi6dSKRCLxCJ8gHLggC4qqCb1y4hJ/evomH9Rq+fv4i11UqCN38MDyd
      M6oeytoq8+lM3+UOvDrD8Lg3sAz5UVz85YkpbFar+Hh3x58ACVXFQirj72lEged1jyO2Wi2o
      qtp3h/SomE+mMDGCffJvzpzDucIELk7w1aWZRBKSIOJULu+7VZPJJJrNpp+v6UG5NL4R7Lou
      Dg4OuCHJtHS0XBem4yDJJFCKwhBBBjQPgiDgh/fuoNJq4qtnzvdCZFv46qmzyFIn1Hh1/7+f
      fYIrU9NYZXJUBtUT5KIlRiEdSRpmtI+DUcoh9ZMV9fbhASZicWQMA2TU2Js7xwVZvaNis1LB
      vz68hz+4sIqEoo5lBA+vo4yUpiGh9vM32SfarlXHC4UgO55Bv9GM+8vtTXzv7m0A/RNk2BFF
      evMpqgfkuZk5vDA9h1wsBg/dOJ3/8ulH+NH9u91zCAHvr2SzA1ngaDqC2te0bZgjpOx+0mD7
      7b3tTdwpdW9TJGeQT2piRs3lSpDWdcwmU/je7Zv45x5/nDTmUmmf+ffqNaxXygAejal5nMRY
      RG8mCNqdvDo1jRUqXd0oBh2rZgzzCmUNw9/ukAUBxVYLnudBFAWczuX76KDxhTl+Mtcg+n50
      /y50RUGp1YQmyfgt6jwAq/aM6skahqCNtCj45uoVX+KflK1BQLxpUVeBpKbh5YUlvHHjM5Tr
      df/k30mD9Nf762toODYKZ853r/v1PLy9sTaeCuS6LorFon9NKjAYJ88Dz8fP8/XzIIoiFEXp
      S4vHg38oH92DJu9vb0IRJfzmqTN+hjoeGpaFtzbW8OrCEuLMTjJroN46OsS1/T3kYzFcnZxG
      htpmZ+OQ6LadNNMB0Q6oELWs2Gzie3dv4bdOncV0cvT9gGEgqe9HQdtxUC2Xke+5JR8X3E4H
      HgCpZ2t6goAP9vdGXwGI3zfsUETYuwRRGZ8wIokX5wWb8SCiawj9wflVbv0s7I6LumXB7riB
      agH57uLEJA4aDT8TMdtGdid4GOOTfRNBEPy8pjStJLenIAhYK5dw8/AAL88vjmSwCoKApKZh
      OZNF6piBcUGgM0VHlea6LKPmeZHyN/Hw9voaiq0mfp/K4s2DRPVpLBZDpVLBqwuLo68Ante9
      a6nRaPQNFJFEURs+iu5JPzeM+dmb4tl6wlYoHn28NoaVQ1y6BFEkdK1W89OpG4bRt8pZlgVN
      0/xyfra5jkbHxdMzc904qogrALuv8ThBYqKGxQgVW028v7WJV+YXIXneyEbw2+tr+GR3G68u
      reBK79xvGOgxq9VqiMfj460AvIvURtHpeXpsGFOe5NI4rjuSvGe7Lq4f7GN1YjLwwPqokoxc
      UEc8NuQuMJLmg9wrIMsynsoXULRtnI24iQU8us2TjBE9Vux3Yb8FPU/aTL5rNpu+UUzvjLOw
      XBd1y4RpmUiGnNoKwlwqhaSmRWJ+GvTKPLYKxErAqJKVfp62Ax6X/sfTv3mD0bQseMBAHhl2
      Bdnr2RUziQQKsTh3UvPKf1guwZAfXc5NQ5ZlP7SA7LDyJHbH8yDrBp7uXcEUdQKQY55PGiSt
      IVGLyC2PZNNxOpHEH69eQalU6ktTHxXslao83Dk6xLub65hJJGG6Dn7nzPk+9XQsNyjRU3ko
      tpq4Wzzi/sYzKMn3jxPETcmbpKQjfvLwPn7y4F6f25WHuWQK3778lL/9HpUJP9rdwY3D/YHv
      246NT/d2/ZNQYXc13Dw8wD89uIeGZfa5kj9vB+cJyKYmAP/cQCKRQDKZhOM4vur3OFGIxXAm
      V8ByNoflzKN7CGRZRqPRGO+SPJJqmsaDUgnb9SpkUcLDSglnmSRRvJ1d1lgcVu9xJwp5n56E
      R80m/unuLXxhbgETQ2L+Cb30gQ1em3j42tnz3DiX7VoN729vYTmT7dss5OFsLo+4ovbt6tL1
      Pg4v00mAJ91J0GKj0UDLNPHu7Zt4dnYek0NSpIyCO0eH+MXGOr52/gK2q1Vcou4h1nUdu9Xq
      +JfksTBdB03bwW+dXsYLc/MDDKtp2oALk8eQUes+iVXD8zwkVBXL6SyWMln/lpG/+vhDPDMz
      6+8Mh6l3Uf3yQTuuK5ks5q+moErDh0KRJCxl+GkEeavr521C8NTQZDIJx/NQ2d32L1E/KRRi
      cZzNF7BVreK9zXWcyxegUsIrbRjjeYFqtRrq9frAb4IgwHJd/N2Nz/DS3AJOZXP+oJB4cdYz
      MMoqEAXtdrvvHqkoYA2893upNnKGESmzHA3ePsCvA3R/BnmBHqftFURLEOg0NIeNBnIxA6Iw
      PMNclHH2PA92p9N3NRcZ07FsAPq+KfZyN0kQcCab794A/ulHuFcqAuhunn3n+mf4xdbGANEn
      xfx0eaOAZvBuSMWsn+KElay8f49zo2tURAkboZ/9vEAQumcz6paJ79y8hpsHj26O73gePt7d
      QYsRnkdHR340ca1WQ7PZxH6x6OeoostWA1bgsWwAVVX9m8tZdxgAXMnl4QGYN2JI9J4TBAHT
      mo6krHANH5JxjGywjZuCj6YpKujnyeGOoI0wnkuQRMGS02K/zhVglHZ/nozneDyOSqWCdDqN
      3zp9FrPULT1Ny8L7WxuIK0rfuWESfUrGXNd1vLn2ANA0/OmlKwN1/PTBPSykMzjVS9QgCMJ4
      oRDEX12tVkMTT4VJelatiMfjaLfbaDab/iTjTS5STtTfeL5q9jP5G+hGCsZi/XcOh00GD8B+
      rYaZdBqSJKFcLj/RTSceXSy9zWYTCSrr9ZNQe4bRxEOj0YCu69zAOtt1IXNWNlbYVc02TMfh
      nhH4608+xOXJaVydnvG/G0vMCoIQOWkrS2zQNUD0RResEceqHKP8Rj8T9Jll9iCGZ8+8CoKA
      9XIZ/3DnJnar1aHx8O9ubuDGwaAr9CQRZK9EuSUnDOR0Gy11eeqgaZpjq1aapgWeoFMCVuXd
      eh03D/Zxr+d6T2n6APOTdh806ri2v9fXB8e6KJucBGLBMhHb8Tz1hqhFnye9lIBsVJmmiUaj
      AaB7HlUUBCykUvjK8mluZjgWpuvAck/sEB4Xj6v/HMdBsVj0N7N0XUe9XofjOL4WYBgGqtUq
      UqmUf3QyKmzXxQ/v3oahKFBkGa8trQx9p9xq4f/8xVtoORZeXljCaU4Oqp1aFZ/u7eIrp87g
      6tQM3t3awMNyCSu9u4mPNRrDVoEw1yFPxXjSS3MUENrI1TvtdhuqquL/u30DiiDit0+dwWI6
      7d+UGdaG32AG9Reb60hrOi5GOIhDEOY1O2lnAg1ZlpHL5XwJT2weRVHQaDQgSRJEUfQzYtBq
      NU3z+9ubeFAq+omtCDqeB9vz4LTaMBiV/K21h8jHYrjA9FNa1/Hvn3ke27UqXl1c4tJtdzpo
      Ow7geXh95TRO5fJYSKW791qPsxFGI2r8zjDGZp8NGsQnOVHoyU3uq5JlGalUCrZt4/XT5/Cr
      9Ydwe660cVy5puPCVp6cIRpk90TpT5IsgJdiMROwN8HC8zzMJ9PQOHsemizj6xdWsXF4iBxT
      h+k6sDuDewSe5+FMLoez1KV4ALBbr+GTvR385qkzWExnsJDqhpkIgoDFdDdzRbPZRDwWO15y
      3KCQaDLjx9E5g55/nNKNVxddpyAIqNVqXTdvLyitAw8PSiVUjpH14UvLK/7tJUEI6sewft2r
      17m/s8xP/tHXyT6OfqbrmEml+oxQGneODvHG7Rt4e3ur7/uvnDqDK1P8d4BBfrN7x3A9r/83
      2sYk3rtjrQDjnAkAwvXUz4P059kwjuPAcRyoqgpFUXBqYhL/8YUX4TLnExzH4W4S8jDKRg69
      wgTtOwhC9xTcP6/dx8szc1juHXhvNpsDYxVUL8nywNY/DlhnBAu2HWdyeXxhYRGVnp0VhjCa
      5lNpJFUNf/XxB/jq6bOYT6UHPGCGYYwXC0QjjFnJDIv6DgGPKZ60jUDqI0f8CAO2221f1wWA
      imPjjY8/wO+fu4CcEUOn0xnIIRrW3ihx+sNCLWgmEkURyWQSv6upmEul/dijZITTX7QbWGVS
      VfL6fadWww/u3cbXz6/23YtA00Leu188giYrmDSMvk1UALjR8+D83rkLkEQRry4uRxYgYYir
      Ks4XJpDVDa46TvZ7jnUoPszIDcrCQH6jb/0OA3n3Sd6iHqQGtNttlEoluK4L0zLx5p3bSGk6
      kr2D1+xEFQTBj/Jk200/H4RhqiT7u9vp4IPtLUzEE5ETTEVpNw85w0C24yEXj2NtbQ2tVgsH
      BwewLAv1eh0ff/wxbNvG3t4ePtrZwnv37uDWrVsDHsCGZeGj3R3UOWdM3l5fw99d+zQSPezu
      tyyKeGl+cSC8vWq28cnujn/eYqwVoNPpoN1uD1WBiCQg74zCwMMk0OMEjxEIDa7rolKpwHJs
      CACem50LDHT7bH8XH+7u4IuLy1jsGWKk/FFoGfY7mQA1y8JHezsoxBMQAMwmk5CG7KgHqSnD
      dok1WcZqKgOpV//GxoYfg6UoCmKxGN747GNogojLsQQELQZwxvH5uXk8MzsLSRD91d+2bdTr
      dRQUBbIR8+0vQidpM63Ts0kZWIO/0+lAlmVsViv45dYGTq1eBjCmG5RsioQxJm1sBO3ahoEe
      2M8LCC223WX+3zt73v+epZVIZFp/J4g6AYImIe93z+vezfD18xexV6/jxuE+5pMpvLzAdw+S
      93nqZdTxckQR1+7c7oZo906vCUJ3k7TVauFsNo96pYKpqSmsra0NSH/fxYz+UHmSxe3czCxY
      0P05Km+0222cSqWxcH4VyVj3/oixJsAwxmS9CfT/Qd4MURT9dIVR6nhc8LxutjNyMGUYs+q6
      7h83pCEIAq5OzeDS5LS/QgzT53m00M/ymJQWMh/ubONsvoBTuRwelIqYp1YdFjzVlPwfJEVZ
      3LLaUCUJXztz1tf5yTtXrlzx7UBBEHD16tVIaVM8r3sZN10e/RtrzI4CXddRKpWQ6l3QN/YE
      IFfYB53mCfJuBHWo53n+BCAgCVejZoE4SdBhGWGqG1nuLcsKtHlkRsLeLR4hriiYSaaGtitq
      u8lzf37lKUiiiBsH+3hlcRn5iEF5YbZcGL60fMqf3GyoBcm4TcqhHQoEYQIgnU6jWq36R0XJ
      88flBXKpBxmvsSaAKIp+cBUJhRjmqRlGPEm1QiYP2WVkzw88bo8QLWGitKnVag3YQjzJRfDZ
      /h5yhoGZZKqv/DB1h51UQcaq2Pv+g50tnMsXMBFfDJWYvN/IPQhBtNDf1SoVVCoVzM3NoVQq
      YWlpyT/Uf//+fSwsLPjZtwlIQjXWpUvaRX+u1+vQNM3fVRYEAR66Wd7Yew7GnRxjnwiTZRnJ
      ZBKu6/pMShMRtApEhW3bkGW5r0za0n9cXiG6/GEg4dthl++x+AaVv4b1lvHcdaN4Zgi+ffUZ
      PzQjiMmC3NS6rvfd90XTwmtXo9Hw08t3Oh0cHh6i1Wr5+yH7+/sQRRGNRgOnT59GOp0eGDfW
      FiGfU6kU6vU6KpUKNE2Druu4eXiAd9Yf4luXn+rLixQ0AXjtp+sYeyeYTAL28rUg1Ye1C6Kg
      1WoNzR960qAn8LiTjPZShA02Wy9rTEeV/CxEzntEeERpD0sLzx4jf2cyGZRKJciyjKOjI58v
      iEHsui5yuRzm5+exsbHBLZdkjKDVKPIvFouhLYn47s3rKLZaeGdjDcV2Cz+8d4dLzzDouu4H
      NALHDIYjjSX6XdCy78+2nhcgzH0aZjCTcp+UgRy1HsKYYfcZs0t+kLQ6Dmi3YBjtrHMiyDgP
      8uCRssmVSYqi+IeCSBY7+hlJkvzo0LD+DFppGr3UjnovG8nqxBROZ3OB74Z9T2xN27ahKMrx
      L8gIypbGLjUERBrx9EzyL+hugKBGkSWXuODYiy4sy+KuVjyEMSH9W71e92PjiVGlKMrA9Uk8
      78qwsmmmI59Jf/FCyUm5o15/FKbi0GV8/+4tXCxMYTnbn4eHeGxoeklfkHEmoMd02Er004f3
      sV2r4ttXnwEATBgx/G6+AFEUcTZfwGQ8gfPUNUo89cnzPPzL/XuYT6dxjrl9kl4FTiQ4Papl
      TzdcEATs1moom22cZwgc1SvhOA4sy/K9BrVazT9iKUkSHMeJfFdu1JWFTDASDkwmLqt6BJUb
      phKykyXsORY85uO9x2MaHvN3HwosKrSOoL+H9fGDUhFx5dElhIlEAuVyGdlsFq+vnAaAAa+b
      53lo2BbuHB3hqelpCMQKCqiKnEA8kRWAuAIJQTRoKWa7LjYqZSymMxAAPCiXsFWr9k0Aspzy
      ENRxJOFSJpPxvQ5E/yRSKWrW4qjSMxaL+aleUqkUFEXhniUeZkiGeX/Ycjyvm0eHpCInjgKg
      q1ZqmgbXdVGr1ZBOpyEIAnfSs2oZ73cav3vuQiA9YRjXfvqDC6v+dU4E8Xgcf/3Rr7CcL+DV
      xeWBydrxPPzg7h0UWy1cmpqGIgBfXjnVVy5L08+3N48/AYgKEARamr29sYa9eg0Ny8LFwgRe
      XlgcYAzafxwVRNpJktR3IJ2mKyjj2jCvDSmfNWjJtj+5LnTYxKFVQp5uHaSPs2UQPbvdbvdl
      6ZZlGfV6vSvVZNk/shi26vHq5q0+QW15HPA8Dzkj5n8+ajYRUxTEVBVPzcwhw8kh2rJtfPfW
      dezV6/j6+VUYigLXdXHzYB9vb6zjL64+DY1S1QjO5wsnowKFpfMjDREEAcuZLKpmG47XwSf7
      u7gyMTXwLBlg9ubBx4UoE4D3DrukBzEK/Tv7DG9jaNg9C4ZhIB6P+7/x8haxdlmUtgSpP2Hq
      WJCLMQxRJjr924/u38FkPInfPH0G56gjj6xtZcgK/uzSVRTicf/Y5mwqjWdmZqFIEndyz6fS
      498RRhNCbkmnd4ZZppAkCT9be4CUpuP97U20HRtfXTmD01TyLNJBgtDNMEwu0BuXLrrMILDG
      JS9EOcx7QzMiWx9rA7CThlwKSL9HG4vDVJUwjJpWhtRB7s+i28Z+Dnq/Wq323fZJvD9Ad/yJ
      OkqX1bJt1C1r4GZKgmKriZiqIUZ23D0PRdPEdMQUijxBQjthjnUiDHikAsXjcV/9WK90MyUc
      NZv9FQsC/uX+XVzb30Ox2cJ+oxEocWKxGDyPn4o9KqJIv2EGI10OLUWCGJJ3WzqP+Xm0hRmO
      o+IkVBTaUCcnunh9Rdq6vb0N27axu7uLYrGI3d1dVCoVFItF7OzsoFqtDtD13tbGgE+fRs6I
      Qacmzc3DA3zvzk00OHcP8AQF+x3tXfO8Y16UTRdK7pL1PA+bGxWYjoOdeq0vW8JrSys4kyvg
      Ozc+Q8Yw8NrScuhGF7l6c9x0g1H0cgKeSnO/VITYU92Abj77D3e28ezMLJReR/IkfxQETQL2
      0vBxpP8470SxY+jyeSvf6dOn0W63kclksF6vdbNmxGLdTS4A3719A6qm4WvnLvpx+i/OL6IR
      QciR/rpQmMBUKoU4E15RrVbRarWQz+fhuq7vCCFx/0SrIML6Xx7cR8uxT+6ibCIl4vE4Xl0+
      hfVSEQs9bw892NPJJP5o9TJKPXWpYrbx5toDrBYm/Uvs6MEgF0SMOgnGYQDyP/l8++gQsij6
      E6DYauHm0QHO5HLdmPsQD84wXZeWrHSdQarW5xFs+1VV9VW6e5vr3VNZMzMQBAFOpwNZ1bBR
      qfg3dnqeB12W/aTEvPJZwSRJEt58eB9zqTRe6YV6W50OfrT+EJezOaRsG7VaDbFYzM9g0Wq1
      uptePdc4AJwvFLrJtk66Q2RZRjIeB0pF/MPtm5AlCcVmA79z5ryf+vqo2URK657832vU0XYc
      bNWq/gRgO5akJKETqD4u0Iz726fO9Em4mWQS/663OROVQXnP0Z4g+m/2zuVxMYo0p0GHIkR5
      n2ejeJ6HD7a38NrSCtKUbSn3jjv++P4duN7wOCu2j+g6r07N+N4gz/MgyxLSySSmp6aQjsWR
      TCYHBBDbnrleNO6xjWAebNvG9z79GJvVCg5aTUgQkDVieGlpGY5t428++xiyIOJ/ffEVaJKE
      jUoZ04mEfyqI7gAW9Xrdv3ThpOF53ZSP9LU+luviw91tPDczB5mJeWcRpG8Gga4ryIszDsZR
      gQiIEyBsr4KAFwJuuy7+6uMP8dL8As4XJiJ7l3hg752zLKsvbD5KGUE4MSOYB1mW8TtXnoIr
      CNiuVOC4Ll6cncMH62t4UCxiOpFE1jAgigJ++vABqpYJRZIHJAmvcfF4HPWAtB/HBT1YxJgt
      tVu4dXiIitnmPks+8zbB2OWbdw46qJ1RmPg4q8Qw8NyGLOh0KgSKJOE/PPs8Lk5OBUpw54Qi
      eaO2P8y58FgmgCAIUGUZoiBAEgTcKxVx++gQf3jxEl6eX0Cn08GXlk/hnY113CsdQRb4OWmC
      GCORSDyWi5V5y+VUPIH/8elnkTdiA6tTkMch6HceeM/wmI/9Lqz8j3a3DAIDkAAAIABJREFU
      8fP1h6FtDKKF9fiMshoFMRpN94NSCf/bD74X+bA7oSvsN95EpGng9SXBY5kAhLBvP/M8Vien
      sZLN+be2a7KMZ2fnMJtMQRElvDy3gFO9/DUkdIG9fon8RjcwkUhwD2+MC7qTiJRmw3MJaCnO
      0zXpFYTtE168UJh6wDOQ2TJZyKIIRRzcRCRljRKmHQV0HwWtHOTvqUQChqL0XTM1DGGual5f
      hrVjoN2PwwYgcBwH3//sU6iShHc31/HFxWVc6MX9EEY4PDxELpfD929eR1pWcHVmFrVazQ+p
      JaGruq77Vjy9vX/cDTMC0jHknuEoS7Qoimg7Nsrttn9CiWbyYRmZ6U23sOeC3KJBHiTyG8sI
      rJHNYx56IywM43irCL0dz4MAdD1DHMZ2Oi5EQYTMRAKYpunHnrHtqZkmTNfxLy9cK5XQtK2+
      qFFeHz+2FQDoduqrS8u4MjEJeB42KuU+YgD4p4nQ6cDo5YanPT26rvshxrzD57Gen/k4G2aE
      Vp4NUDFNfPf2TdRti/vsBzvb+OH9uwPlRVFVWAYURREdAFu1aqh6FQZ25WBds0GrE/3+MP0/
      in3Aox3oJgT+r59+jIflEv7zR78aSC3Zsm38zbVP8b07NwPL561gf3vtE/zDrZv+32uVMu6W
      ikP767Hm6hZF0Y+Y/NbqFcjSYIwKSaz6tStP9XUs2Qn2PM+f8YlEwpeGdAfoug7LsmBZ1lj3
      zfLwj7dvYnViCoVYDJosQxL4+vALcwu4ODEFWZb7bkinj4mynpAw5rlXPMJbG+v45uplJDUt
      chItui56EgTpxcPULrbO43hcSFlvPrwP03Xx/Nw8ZpIpPDszhwSjfQiCAFkUIXNUOJZeGsvZ
      HKbjjy4B+eLS8sBzrLoKPGYVCOjOVtM0UWk08J/efxevLS7jXGHCHwSaOX587w4mEwlc6gXJ
      kcEnnU+HGfB0f5KdgZfBOCqOSiVoioK3drZwOp3FdM8lGMQ0QerIMHjeo1vhyd+u14EoiDho
      1DHVU6l4zMirn/2e9w55nvxvmqYf1Ur+0eHkBEGTii1vWNs/OthDTFFxtmfzha0wEIS+c80A
      /F1mOviyadv44b07eGl+0c+CEZYVjx2jx3tbA7qMoes6FFXFF8+cw2xvA4PtRADQZAVqzx3q
      dDqQOIFh9Lssjhs6sVuv4R/u38HXz6/i3/SSXvHA0hEm4cN+E0XRnwD3ikW8uf4A31y9glOJ
      Rxmjh7WZgD4NFnZ6jC5HkqSBwL+wQMBRQK9GZIy/SKm2QYYyr53kO1VV0enZEITJRQCaJEES
      gL+59imWMxm8NL8Ymc7HPgGAnp9cFHF1anpAj6c7+LXesnX78AA/W3uAP7/yNAwqQRVZBcKg
      qqofLz/qSlCIxXG5MBHpthdWEtL/s88F/UYP9lwqhedn5xFnVLgwCQ8AHoAPdraQN2JYzmT7
      VtbjeHZ4dY2D49ZPaNip1/DO2gNUTQtn8gX/QoyDRgOm4yChaniWut2TRwc7wTzvhILhosC2
      7a6xSxFDSweasPlUGi/MLcBQlL5lMKo0IkvkqCuBLIq4UpjkeiYeN3RZ9u8KCHIhAoMr50Gj
      gZuHB5AEwT9px4tI5YHOjsBTZchqEqQOkewPPIQ5AYKkf9AKAACyIEIVRFxMZ1DQDTSaTQgA
      XNsCOh2Y7TYWYnHfWcK2ie4z+rsnNgHYgx7sEkkTFVPVgUsU6KU9ilpAcgoFTYJyu4XrB/s4
      mytgIh4fiFOPgrABi/JulO+CfiP9NxmPQxElOJ0OBOb3MAiCgFgsdqwbLZvNZqjTIaox3bAs
      VNttTAWEuHieh7xh4LfPnIMgCHjj1g1Mt5p4bXEJGVHE4cYaio6NvBFDy7ExERvuxiV4YqKO
      6Ls83zMw3A/OmzDDQILoeCkc//HOLfzo/l3sNxv+FUhRGfq4qkUUV2NQfSxTeZ6H3z97Hr/f
      s1lOQuV4XAiS/O9vbeInD+8B6O4NrJVLXNVRlmU4joOnpqbx/vYG3tlYR1xR8NzMHKbiCby7
      tYGfrT303/tgZ7t7b3AABEF4sisA2WAhWRRoDDNy1ytlVNttfyMt6kCTScAG0a1OTOF8fgLn
      szk//yibxi8Mx50AxwE7UY0ezazeH9WADnrmuHSy5XqeB8t1IfZcnQRfmJtH25mG6Tj42+uf
      oWq28T889SzSTKAg0QI6AFRJxko2C0kUcWWy6zV8ZX4RDuUd1EQRjiRz08UIQnc/5IlNAODR
      JHAcxw93CFoB2AHZqFRQbDZxsbezNwoDksPydDj1Mz0Vi2QkMwwDhmGcyKBHRVAb2NWOhud5
      2KhWMZ9OD9gq7CCPoqIRB8Nx/f28cgkNluviv13/FLqs4A8vrHYZuufRSes6bNfFTDKJLy4t
      +8xP2tS0LPzzvdu4ki3g/MQEJowY8tReEdD1Bmk9VVYQBKxOTgU6H0RRhHXS5wGigEwCy7JC
      DSUanufh1cUldDodWK6L3XoNC6k018UYBHISiF4Jiq0mRFGCTGUxflJgaacR5levmCb+5eE9
      rGSyeGp6BrbjDpynZf32bJ1BOMngwkajgXa7jVgs5jslOgA8x4GqabBtG6Io4p2NdWzUKvjm
      xctQJAlfPXWGazOIgoC4okKRugZ+rieswsaMFiR0f5PP1w/2npwNQIMk1g3LABc0c28fHeLH
      9+91736lno3CvGTyEe/HLzY38Nb6wyeuzkTxZrHMSKRW1jDw+tIp3C+X8HfXP8PPN9a4NAWp
      mGx80jB75KjZRJE52x2lfSQbX7lcRqVSQbVaxX/76AMoEHDF6Ca6KhaLmBAlnDHi2N3d5faL
      vwfQmxx5Y/hZBc/zYDoO3l5fQ6OXvY9H49WpmSe/AgBdRjQMw89lQ6dA5/lrN6sVvLe5gd89
      ex6rE5OYTSZ9vXdUEO9Ho9HA68unAHgQnEd5iH65tYnlTDYwSwGB53momm3868MHOJPLw+l0
      oMoSLhaiXXrNk3JRjGtBEHAql0Na1xFTlD6dl5QVVg/7/7D9iXc21iAIAr7GSY4VRmMymUS7
      3cbk5GT3Rh1BwINGHTXbwvmpaaz0VM6s1w0doc9Cs7YLvfdDUjHSKXN4E7jtOHhQLmEpkx3Y
      WyGQnrQNQEMQupdLqKo6cAkG3RGCIECTZDwoF/Gr7S28PL/gJ06KUkfQAMdiMTSbTbQE4Obe
      Ll7rpdy7UzxCXFWHTgAAKLVaaDk21iolFFstiIKAC/mJSExMwEpj9nca+40Gbh8d4PnZ+dDN
      Ola9GpZhO4zer6ycBkZcID3P88/gAo8SlP351aexX6/jdGECRs9NTX5n08GE2Ucss5O/H/ay
      Dko9m+Ivrj7dZ9fwhMFjjwUKg+c9yilE3zlGDwr5fPfoEBldR0aLtrtL6390fWz9v1pfwy92
      t/HiwiKen5mLpA7REueg2UBWN7BerUCTZSymo92aDkQ/Eul0XPxyewv7jQZcr4ML+QmsTkwO
      tC+ImXnCRRCihz4HodnL2kzqdHsuzJVsbmR7g02YzBNeG9UKDqpVPDM3P1B+ud3CGzeu48sr
      p3Cqlzk6ylj+WmwAAkF4lM2ZBisVO50OTmVzyHLS4oUhipH0/NIyXpiYwt2jo9By+u4LJvaH
      ICCl6VAkCaezOSyE3MkVRgPR74MYuO24eFAu4Wwuj9PZnJ/tOOp+BOseDXIJ8hDWh+xvm9UK
      fvLwPg4j2Aws3VFupdmuVbHGhNR3Op2uBtFq42unz2KvUsGP791Fu93GUaOBvV66SNu2+7yP
      Ph2/zhWAwDRNVCqVSMbsRqWMD3Z38Mz0LArxGOKKemzvzbALq+kldKtWxffv3sZKJosOgPVy
      CX9w7qKvkoxyhDBKqAY5CUeO/RFGIZnXyP+EGaKmkxSE7hVE5GJv4mPntZs8zzJts9mErut9
      u/zFVmtoLNVWtYL9RgPPzMxGdmCQZ3gHliqVClqtFmRZxnqzgZrZxvlkGm8VD1FsNvCHS6eg
      67p/0fnk5KTfll+bDTAuNFlGStPw5tp9nMrl8WrINaBRYRgGKvU6dF3nHtWjB/5u8Qgb1QoO
      G3VMxuK4mMlBR3cQCIOqqgrTNJHL5QbKGgWdTgfb29tIJBLodDpYM1tIKyrmkimUSiXfo0Uc
      CrRxaFkWstlsJHtkmL4dBjYxWJRAwr1GHQ9LJTwzMxvJhU3/zrNnEomEv78TS6UgCwIcx8HW
      +gM0LBOKYSBmGP7hKVKeIDzBneAwSJIERVH8cIQwqZDRDXxpaQVN24aujE4+r8M9AP947zYk
      Wca3Vq8Eus08rxuVmFAUaKKEl2bmcL14iNjhAZbSGTiOA03TUK/Xfcl93NUpnU77V0XdPzpC
      TlGwmMkilUrBNE3/Jk1yQwupLywd/Lub67A9D88yBjuvb1iHBA3P8/xDSGTyRZHoz87M4dmZ
      udB66b9ZO47N1k0yclTMNt64cQ2vL61gJZvDl5ZX0LJtZFMpyAGxXp+bCUAuT6P/ua6LZrPZ
      N5h/e/1TpDQdX14+BVno30fYrFaQ1Y0+txfdubSuS9cjAEjqBmzHRsfzIIVIxD++cAnXDvaw
      nMkhaxjYt0xMFwrIxBN+ucSwZE9zhXk3eBBFEalUyr/X9k9nHgUIaprmSz3asKVVliCvSkLV
      4Ia4P3nGNd1n5G+Sfa1Wq8G2bRg9KRtl4rdtGxrlCQpClElBkNJ0vDi3gLlUN+nVbq2GxXQG
      YgA9nveYEmOdFMgkqFarcBwH5XYL/8c7b8F0HWiSjJfmFwB0A6iW0hn8/a0beHVhCS8vLEKl
      dGHWACSgpYjneWi2WtBUdWi6dx6dvM880LSwNsA4EyTofmK6TN4eA20DhL3P3oDJax8RKo1e
      smPi4iZJDFgju+3Y+OtPPsLLC0u42PNmBV1IyNZJTtGxLmO6jYTmdzbXMZtM4VQuz21bsVj8
      fKwABIThAfh3bsmyjFQqhVarBUmWsZLL47O9HZhOGz+6fxe224EoApcmp9HxPFw72EPFbOMP
      /v/2rqxHjus6f7V2V+/bbBwON5EUTYkyZdiRZDnwks12BMQ2YBjwS5CHPCSP+QV5948IkJds
      iOMgCQwkceIlsmJHslZKIilKnIWcmZ7eq7prr8pD97lzu6aql5mhuH7AYGa6q27dqjrn3rOf
      SDtS/u8oM4ThKD2RM+nNg1nlWP6Y6KoaHes4MKuCOQnziHHETJ7nIQgCVt3DMAymD4miiJQk
      46W10zhD5kpZxj+9/Sa+sHoSaxEzcjQfIan6dtzfL40yw0g8jC5+tm0/WAwAgHUZ5FdhWZZZ
      /M7Xn3kW9UEf660mVvJ5fO3ceXRMC3f1LhRJhBcEsDxvKMpEnCs86MXu9fsQRRFq5EFPQxCG
      +NWdTVyoVFkpjnkUuqiuM6tJMwlx8nkS488yx3muGx1blmXU+wZ+vnEbf3D+IsrlMjqdDmul
      pSgKTqgp7O7soFYqQZRllDUNKUlCrzesiEFMRITL1/uMm0OcFYu/1ygT9Pt9lMvl++sHiEIQ
      BKRHpVGSCkhdObGKv/jy11DOZOAGAT5qNrBWLOJ8pYqB66Jtmbir9xBEVloePPH9351N/PrO
      5szmyyAM8ermOj5ut/CrrU28V9/FrmEcuI9JpUfuBaJMNQuBJ82va1mxIRaTRJTod2lZRknT
      oEjDTj+VSgX5fB7lchnZbBYdw8BPdu9ivW9ABHC1VIFkO8hms8hmsyiXy6jVaqhUKigWi2i3
      22i1WhN9EnGwRyER0WdD8WAPtA4wCc1+H5Io4tVbN9Hu6Xjh5Bp+8OrPEIbAl8+cxe+eOw9g
      fGWNWyGs0UojheEBh1wcgjDED375c+wYOhw/QCGVwpXFZXznM5eRlofxSdfqu7jd7eCb5y9O
      JEQ+b3naDjCPmJWEaOskqp3PX3+z28Ffvfk6nltawR9dujy2g8Zd+7A7VxiGuN7Yw+lSGdqo
      CNq0cVzXRavVYjuJm04jn0qhMOrTFje/9+q7eH37Lr7/7HNIcT2tKfjugdoBZkUQBKhmsyhp
      Gr75zBV85+rzSCsKCqk0KpkMFrP7iS/0YEulEuteziMty/BH5UFmge370GQFQTiMUPSCAHd6
      Xfzj+9fYMTk1hUpam2snoG2a/5kFYRjiVquJd3d3xj7/pN3GDz+4Bi+YreEgEVAhlUZVy2Ap
      l2O76HETP517aWFxLJln2txkWcbi4iKq1SoqlQr++9ZNvDO676SF4fLCIr799GfGjCJBEMA0
      TSwtLT14OsC8EAQBmqahCuD3z18AQrDkcmB/1XNdF8VikXVS5Fe2WcUfPwjwN+++Bcf38YcX
      nsatdgs7ho6TxRJeXF1jx50ulXC6tK/MJdnX6Wce5Tnu83rfgO44uMLdd1ZVhqHDCZFsSStu
      MZ3Gn//WS+yYoyrSSdfxgwCvbW0gDAFNkfG5ldWp9XzYub4P3/fxytOXkE1NLmMpCsKwQ+To
      b0EQoKoqyuUyZFl+OBkgSrDEBKEko9HrxtqxqW1o1F4+T1tWURDwpVNnsJovIKuq2O0buLZX
      x/PLK6hw1aPjcFQlNzoWsE8UL6yuHRh7MZsb2wmjiBJm1FR8FB2Cn1v0Oj3bwo1mA47v41ar
      hXd3t5FLpXC+Uo1tgcpfJzqnrKImVvDgr/mj6x/gqUoFL548deA9PHQiUNKKZHseGn0DxXQa
      1+q7sUoc71TjRRNN01jJlkkQBAEXqzXmaFvJFyAJAm5OCKSbZcx5GGNeBXseH0WcvB83v1nm
      zI/BX/fN7bv40Qfv4383N/Di2ikIAiBCQBAOy7r/+Ob1A+Mk+Qhs24Zt27Asi/2mn8FggMFg
      gH6/jy8sr+BUJgtd19HtdtFut6Hr+lCsmngXDxFM18WNxh5004QsisipKk4VS2Mv8qNmA2/t
      3MV3n/0s20WoJLsb03VwGoIgQDmtHehxpds23ty5ixdPrkGVpj/ieRhgHnHkrt7DLzfX8bmV
      VZzj2tHGmS4nKaFRUW1e7y3/edeyYHoOLE/Bf9y6Acf3YXouGoM+soqKT9ottE0T5Skpj7zF
      cNozuTAyoccZRB66HSBp9SlnMvjLb7yCpxYW8MVTZ3Bm9MIdx4Gu6+h0OvBNC0VFRavdRrPZ
      RLvdxvr6MOOJnDim52G925mZKJ9bWsbFam3sJRiOg21dh+XN3vGe1wmmrbCUyE/n8b95dC0L
      bhCwhoTA+Iqa5DuYRHRJ80ryt0RR0TK4UF3A5cUliIIAVZKRURQsZrNYKxahKQo+bNQTx/rN
      9l1WNsULAvzLjQ/xbn03VpwTRRFO4ONv33sb1/bqY8/WNE14nvfo7ADA8MZPF4pYTGssJ5X6
      CgiCgOXlZTzr+yzojsqqW5aFfD6PMAzx5s423tndxp88/3kAs624hmPjjbvDFT8ly1jJ5/G9
      Z5+717cLYDJRniwUsZDNxmbQ8brQPA4yYpCovjCLsiwIAl4+dXpY4CAM8cFeHV85cw6ltMbk
      //OVKtY7Hby0djpWF9k2dADASiaLf735Id7Y2calUS+yqN4RhiE+arWwYxh4aU2F7Xl4bWsD
      nz9xErIsD0M3HlY/QBIsy0Kv14s1IxYKBUiSBF0fPkTHcZDJZBAEAbrdLnzfR0rTAFmGNoq1
      n8UcuWsY+Ontj/HVs+fwn5/cQl5V8XvnzkMWJTi+z3riRjFP6caP2y30bBtXIxXzktAcDPDP
      19/H75w9P2aRIlBVBlocpsUUAbOFVkxipkm7FZuX78PxfaZnJV3TcRzsDvp4a3cH37jwNORI
      RhmbAwDT91BIpdG1LPz45nV85ew5rOQLuH379qPHABSDElcNjqpRDAYD+L4/1kSZtkzLsmCM
      PLv5fJ51qJn24t/d3cFmr4v1bgfNwQDfunQZum3jk04b37/y2VhLxjwM8PrdLWz1enjl4qWZ
      apcGYYgbzQaeKlegxCTJOI4DSZJYHgGBZ4DDmECjzjb+Nz++4djIKOpMps8kBZjmzz5zXbx2
      ZxNXl1ZQ4GiaciR4xtva2hqWWp/r7h4CUDl227YPrAi+70PXdfaSoqsVdRivVIY5rYZhoNfr
      McYJwzAxzr4+6KOUTuNs+RwqmoaFTBa6bWMlP17n/7D4/ImTuNV6B/9z+2O8EJO7HCfTn87m
      4LsuPK40CB3ned5YVGV0rMPOOc56xI+zrev46frH6DsOXl47jcujqm7zXp+y4Xi4QYB630Df
      ccYYgOKAeLBSnY/aDgDsJ2p0Op0DD5GPJvQ8D77vH1iFaeULgoCtMBSSnUqlkM1mmTOGx2a3
      ize270AUhLFoVNN1IYnimDcSOLgDKIoy0Rp1q7GHj1pNXFk9iRMxNn66r+PunhmHJNt8nLWI
      P0Z3HLy5fReL2SzOlStIx4iHs+48uq6zrkHTzuU7Xu7t7aFYLA4/m3qVhxCCICTmxvK9emVZ
      RrFYRCaTGQuF4Hv+EqHncjlUKhWkUil0Oh30ej2EYQhVVYfxJWGI9W4bputimatB2rUs/MP7
      7ya2LSWIooh2uw0gPrAtDEOcq9bgCwI29/ZiqzIT094PxBF7lBgFYViu5Mtnzg7FsiP6BXO5
      HEty55XzOL8FgZoqEjM8ciIQYdIKQg9LFEWoqsqIidIyNU2DaZpMj6DjSRfI5XKQZRm2baPV
      akEURbzVamBL7+HSwsJYut/7jTr8MMTV5WH+qxcE+OXGOp5ZWoKGccWQeqrxlQt4p1cYhnjl
      6c8gDIfRjJlM5lD+i6OCiMfzPHQ6nbHcYyLCOLGDYHkefrH+CV5cO43LC+OFxObRO2gXJ29+
      dOfhQ6DpM8MwUK1W2bGPLAOQ3N7r9WK/j7NI8MygaRrrOQaMM1QQBHBGcnWxWIQkSeje2QR8
      Hw1dh1naV8Cfq9TwdLGMzMj2bHsetjptLKgqFtTU2PX5GKW4udI8SDFvNBpYWFg4cofMeUFE
      LkkSJElCo9GALMswTRPZbJZVX6jVaux43bFRSA27fWqKgu9d+SwySvwuBiSLWETQJH4S8fPm
      WGAYBXq92cBXz5xDjat8EdXhHkkdgBCGIXq93gGLEL8qVCqViTVxyFdAJd2TRIxhhbguLi0u
      QZkxuI5W8hznqaREEIIgDNML0+k0BoPB2BwURcHe3t59YQKC4ziMAD3PGyNcuq/bnTb+65Nb
      +PalZ2C4DnYMAy+cXIu180e91XE6Rjqdhud5bPVvNpsolUpjx7+6tYGtXhdfOnWGFSsbDAYQ
      BGFMfHxkdwBgn3iiKytvMaGXF2ebFgSB2cmJ+JKgycqwd4Hvw50xuI7gJBRwpbkSU0iSNFZV
      23Ec1Go17O3tsRqchzFdHgWztKVdzRfwpVNnUNY03DF62OsbE8MuJiEMQ1YDCBi+P96qR/f+
      0uoaBksrB8qsU51S9tmjvAMAwwdkGEbsLgAMFd5yuTwxJNpxHFa46ziVTFoxpxWzIv0gyeNK
      O0GpVGIFoB4E6LaN1+/ewRfXTrF6S7OEnkdFLNu2JzI17c6ZTIaZrRVFYVXjFEVh47iuy+oD
      aZr2aFqBeEiShFwud4DI6IHycTVJmNXVf9j5TcO0a7uui6WlJfR6PTSbzWNrFn5UDFwXDbMP
      Z7Qj8qv77U4bv9raSHz2RLyO40xMVuKtP/1+H57nodfrQdd1BEHAPtN1HYZhQFEUbLXb+PGt
      m/DDRygadBLIBkyWglarhVwuB1VV4fs+TNM8YE/mQd0Qo3UljwrqecWbXZMwjUmpEhzpPZ92
      t5s4LOVy+O7lK+z/rm2hbZo4W66gZ1vY47pU8qB5b3Q7kAQBy4UikpYJKmtJOyS9R8f38drW
      BkppDf+zuY5vX7oMWRRh+z5+cesGbjQbOLu78HgwgCAME2bI8TUYDFhZjEKhgE6ng0qlghMn
      TsSeT/0MePn7uKAoCmzbPvKqzXuyXddFqVR6IEShMAzRs21oioJ/u/EhAAFnyxU8t7SCK4vL
      E8/99Z0tbPW6OFMqo5RO4+W10wfCOngHFy/be0GAxmCA5XwBa8UipNExtudCFAS4vo9tQ3/0
      dQBCEATodDqwbRvtdpuJHlTLs1qtohQTNMaf3+12j30XCMPx5PSjgvQFKlx7v3cBsgD1bBtt
      y8Sffu4L0B0Hl2oLjCijCMMQpufi7997d1QVPI0PG3v45oWnDzRGMQxjrEJe1HxKzMHnWguC
      gI1eF7VM9vHYAUiWlCQJvu+jVCrB931mSUilUigWiyxMOq5TJJnP7gUDyHJ8J8OjjEcK9v1m
      gJOFIn771Fnojg1ZEqHbNl7dXMdKLo9KQiFdQRg2RTlfreGZhUUUUyk8E4kZiov/n/Tsor6U
      08XSp98l8n5hc3MTS0tLqNfrsG0bmqah0+kgl8tBFEW0Wi10Op2xvsLnzp0bG4MYINrI4TgR
      dQIdFrTSxQWMxYEsJuQFJ0cTmV1nzZmOwvV9/N21d5CWFSiShG9duowfvv8eTuQLKKWTG52I
      ooiPWk181Gqglsmw7DDg4LNJ2jlDDPMNLlQXoI50LN6aBow8xYe6s4cMkiTBMAwm+wdBgMKo
      gKrrukilUixLqNvtsqJJUciyfKSOKnGIeiePY8WmSM9ZwiRUVcXOzg4z89brddTrdbRaLWxs
      bDA/yGEgiSL6rouebWGtUMS/37oJQRDwxVGyyyR0bRsf7tXx12/9Bv5oV06n02Orve/7rNt9
      LpdDJpNhu3fHsvDa5ga2jWFr3EKhMHY+4bHQAaJBZaZpMscW7xQjZTmbzbLVM/rASJeIel7J
      skSlHSngjnJW+dWVhyAMK1Yoyniz66NCVVU0m02W0xAXxi1JEjqdDhYWFpiBgLzkojis6Hb9
      +nVcvHhxqi0+ird2tpFRFZTSGj7Yq6NtmThfriKrqniqUmXHxYVP0+/367v4yccf4c9efBm1
      Uoll78myjFQqNVZBkJf9fd+HbdvomSbSo/a4FPvV7/fhOA5uNBt44+7W4yECRYmKTKCDwWBM
      pg/DkDFGNptlJjbeTEmiUJQBFEVhyjWZVSk5Z3FxEe12m5lTeUSynpeOAAALH0lEQVSLvybF
      0c8Lx3FQrVZZ6XJqUM6LRMR0rusyMYcXdyRJwoULF3Dnzh0sLy8zHWkavCDAT9c/xuWFJXz9
      /CL8IMC23sOzi0sHHGH8AsR/FoYhTpdKqGgZ3O12UC0WWTNzwiTvPTVHjx5XKBTgOA4WLAsX
      FpYejx0gCWEYQtf12JIoFPfvui5UVWXEQrkGtJIQKMyWyh2KosiylhRFYQ3pDjTAG8WzEOZp
      sTQLSPHv9/us0jaFA+i6zlbHOBAzKoqCVqvFkoImMcHbO9tQZRk928LF6gLr5s6PSYiGMEeV
      di8I8Os7m3h+dQ2rtdrcZeuTEAQBY/SHkgFYSYtjIJYk86YoiiiXy+xa9IzCMESz2WTh0ITD
      rtZ8hYYD8qkwOblkHiiKAt/3WTKIqqowDAOlkWgRB34+iqJgZ2cHy8vLEy1hv9i4jbSs4IWT
      a4nHEKLiJ4VR8yCmncVZOA+YePswMgDF5MzaEG4afN9Hp9M5oDQWCgWkUqmxmHzf99FsNpFO
      p1m49CxhEnH6BrBvsZnUJZI//qhKcjqdRr1eh6IoKJVKscScNA+yoE1qv3RYHYbfAXimLxQK
      sTVdjwsPJQPcC7iui263O/Zyo0oxsB+jQsptp9OZyUwYxyRkkuMjGqO7mmVZzBSZy+VYZCt1
      d7Rtm4lRpGSTGBZHNLTCTioolUTEFHRXq9Vid43oebOYdaOeXDK/Um7GUaxQs+AJA3DwPA/t
      dvsAQefz+WHkYIwCx7d4nYSk2HZ+N+NFIfq+0+mgUBh2hSRrEh1DsUy9Xo/5NCjqUdM05iGN
      zjc9wQZP101SMKmcSpw/JNp/bdJY/DnU/IKeB1l36Px7iScMEIGu6wf8AJIkIZ1OxyqxZDmi
      SmNJmMQAJPvSy47Gt1MrVGIW8h3wzENZYvQdFQTjQSbaWcSoJMJVVRV7e3uoVqsHdoE4nWUa
      AafTaQRBMBaxe6+JnsdjYQaNQ1LOatzD52sIJVWmFkUR3W53rjnQakpBbPzcombbqHzMEzcd
      O4uV5Kg6BMXX0/OLNtHjMQshq6oa2xHo08Jj4QmOgjzAcZ/T9k4//NacFFZAyezTRAsegiCw
      Fx8Xe8QTO107iXhnss17XizTzIswDFEsFlnJmaRx4uYUFe/kUccW+n0/8FgyAMnP0UQX13XR
      6/VYiW3TNFnpbdu2E0MkaEzqWJ5Op6EoSqKDC8CYPH8cmMYEPPPS/fCiFi/OUB40D/5/13VR
      rVbR6XQmMn0SE9DCEvecPm081jqA4ziwbZutxtR7yjRNljzDv8R0Oo1isTh11aMVu9frjRFO
      dDw+XCIOx7kq8jtAq9VCsVhEo9FgCeamaUJRFNbo2vd91vyarFCDwQCrq6tM9JEkCYPBAOVy
      OTFXgmcyem6kS91L8+aseCx3AIIsy5BlGYPBALqusxadQLyIYFkWdF1PNHvSSyZrTJKDizBJ
      7r0XhMHrCuSl5stByrLMSppQyAbdQyqVYplXVDHPcRyIooh6vT61xxq/OPRHrWnvN/EDj/kO
      AOybBqljSNQhE2e9SaVSKJVKE18ghVlQayYgPv+YrDb8LhANCzgOQomzAFHA3zTxiV/FKWiO
      TLD0/TSZn/4nfWfSTvpp4rG1AhFodSOHU9Ix/Au2bXtqsjbJuORppZ0BOKjgRoknakc/LkSt
      S5ubm6yqG5+WSRavMBxmq2VGiSuksNNxkiSNmV5VVR27RnTuqVSKRXE+CMQPPGEAAMMXlc/n
      4XkeYwQiQL4cCQ/qMTCJCRRFQblchuu6zINLIgQ/Xpwv4LjBd2kngqXUScqOo7LytEr7o2Yi
      QRDAMAysrq4eGJdWddM0WQpm0j1YloUgCA446O4nnjDACFSDhjLCqNYMmeuiMTOe58G27bFC
      q1HQuTR2UplGCqGmcIcoc0Q9xIcBhRgQRFFErVYb25lIPOt0OgcqrVUqFUiSxJx9NB9KKKKO
      PNMy0B40cfsJA0RAogvvlXVdNzZojBRGivOfpNDyxZqiugUlywD7hBonFvHjkxmTFO4kmKbJ
      TL62bSOfz7OdJuo4o3Gq1SqbNw+yDPFEnMlkMBgMsLi4iEajgVKpNJEJqBLfg4LH2gqUBAos
      0zQNqqrGhhUA+3Hl08omAvtiVj6fZ4FsvEUlSeGOXo8Pnyal1jCMsV2CX9FTqRRj0Hw+f+gc
      X8dxWIhFdE68HyHOqRcd5wkDPAQIwxDr6+swDIMpf7RKk5NMEAQ0m02Ypont7W2WNkg/lMJH
      xEmrdTqdRiaTYcQYXcGnEUgQBIzQZFlm2WdU/cKyLJblFTU3TiPQONCqH7Ui0X2RRahUKmFr
      a4t9xpuA+Z+jhmMcJ56IQAkIw2EFucFgAMMwsLy8jH6/z2pv0ssOwxCFQoHpDcB+lheJGb1e
      D1evXh2T46mVE4VDE8iyQuJSHKhTDY84MYi3NAHjOQjR3mCTEEe0/Ni0k7mui7W1NbTb7aFS
      rGl4u91EZ9DHV86eRz6VYl7mecJG7iWeMMAEUCZSKpViXtF8Ps/kXk3T2PeaprGsq1wux160
      67qoVCpsTAqBoKptSfZz8h/wocF0PDHHNMWYvuOvQWNGwzImgQL2otGa/HmqqsJ1XRiGAU3T
      kMvl0LdtXNvawqbRQ01S8MzSMtphgKxj46ml5WNLaDoKnjBAAkRRxFNPPQVgPw+YT4vs9/vQ
      dX1sRS+XywcINg5RsYhAohOFCQD7MjavMKdSqUPVJqJrTorV54P+BEHAzs7OWEoiOdQAsMQg
      vmNjt9tFLpdDr9dDtVrFd64+D0WSsJDNod/v42dv/wYFNYWSrGBxcbw7zP3AEwaYAeQs4//f
      2NhgGVgkshSLxZlCklMjUYDPzgL2iY8nbipOxdvmj1qYa1rYMu/ZtSyLRWxSEr0gDDto5nI5
      lEol1iopDEOkUins7e0xL3Nt1ADbcRxomoY/fvHlYe3SYvFI93BceMIAh0SpVEKz2WRh1Ssr
      K+j3+1OL3BIzkaxP1hX+e36VpmC5aIzOYRHnqIprA0VYXV1l86zVamwHKBaLME0ToijC8zzW
      ddGyLCwuLjJrDz8m3ac88os8CHjsY4EOCwqdplAAetGapqE4w+rGK7/9fp8xEplWeTElGitE
      OIxzjMQ5vmbOLCZYOnYwGDAdB0iOWI2GUdBcqagVVeO733hiBj0kKHQBGF85LcuamBrJn09e
      YuqlVa/X0e/3Yds2LMtCv99n1Sqog33UDDkveB0iKu9PA4linU5n4q7BMxn/PRUYeBDCoAlP
      RKAjIE4WD8MwtqJcEsgqQ823KRaHiJ7GJKsSX/EMAHZ3d5mTi3oaU7QmKakkmhQKBTY22fQF
      QWDto8g0yldq4O+LKjRQXVVKi+SVa0rzjJMq4rzP9xsP1mweIhChxHlVSTam5JJZoCgKTp48
      yUo2Uh4yESolwUd1AJpDt9tlXWKoRVA2m2XJ+jRuNptlTEBMAozH6FDIMwXOEYE7jjOWSUfP
      gcQbug4xR1REu19pj5PwhAEOCVEUUSgU0O12D+wEhwlek2WZ9S3wPA+O4yAzKitIxBgXLZrP
      51mDbzJFlstllmdLYRrRnYNPaCGnHRE1FdMlXYR2Mp6AeV8AlYGkv/lIWv7YB0Xs4fGEAQ4J
      CmvI5XIwTfNAkv1hXjaJQ5lMhplD+eCxuDFpR+DlagrmC8P9Xr1xpk9aramkCi+e8H9T74A4
      eZ9ELr52KiFqyXoQGeDB25MeEhCxKorCSpDz4Kstz2O3Jzm5UCgwPwOtpLIss3EnJdFEHV00
      Bv1NpleqKjdLhCaFOvMiH/kH+HPpWnHizoNi+uTx/w9uMcGOF5BTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='no FB correlation' width='192'>
      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
      TRGmDK4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top fi by county' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top fi by state' width='192'>
      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
      QmMASGj/D3bZgFbx0Oy1AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
