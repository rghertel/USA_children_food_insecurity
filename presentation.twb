<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='16.9'>
        <calculation class='tableau' formula='16.9' />
      </column>
    </datasource>
    <datasource caption='food_banks_USA.csv+ (Multiple Connections)' inline='true' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MMG2020_2018county' name='textscan.00u036v1pp693e13iwpg008qjvoe'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data/Map the Meal Gap data' filename='MMG2020_2018county.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_banks_by_state' name='textscan.16xqeu61wkjun51ghzj4c1f1mpor'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_banks_by_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_banks_USA' name='textscan.0hucxfp1l2de8313xbg701cg463q'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_banks_USA.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_pop_state' name='textscan.0xru2a60yw3aqc1054uze0qtbh6y'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_pop_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='fi_rates_5yr' name='textscan.0yr55cu1lrxejt19knwo01wvbphj'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='fi_rates_5yr.csv' password='' server='' />
          </named-connection>
          <named-connection caption='median_income_hh' name='textscan.1t6fwrc0iizon815jfgrj0s5an48'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='median_income_hh.csv' password='' server='' />
          </named-connection>
          <named-connection caption='income_18' name='textscan.0jdg3q00eshtd111cyluk0ftwobt'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='income_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_waste_percents' name='textscan.0qhuosv1ywr38214aputw0ie78av'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_waste_percents.csv' password='' server='' />
          </named-connection>
          <named-connection caption='financials_18' name='textscan.187vbbv0393s1b14vpfnz0jrf6vh'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='financials_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_poverty_18' name='textscan.1kd29ao0d5cczz0zwx9790l7a5o3'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_poverty_18.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='FIPS' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County, State' ordinal='2' />
            <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
            <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
            <column datatype='real' name='Low Threshold in state' ordinal='5' />
            <column datatype='string' name='Low Threshold Type' ordinal='6' />
            <column datatype='real' name='High Threshold in state' ordinal='7' />
            <column datatype='string' name='High Threshold Type' ordinal='8' />
            <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
            <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
            <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
            <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
            <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
            <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
            <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
            <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
            <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0hucxfp1l2de8313xbg701cg463q' name='food_banks_USA.csv' table='[food_banks_USA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Organization' ordinal='0' />
              <column datatype='string' name='Address' ordinal='1' />
              <column datatype='string' name='City' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='zipcode' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018state.csv' table='[MMG2020_2018state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='State Name' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='real' name='2018 Food Insecurity Rate' ordinal='3' />
              <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
              <column datatype='real' name='Low Threshold in state' ordinal='5' />
              <column datatype='string' name='Low Threshold Type' ordinal='6' />
              <column datatype='real' name='High Threshold in state' ordinal='7' />
              <column datatype='string' name='High Threshold Type' ordinal='8' />
              <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
              <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
              <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
              <column datatype='real' name='2018 Child Food Insecurity Rate' ordinal='12' />
              <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
              <column datatype='real' name='% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016' ordinal='14' />
              <column datatype='real' name='% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016' ordinal='15' />
              <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
              <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='County, State' ordinal='2' />
              <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
              <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
              <column datatype='real' name='Low Threshold in state' ordinal='5' />
              <column datatype='string' name='Low Threshold Type' ordinal='6' />
              <column datatype='real' name='High Threshold in state' ordinal='7' />
              <column datatype='string' name='High Threshold Type' ordinal='8' />
              <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
              <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
              <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
              <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
              <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
              <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
              <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
              <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
              <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0xru2a60yw3aqc1054uze0qtbh6y' name='child_pop_state.csv' table='[child_pop_state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='integer' name='count' ordinal='2' />
              <column datatype='integer' name='num_food_ins_children' ordinal='3' />
              <column datatype='real' name='child_fi_rate' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1kd29ao0d5cczz0zwx9790l7a5o3' name='child_poverty_18.csv' table='[child_poverty_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='string' name='dataform' ordinal='2' />
              <column datatype='real' name='amount' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0yr55cu1lrxejt19knwo01wvbphj' name='fi_rates_5yr.csv' table='[fi_rates_5yr#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state_name' ordinal='0' />
              <column datatype='real' name='fi_18' ordinal='1' />
              <column datatype='real' name='fi_17' ordinal='2' />
              <column datatype='real' name='fi_16' ordinal='3' />
              <column datatype='real' name='fi_15' ordinal='4' />
              <column datatype='real' name='fi_14' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.187vbbv0393s1b14vpfnz0jrf6vh' name='financials_18.csv' table='[financials_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='weighted_annual_dollars' ordinal='1' />
              <column datatype='real' name='dollars_waste' ordinal='2' />
              <column datatype='integer' name='income' ordinal='3' />
              <column datatype='real' name='perc_waste' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[# of Food Insecure Children in 2018]' />
          <map key='[# of Food Insecure Children in 2018]' value='[MMG2020_2018state.csv].[# of Food Insecure Children in 2018]' />
          <map key='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[# of Food Insecure Persons in 2018]' />
          <map key='[# of Food Insecure Persons in 2018]' value='[MMG2020_2018state.csv].[# of Food Insecure Persons in 2018]' />
          <map key='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI &gt; High Threshold]' />
          <map key='[% FI &gt; High Threshold]' value='[MMG2020_2018state.csv].[% FI &gt; High Threshold]' />
          <map key='[% FI ? Low Threshold (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI ? Low Threshold]' />
          <map key='[% FI ? Low Threshold]' value='[MMG2020_2018state.csv].[% FI ? Low Threshold]' />
          <map key='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI Btwn Thresholds]' />
          <map key='[% FI Btwn Thresholds]' value='[MMG2020_2018state.csv].[% FI Btwn Thresholds]' />
          <map key='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' value='[MMG2020_2018state.csv].[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' />
          <map key='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' value='[MMG2020_2018state.csv].[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' />
          <map key='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' value='[MMG2020_2018county.csv].[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' />
          <map key='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' value='[MMG2020_2018county.csv].[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' />
          <map key='[2018 Child Food Insecurity Rate]' value='[MMG2020_2018state.csv].[2018 Child Food Insecurity Rate]' />
          <map key='[2018 Child food insecurity rate]' value='[MMG2020_2018county.csv].[2018 Child food insecurity rate]' />
          <map key='[2018 Cost Per Meal (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Cost Per Meal]' />
          <map key='[2018 Cost Per Meal]' value='[MMG2020_2018state.csv].[2018 Cost Per Meal]' />
          <map key='[2018 Food Insecurity Rate (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Food Insecurity Rate]' />
          <map key='[2018 Food Insecurity Rate]' value='[MMG2020_2018state.csv].[2018 Food Insecurity Rate]' />
          <map key='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Weighted Annual Food Budget Shortfall]' />
          <map key='[2018 Weighted Annual Food Budget Shortfall]' value='[MMG2020_2018state.csv].[2018 Weighted Annual Food Budget Shortfall]' />
          <map key='[Address]' value='[food_banks_USA.csv].[Address]' />
          <map key='[City]' value='[food_banks_USA.csv].[City]' />
          <map key='[County, State]' value='[MMG2020_2018county.csv].[County, State]' />
          <map key='[FIPS (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[FIPS]' />
          <map key='[FIPS]' value='[MMG2020_2018state.csv].[FIPS]' />
          <map key='[High Threshold Type (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[High Threshold Type]' />
          <map key='[High Threshold Type]' value='[MMG2020_2018state.csv].[High Threshold Type]' />
          <map key='[High Threshold in state (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[High Threshold in state]' />
          <map key='[High Threshold in state]' value='[MMG2020_2018state.csv].[High Threshold in state]' />
          <map key='[Low Threshold Type (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[Low Threshold Type]' />
          <map key='[Low Threshold Type]' value='[MMG2020_2018state.csv].[Low Threshold Type]' />
          <map key='[Low Threshold in state (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[Low Threshold in state]' />
          <map key='[Low Threshold in state]' value='[MMG2020_2018state.csv].[Low Threshold in state]' />
          <map key='[Organization]' value='[food_banks_USA.csv].[Organization]' />
          <map key='[State (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[State]' />
          <map key='[State Name]' value='[MMG2020_2018state.csv].[State Name]' />
          <map key='[State]' value='[MMG2020_2018state.csv].[State]' />
          <map key='[amount]' value='[child_poverty_18.csv].[amount]' />
          <map key='[child_fi_rate]' value='[child_pop_state.csv].[child_fi_rate]' />
          <map key='[count]' value='[child_pop_state.csv].[count]' />
          <map key='[dataform]' value='[child_poverty_18.csv].[dataform]' />
          <map key='[dollars_waste]' value='[financials_18.csv].[dollars_waste]' />
          <map key='[fi_14]' value='[fi_rates_5yr.csv].[fi_14]' />
          <map key='[fi_15]' value='[fi_rates_5yr.csv].[fi_15]' />
          <map key='[fi_16]' value='[fi_rates_5yr.csv].[fi_16]' />
          <map key='[fi_17]' value='[fi_rates_5yr.csv].[fi_17]' />
          <map key='[fi_18]' value='[fi_rates_5yr.csv].[fi_18]' />
          <map key='[income]' value='[financials_18.csv].[income]' />
          <map key='[location]' value='[child_pop_state.csv].[location]' />
          <map key='[num_food_ins_children]' value='[child_pop_state.csv].[num_food_ins_children]' />
          <map key='[perc_waste]' value='[financials_18.csv].[perc_waste]' />
          <map key='[state (child_poverty_18.csv)]' value='[child_poverty_18.csv].[state]' />
          <map key='[state (financials_18.csv)]' value='[financials_18.csv].[state]' />
          <map key='[state]' value='[food_banks_USA.csv].[state]' />
          <map key='[state_name]' value='[fi_rates_5yr.csv].[state_name]' />
          <map key='[weighted_annual_dollars]' value='[financials_18.csv].[weighted_annual_dollars]' />
          <map key='[year (child_poverty_18.csv)]' value='[child_poverty_18.csv].[year]' />
          <map key='[year]' value='[child_pop_state.csv].[year]' />
          <map key='[zipcode]' value='[food_banks_USA.csv].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Organization</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Organization]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>Organization</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Food Insecurity Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Food Insecurity Rate]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Food Insecurity Rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Persons in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Persons in 2018]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias># of Food Insecure Persons in 2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low Threshold in state]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>Low Threshold in state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Low Threshold Type]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>Low Threshold Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High Threshold in state]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>High Threshold in state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High Threshold Type]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>High Threshold Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI ? Low Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI ? Low Threshold]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI ? Low Threshold</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI Btwn Thresholds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI Btwn Thresholds]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI Btwn Thresholds</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI &gt; High Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI &gt; High Threshold]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI &gt; High Threshold</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Child Food Insecurity Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Child Food Insecurity Rate]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Child Food Insecurity Rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Children in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Children in 2018]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias># of Food Insecure Children in 2018</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Cost Per Meal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Cost Per Meal]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Cost Per Meal</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Weighted Annual Food Budget Shortfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Weighted Annual Food Budget Shortfall]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Weighted Annual Food Budget Shortfall</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County, State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County, State]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>County, State</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Food Insecurity Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2018 Food Insecurity Rate (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Food Insecurity Rate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Persons in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias># of Food Insecure Persons in 2018</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low Threshold in state (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>Low Threshold in state</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Low Threshold Type (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>Low Threshold Type</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High Threshold in state (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>High Threshold in state</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High Threshold Type (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>High Threshold Type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI ? Low Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI ? Low Threshold (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI ? Low Threshold</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI Btwn Thresholds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI Btwn Thresholds (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI Btwn Thresholds</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI &gt; High Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI &gt; High Threshold (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI &gt; High Threshold</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Child food insecurity rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Child food insecurity rate]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Child food insecurity rate</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Children in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias># of Food Insecure Children in 2018</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure children in HH w/ HH incomes below 185 FPL in 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% food insecure children in HH w/ HH incomes below 185 FPL in 2018</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure children in HH w/ HH incomes above 185 FPL in 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% food insecure children in HH w/ HH incomes above 185 FPL in 2018</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Cost Per Meal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Cost Per Meal (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Cost Per Meal</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Weighted Annual Food Budget Shortfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Weighted Annual Food Budget Shortfall</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_food_ins_children</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_food_ins_children]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>num_food_ins_children</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>child_fi_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[child_fi_rate]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>child_fi_rate</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (child_poverty_18.csv)]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (child_poverty_18.csv)]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dataform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dataform]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>dataform</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[amount]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>amount</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_18]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_18</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_17]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_17</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_16]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_16</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_15]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_15</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_14]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_14</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (financials_18.csv)]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weighted_annual_dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weighted_annual_dollars]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>weighted_annual_dollars</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_waste]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>dollars_waste</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_waste]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>perc_waste</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# of Food Insecure Children in 2018 (MMG2020 2018county.csv)' datatype='integer' name='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[# of Food Insecure Children in 2018]' role='measure' type='quantitative' />
      <column caption='# of Food Insecure Persons in 2018 (MMG2020 2018county.csv)' datatype='integer' name='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[# of Food Insecure Persons in 2018]' role='measure' type='quantitative' />
      <column caption='% FI &gt; High Threshold (MMG2020 2018county.csv)' datatype='real' name='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI &gt; High Threshold]' role='measure' type='quantitative' />
      <column caption='% FI ? Low Threshold (MMG2020 2018county.csv)' datatype='real' name='[% FI ? Low Threshold (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI ? Low Threshold]' role='measure' type='quantitative' />
      <column caption='% FI Btwn Thresholds (MMG2020 2018county.csv)' datatype='real' name='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI Btwn Thresholds]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
      <column caption='2018 Cost Per Meal (MMG2020 2018county.csv)' datatype='real' name='[2018 Cost Per Meal (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Cost Per Meal]' role='measure' type='quantitative' />
      <column caption='2018 Food Insecurity Rate (MMG2020 2018county.csv)' datatype='string' name='[2018 Food Insecurity Rate (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[2018 Food Insecurity Rate]' role='measure' type='quantitative' />
      <column caption='2018 Weighted Annual Food Budget Shortfall (MMG2020 2018county.csv)' datatype='real' name='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Weighted Annual Food Budget Shortfall]' role='measure' type='quantitative' />
      <column datatype='string' name='[Address]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([child_fi_rate])) / LOOKUP(ZN(SUM([child_fi_rate])), -1)'>
          <table-calc ordering-field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[location]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[County, State - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
      </column>
      <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='FIPS (MMG2020 2018county.csv)' datatype='integer' name='[FIPS (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='High Threshold Type (MMG2020 2018county.csv)' datatype='string' name='[High Threshold Type (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='High Threshold in state (MMG2020 2018county.csv)' datatype='real' name='[High Threshold in state (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[High Threshold in state]' role='measure' type='quantitative' />
      <column caption='Low Threshold Type (MMG2020 2018county.csv)' datatype='string' name='[Low Threshold Type (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Low Threshold in state (MMG2020 2018county.csv)' datatype='real' name='[Low Threshold in state (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low Threshold in state]' role='measure' type='quantitative' />
      <column caption='State (MMG2020 2018county.csv)' datatype='string' name='[State (MMG2020_2018county.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='MMG2020_2018county.csv' datatype='table' name='[__tableau_internal_object_id__].[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='MMG2020_2018state.csv' datatype='table' name='[__tableau_internal_object_id__].[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child_pop_state.csv' datatype='table' name='[__tableau_internal_object_id__].[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child_poverty_18.csv' datatype='table' name='[__tableau_internal_object_id__].[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fi_rates_5yr.csv' datatype='table' name='[__tableau_internal_object_id__].[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='financials_18.csv' datatype='table' name='[__tableau_internal_object_id__].[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
      <column caption='% Children in Poverty' datatype='real' name='[amount]' role='measure' type='quantitative' />
      <column caption='Child Fi Rate' datatype='real' name='[child_fi_rate]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Dataform' datatype='string' name='[dataform]' role='dimension' type='nominal' />
      <column caption='Dollars Waste' datatype='real' name='[dollars_waste]' role='measure' type='quantitative' />
      <column caption='Fi 14' datatype='real' name='[fi_14]' role='measure' type='quantitative' />
      <column caption='Fi 15' datatype='real' name='[fi_15]' role='measure' type='quantitative' />
      <column caption='Fi 16' datatype='real' name='[fi_16]' role='measure' type='quantitative' />
      <column caption='Fi 17' datatype='real' name='[fi_17]' role='measure' type='quantitative' />
      <column caption='Fi 18' datatype='real' name='[fi_18]' role='measure' type='quantitative' />
      <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Num Food Ins Children' datatype='integer' name='[num_food_ins_children]' role='measure' type='quantitative' />
      <column caption='Perc Waste' datatype='real' name='[perc_waste]' role='measure' type='quantitative' />
      <column caption='State (Child Poverty 18.Csv)' datatype='string' name='[state (child_poverty_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Financials 18.Csv)' datatype='string' name='[state (financials_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name1' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weighted Annual Dollars' datatype='real' name='[weighted_annual_dollars]' role='measure' type='quantitative' />
      <column caption='Year (Child Poverty 18.Csv)' datatype='integer' name='[year (child_poverty_18.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='Attribute' name='[attr:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[fi_14]' derivation='None' name='[none:fi_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_15]' derivation='None' name='[none:fi_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:# of Food Insecure Children in 2018 (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Children in 2018]' derivation='Sum' name='[sum:# of Food Insecure Children in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:# of Food Insecure Persons in 2018 (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Persons in 2018]' derivation='Sum' name='[sum:# of Food Insecure Persons in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI &gt; High Threshold (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI &gt; High Threshold]' derivation='Sum' name='[sum:% FI &gt; High Threshold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI ? Low Threshold (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI ? Low Threshold (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI ? Low Threshold]' derivation='Sum' name='[sum:% FI ? Low Threshold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI Btwn Thresholds (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI Btwn Thresholds]' derivation='Sum' name='[sum:% FI Btwn Thresholds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' derivation='Sum' name='[sum:% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' derivation='Sum' name='[sum:% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' derivation='Sum' name='[sum:% food insecure children in HH w/ HH incomes above 185 FPL in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' derivation='Sum' name='[sum:% food insecure children in HH w/ HH incomes below 185 FPL in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Cost Per Meal (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:2018 Cost Per Meal (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Cost Per Meal]' derivation='Sum' name='[sum:2018 Cost Per Meal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Weighted Annual Food Budget Shortfall]' derivation='Sum' name='[sum:2018 Weighted Annual Food Budget Shortfall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:FIPS (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS]' derivation='Sum' name='[sum:FIPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Threshold in state (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:High Threshold in state (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Threshold in state]' derivation='Sum' name='[sum:High Threshold in state:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low Threshold in state (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:Low Threshold in state (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low Threshold in state]' derivation='Sum' name='[sum:Low Threshold in state:qk]' pivot='key' type='quantitative' />
      <column-instance column='[child_fi_rate]' derivation='Sum' name='[sum:child_fi_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dollars_waste]' derivation='Sum' name='[sum:dollars_waste:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_14]' derivation='Sum' name='[sum:fi_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_15]' derivation='Sum' name='[sum:fi_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_16]' derivation='Sum' name='[sum:fi_16:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_17]' derivation='Sum' name='[sum:fi_17:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_18]' derivation='Sum' name='[sum:fi_18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[num_food_ins_children]' derivation='Sum' name='[sum:num_food_ins_children:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weighted_annual_dollars]' derivation='Sum' name='[sum:weighted_annual_dollars:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[location]' ordering-type='Field' />
      </column-instance>
      <group caption='Action (County,full state)' hidden='true' name='[Action (County,full state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County, State - Split 1]' />
          <groupfilter function='level-members' level='[County, State - Split 2]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (State,Zipcode)' hidden='true' name='[Action (State,Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='level-members' level='[zipcode]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>%null%</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:2018 Child food insecurity rate:ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>4.4640000000000004</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>4.6690000000000005</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>4.9249999999999989</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>5.6490000000000018</bucket>
            </map>
            <map to='#af123a'>
              <bucket>3.6649999999999996</bucket>
            </map>
            <map to='#af123a'>
              <bucket>3.9140000000000006</bucket>
            </map>
            <map to='#af123a'>
              <bucket>4.4169999999999998</bucket>
            </map>
            <map to='#b0123a'>
              <bucket>3.5490000000000004</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>3.2599999999999998</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>3.3519999999999999</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>2.7939999999999996</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>3.0939999999999999</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>3.2140000000000004</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>2.5380000000000003</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>2.5749999999999997</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>2.399</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.2880000000000003</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.3310000000000004</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.3450000000000002</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2200000000000002</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2469999999999999</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2549999999999999</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1430000000000002</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1440000000000001</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1850000000000001</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.1120000000000001</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.125</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.1309999999999998</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>2.1099999999999999</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>1.964</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>1.9909999999999997</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.853</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.8719999999999999</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.9550000000000001</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>1.7810000000000001</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>1.8029999999999999</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>1.7690000000000001</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.599</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.649</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.73</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.5429999999999999</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.5509999999999999</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.575</bucket>
            </map>
            <map to='#bc173a'>
              <bucket>1.5410000000000001</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>1.5230000000000001</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>1.5339999999999998</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.5</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.5069999999999999</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.512</bucket>
            </map>
            <map to='#be183a'>
              <bucket>1.4749999999999996</bucket>
            </map>
            <map to='#be183a'>
              <bucket>1.478</bucket>
            </map>
            <map to='#be193a'>
              <bucket>1.4699999999999998</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.407</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.4329999999999998</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.462</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3180000000000003</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3320000000000001</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3500000000000001</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.2589999999999999</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.2670000000000001</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.274</bucket>
            </map>
            <map to='#c21a3b'>
              <bucket>1.2249999999999999</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.165</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.2120000000000002</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.22</bucket>
            </map>
            <map to='#c31b3b'>
              <bucket>1.161</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>1.0980000000000001</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>1.1150000000000002</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>1.0600000000000001</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>1.0680000000000001</bucket>
            </map>
            <map to='#c41d3b'>
              <bucket>1.054</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.0249999999999999</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.032</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.0410000000000001</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>1.01</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.97199999999999998</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.99399999999999999</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.998</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.92900000000000005</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.93400000000000005</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.93799999999999994</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.96999999999999997</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92000000000000004</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92100000000000004</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92799999999999994</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>0.89900000000000002</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>0.90600000000000003</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>0.88900000000000001</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.84899999999999998</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.8650000000000001</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.86799999999999999</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>0.84700000000000009</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83400000000000007</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83699999999999997</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83700000000000019</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.81699999999999995</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.82000000000000006</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.82799999999999996</bucket>
            </map>
            <map to='#cd233c'>
              <bucket>0.81400000000000006</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.80400000000000005</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.80699999999999994</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.81000000000000005</bucket>
            </map>
            <map to='#ce243c'>
              <bucket>0.79400000000000004</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>0.78600000000000003</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>0.78800000000000003</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>0.78400000000000014</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>0.78499999999999992</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>0.77700000000000002</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>0.78299999999999992</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>0.74800000000000011</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>0.749</bucket>
            </map>
            <map to='#d0273c'>
              <bucket>0.71900000000000008</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.70799999999999996</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.70999999999999996</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.71899999999999997</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.68199999999999994</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.68300000000000005</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.69299999999999995</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.70299999999999985</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67600000000000005</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67800000000000005</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67900000000000005</bucket>
            </map>
            <map to='#d32a3d'>
              <bucket>0.67399999999999993</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.66499999999999992</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.66500000000000004</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.67200000000000004</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>0.66100000000000003</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>0.66200000000000003</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>0.65799999999999992</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>0.65999999999999992</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>0.63100000000000001</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>0.63900000000000001</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>0.626</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.61599999999999999</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.62</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.621</bucket>
            </map>
            <map to='#d72d3e'>
              <bucket>0.60699999999999998</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.59900000000000009</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.60199999999999998</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.60499999999999998</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.57700000000000007</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.58299999999999996</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.58399999999999996</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.59599999999999997</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57099999999999995</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57499999999999996</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57600000000000007</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57699999999999996</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.56899999999999995</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.56999999999999995</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.57000000000000006</bucket>
            </map>
            <map to='#da323f'>
              <bucket>0.56400000000000006</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.55999999999999994</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.56299999999999994</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.56399999999999995</bucket>
            </map>
            <map to='#db333f'>
              <bucket>0.55700000000000005</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>0.55100000000000005</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>0.55499999999999994</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>0.54600000000000004</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>0.55000000000000004</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>0.53900000000000003</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>0.54299999999999993</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>0.53300000000000003</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>0.53800000000000003</bucket>
            </map>
            <map to='#de3540'>
              <bucket>0.52400000000000002</bucket>
            </map>
            <map to='#de3540'>
              <bucket>0.53200000000000003</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51500000000000001</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51600000000000001</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51800000000000002</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.50600000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.50900000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.51100000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.5149999999999999</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.501</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.502</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.504</bucket>
            </map>
            <map to='#e03941'>
              <bucket>0.49900000000000005</bucket>
            </map>
            <map to='#e03941'>
              <bucket>0.5</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.495</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.498</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.499</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>0.49199999999999999</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>0.49299999999999999</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>0.49099999999999999</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48700000000000004</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48799999999999999</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48899999999999999</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>0.48500000000000004</bucket>
            </map>
            <map to='#e33d42'>
              <bucket>0.48499999999999999</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>0.48199999999999998</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47300000000000003</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47499999999999998</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47700000000000004</bucket>
            </map>
            <map to='#e33f43'>
              <bucket>0.47299999999999998</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>0.46999999999999997</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>0.47000000000000003</bucket>
            </map>
            <map to='#e44043'>
              <bucket>0.46800000000000003</bucket>
            </map>
            <map to='#e44044'>
              <bucket>0.46599999999999997</bucket>
            </map>
            <map to='#e44044'>
              <bucket>0.46699999999999997</bucket>
            </map>
            <map to='#e54144'>
              <bucket>0.46199999999999997</bucket>
            </map>
            <map to='#e54144'>
              <bucket>0.46299999999999997</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45799999999999996</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45900000000000007</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45999999999999996</bucket>
            </map>
            <map to='#e64344'>
              <bucket>0.45700000000000007</bucket>
            </map>
            <map to='#e64345'>
              <bucket>0.45500000000000002</bucket>
            </map>
            <map to='#e64345'>
              <bucket>0.45599999999999996</bucket>
            </map>
            <map to='#e64445'>
              <bucket>0.44999999999999996</bucket>
            </map>
            <map to='#e64445'>
              <bucket>0.45200000000000001</bucket>
            </map>
            <map to='#e74445'>
              <bucket>0.44800000000000006</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44599999999999995</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44700000000000001</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44800000000000001</bucket>
            </map>
            <map to='#e74645'>
              <bucket>0.44400000000000006</bucket>
            </map>
            <map to='#e84646'>
              <bucket>0.439</bucket>
            </map>
            <map to='#e84646'>
              <bucket>0.442</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.43700000000000006</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.43799999999999994</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.438</bucket>
            </map>
            <map to='#e84846'>
              <bucket>0.437</bucket>
            </map>
            <map to='#e94846'>
              <bucket>0.435</bucket>
            </map>
            <map to='#e94946'>
              <bucket>0.43400000000000005</bucket>
            </map>
            <map to='#e94947'>
              <bucket>0.43300000000000005</bucket>
            </map>
            <map to='#e94947'>
              <bucket>0.434</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>0.43200000000000005</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>0.43099999999999999</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>0.432</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42600000000000005</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42799999999999994</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42999999999999999</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42399999999999999</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42400000000000004</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42499999999999999</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>0.42099999999999993</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>0.42200000000000004</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>0.41699999999999998</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>0.42000000000000004</bucket>
            </map>
            <map to='#eb4e49'>
              <bucket>0.41699999999999993</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41199999999999998</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41400000000000003</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41500000000000004</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>0.40700000000000003</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>0.41100000000000003</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>0.40699999999999997</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>0.40400000000000003</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>0.40600000000000003</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>0.40300000000000002</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>0.40399999999999997</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39700000000000002</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39799999999999996</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39900000000000002</bucket>
            </map>
            <map to='#ed544a'>
              <bucket>0.39600000000000002</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>0.39300000000000002</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>0.39500000000000002</bucket>
            </map>
            <map to='#ed554b'>
              <bucket>0.39200000000000002</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>0.39000000000000001</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38799999999999996</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38800000000000001</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38900000000000001</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>0.38600000000000001</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>0.38700000000000001</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>0.38200000000000001</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>0.38400000000000001</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>0.38100000000000001</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>0.376</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>0.378</bucket>
            </map>
            <map to='#ef594d'>
              <bucket>0.375</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>0.373</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>0.374</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>0.36799999999999999</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>0.371</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>0.36600000000000005</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>0.36599999999999999</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>0.36499999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36299999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36399999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36400000000000005</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>0.35999999999999999</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>0.36199999999999999</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>0.35899999999999999</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>0.35699999999999998</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>0.35799999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35299999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35399999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35499999999999998</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>0.34999999999999998</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>0.35199999999999998</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34499999999999997</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34599999999999997</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34799999999999998</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34899999999999998</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34100000000000003</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34199999999999997</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34200000000000003</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33700000000000002</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33800000000000002</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33899999999999997</bucket>
            </map>
            <map to='#f26552'>
              <bucket>0.33699999999999997</bucket>
            </map>
            <map to='#f26553'>
              <bucket>0.33399999999999996</bucket>
            </map>
            <map to='#f26553'>
              <bucket>0.33400000000000002</bucket>
            </map>
            <map to='#f26653'>
              <bucket>0.33200000000000002</bucket>
            </map>
            <map to='#f26654'>
              <bucket>0.33100000000000002</bucket>
            </map>
            <map to='#f36654'>
              <bucket>0.33099999999999996</bucket>
            </map>
            <map to='#f36754'>
              <bucket>0.32900000000000001</bucket>
            </map>
            <map to='#f36755'>
              <bucket>0.32700000000000001</bucket>
            </map>
            <map to='#f36755'>
              <bucket>0.32899999999999996</bucket>
            </map>
            <map to='#f36855'>
              <bucket>0.32500000000000001</bucket>
            </map>
            <map to='#f36855'>
              <bucket>0.32600000000000001</bucket>
            </map>
            <map to='#f36856'>
              <bucket>0.32400000000000001</bucket>
            </map>
            <map to='#f36956'>
              <bucket>0.32200000000000001</bucket>
            </map>
            <map to='#f36956'>
              <bucket>0.32299999999999995</bucket>
            </map>
            <map to='#f36957'>
              <bucket>0.32199999999999995</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.31899999999999995</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.32000000000000001</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.32100000000000001</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>0.318</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>0.317</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>0.31799999999999995</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.314</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.315</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.316</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.31100000000000005</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.312</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.313</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>0.311</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>0.309</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>0.31</bucket>
            </map>
            <map to='#f46f5b'>
              <bucket>0.307</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>0.30499999999999999</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>0.30599999999999999</bucket>
            </map>
            <map to='#f4705c'>
              <bucket>0.30399999999999999</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>0.29999999999999999</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>0.30199999999999999</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>0.29799999999999999</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>0.29899999999999999</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>0.29700000000000004</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>0.29500000000000004</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>0.29699999999999999</bucket>
            </map>
            <map to='#f5725f'>
              <bucket>0.29499999999999998</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29199999999999998</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29200000000000004</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29400000000000004</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.28899999999999998</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.28999999999999998</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.29100000000000004</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28600000000000003</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28699999999999998</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28800000000000003</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28399999999999997</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28499999999999998</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28500000000000003</bucket>
            </map>
            <map to='#f67762'>
              <bucket>0.28300000000000003</bucket>
            </map>
            <map to='#f67763'>
              <bucket>0.28100000000000003</bucket>
            </map>
            <map to='#f67763'>
              <bucket>0.28199999999999997</bucket>
            </map>
            <map to='#f67863'>
              <bucket>0.27899999999999997</bucket>
            </map>
            <map to='#f67863'>
              <bucket>0.28000000000000003</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27600000000000002</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27699999999999997</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27800000000000002</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27399999999999997</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27400000000000002</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27500000000000002</bucket>
            </map>
            <map to='#f77b65'>
              <bucket>0.27300000000000002</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>0.27100000000000002</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>0.27200000000000002</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>0.27099999999999996</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>0.26900000000000002</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>0.27000000000000002</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>0.26800000000000002</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>0.26899999999999996</bucket>
            </map>
            <map to='#f77d68'>
              <bucket>0.26700000000000002</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26400000000000001</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26500000000000001</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26600000000000001</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>0.26200000000000001</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>0.26300000000000001</bucket>
            </map>
            <map to='#f88069'>
              <bucket>0.26100000000000001</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>0.25900000000000001</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>0.26000000000000001</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>0.25700000000000001</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>0.25800000000000001</bucket>
            </map>
            <map to='#f8816b'>
              <bucket>0.25600000000000001</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>0.254</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>0.255</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>0.253</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.25</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.251</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.252</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.247</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.248</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.249</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>0.24600000000000002</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>0.245</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>0.246</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>0.24399999999999999</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>0.24199999999999999</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>0.24299999999999999</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>0.23999999999999999</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>0.24100000000000002</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23799999999999999</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23800000000000002</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23899999999999999</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23499999999999999</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23600000000000002</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23699999999999999</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23199999999999998</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23300000000000001</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23399999999999999</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>0.23100000000000001</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>0.23000000000000001</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>0.22800000000000001</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>0.22899999999999998</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>0.22799999999999998</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>0.22600000000000001</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>0.22699999999999998</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.22399999999999998</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.224</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.22500000000000001</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.221</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.222</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.223</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>0.21999999999999997</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>0.22</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>0.218</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>0.21899999999999997</bucket>
            </map>
            <map to='#fa9079'>
              <bucket>0.217</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>0.216</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>0.21600000000000003</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.21299999999999999</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.214</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.215</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.20999999999999999</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.21100000000000002</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.21199999999999999</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>0.20800000000000002</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>0.20899999999999999</bucket>
            </map>
            <map to='#fb937e'>
              <bucket>0.20699999999999999</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>0.20499999999999999</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>0.20600000000000002</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>0.20300000000000001</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>0.20399999999999999</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20000000000000001</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20100000000000001</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20199999999999999</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19699999999999998</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19800000000000001</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19899999999999998</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>0.19500000000000001</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>0.19600000000000001</bucket>
            </map>
            <map to='#fb9783'>
              <bucket>0.19399999999999998</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>0.192</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>0.193</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>0.191</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>0.19</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.187</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.188</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.18899999999999997</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.184</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.185</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.18600000000000003</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>0.182</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>0.183</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>0.18100000000000002</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>0.17899999999999999</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>0.17999999999999999</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>0.17800000000000002</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>0.17600000000000002</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>0.17699999999999999</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>0.17399999999999999</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>0.17499999999999999</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17100000000000001</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17199999999999999</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17300000000000001</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>0.16899999999999998</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>0.17000000000000001</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>0.16699999999999998</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>0.16800000000000001</bucket>
            </map>
            <map to='#fca08d'>
              <bucket>0.16600000000000001</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>0.16399999999999998</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>0.16500000000000001</bucket>
            </map>
            <map to='#fca18e'>
              <bucket>0.16300000000000001</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>0.161</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>0.16200000000000001</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.158</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.159</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.16</bucket>
            </map>
            <map to='#fca291'>
              <bucket>0.157</bucket>
            </map>
            <map to='#fca391'>
              <bucket>0.156</bucket>
            </map>
            <map to='#fda392'>
              <bucket>0.154</bucket>
            </map>
            <map to='#fda392'>
              <bucket>0.155</bucket>
            </map>
            <map to='#fda492'>
              <bucket>0.153</bucket>
            </map>
            <map to='#fda493'>
              <bucket>0.151</bucket>
            </map>
            <map to='#fda493'>
              <bucket>0.152</bucket>
            </map>
            <map to='#fda593'>
              <bucket>0.14999999999999999</bucket>
            </map>
            <map to='#fda594'>
              <bucket>0.14800000000000002</bucket>
            </map>
            <map to='#fda594'>
              <bucket>0.14899999999999999</bucket>
            </map>
            <map to='#fda595'>
              <bucket>0.14699999999999999</bucket>
            </map>
            <map to='#fda695'>
              <bucket>0.14499999999999999</bucket>
            </map>
            <map to='#fda695'>
              <bucket>0.14599999999999999</bucket>
            </map>
            <map to='#fda696'>
              <bucket>0.14400000000000002</bucket>
            </map>
            <map to='#fda796'>
              <bucket>0.14300000000000002</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14000000000000001</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14099999999999999</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14199999999999999</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13699999999999998</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13800000000000001</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13900000000000001</bucket>
            </map>
            <map to='#fda999'>
              <bucket>0.13500000000000001</bucket>
            </map>
            <map to='#fda999'>
              <bucket>0.13600000000000001</bucket>
            </map>
            <map to='#fda99a'>
              <bucket>0.13400000000000001</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>0.13200000000000001</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>0.13300000000000001</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>0.13</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>0.13100000000000001</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.127</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.128</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.129</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.124</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.125</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.126</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.121</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.122</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.12300000000000001</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>0.11900000000000001</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>0.12</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>0.11699999999999999</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>0.11800000000000001</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>0.11599999999999999</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>0.113</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>0.114</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>0.11199999999999999</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>0.11</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>0.111</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.107</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.10800000000000001</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.109</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.10400000000000001</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.105</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.106</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10099999999999999</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10199999999999999</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10300000000000001</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>0.10000000000000001</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>0.096999999999999989</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>0.095000000000000001</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>0.096000000000000002</bucket>
            </map>
            <map to='#feb5a7'>
              <bucket>0.094</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>0.091999999999999998</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>0.093000000000000013</bucket>
            </map>
            <map to='#feb6a8'>
              <bucket>0.090999999999999998</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>0.08900000000000001</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>0.089999999999999997</bucket>
            </map>
            <map to='#feb7a9'>
              <bucket>0.088000000000000009</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>0.084000000000000005</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>0.085999999999999993</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.081000000000000003</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.08199999999999999</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.083000000000000004</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>0.080000000000000002</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>0.075999999999999998</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>0.076999999999999999</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>0.072000000000000008</bucket>
            </map>
            <map to='#febaad'>
              <bucket>0.070000000000000007</bucket>
            </map>
            <map to='#febaad'>
              <bucket>0.070999999999999994</bucket>
            </map>
            <map to='#febaae'>
              <bucket>0.069000000000000006</bucket>
            </map>
            <map to='#febbae'>
              <bucket>0.068000000000000005</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>0.062</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>0.065000000000000002</bucket>
            </map>
            <map to='#febcaf'>
              <bucket>0.060999999999999999</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>0.048000000000000001</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>0.055999999999999994</bucket>
            </map>
            <map to='#febdb0'>
              <bucket>0.040999999999999995</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>0.024</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>0.039</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:state:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI ? Low Threshold:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Persons in 2018:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_14:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI Btwn Thresholds (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_14:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI ? Low Threshold (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Persons in 2018 (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Food Insecurity Rate:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:High Threshold in state:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Children in 2018:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Low Threshold in state:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure children in HH w/ HH incomes below 185 FPL in 2018:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Cost Per Meal:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI &gt; High Threshold:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_18:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_15:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_15:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_16:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Cost Per Meal (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Weighted Annual Food Budget Shortfall:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:High Threshold in state (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:budget_shortfall_v_income_v_foodwaste.csv_6036727166674270970175101B2D77CD:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:FIPS:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI &gt; High Threshold (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Low Threshold in state (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:weighted_annual_dollars:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure children in HH w/ HH incomes above 185 FPL in 2018:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_17:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI Btwn Thresholds:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:FIPS (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Children in 2018 (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:count:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:num_food_ins_children:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='MMG2020_2018county.csv' id='MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE'>
            <properties context=''>
              <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='County, State' ordinal='2' />
                  <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
                  <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
                  <column datatype='real' name='Low Threshold in state' ordinal='5' />
                  <column datatype='string' name='Low Threshold Type' ordinal='6' />
                  <column datatype='real' name='High Threshold in state' ordinal='7' />
                  <column datatype='string' name='High Threshold Type' ordinal='8' />
                  <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
                  <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
                  <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
                  <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
                  <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
                  <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
                  <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
                  <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
                  <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='MMG2020_2018state.csv' id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B'>
            <properties context=''>
              <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018state.csv' table='[MMG2020_2018state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='State Name' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='real' name='2018 Food Insecurity Rate' ordinal='3' />
                  <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
                  <column datatype='real' name='Low Threshold in state' ordinal='5' />
                  <column datatype='string' name='Low Threshold Type' ordinal='6' />
                  <column datatype='real' name='High Threshold in state' ordinal='7' />
                  <column datatype='string' name='High Threshold Type' ordinal='8' />
                  <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
                  <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
                  <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
                  <column datatype='real' name='2018 Child Food Insecurity Rate' ordinal='12' />
                  <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
                  <column datatype='real' name='% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016' ordinal='14' />
                  <column datatype='real' name='% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016' ordinal='15' />
                  <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
                  <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='child_pop_state.csv' id='child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26'>
            <properties context=''>
              <relation connection='textscan.0xru2a60yw3aqc1054uze0qtbh6y' name='child_pop_state.csv' table='[child_pop_state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='integer' name='num_food_ins_children' ordinal='3' />
                  <column datatype='real' name='child_fi_rate' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='child_poverty_18.csv' id='child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD'>
            <properties context=''>
              <relation connection='textscan.1kd29ao0d5cczz0zwx9790l7a5o3' name='child_poverty_18.csv' table='[child_poverty_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='dataform' ordinal='2' />
                  <column datatype='real' name='amount' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='fi_rates_5yr.csv' id='fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF'>
            <properties context=''>
              <relation connection='textscan.0yr55cu1lrxejt19knwo01wvbphj' name='fi_rates_5yr.csv' table='[fi_rates_5yr#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state_name' ordinal='0' />
                  <column datatype='real' name='fi_18' ordinal='1' />
                  <column datatype='real' name='fi_17' ordinal='2' />
                  <column datatype='real' name='fi_16' ordinal='3' />
                  <column datatype='real' name='fi_15' ordinal='4' />
                  <column datatype='real' name='fi_14' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='financials_18.csv' id='financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7'>
            <properties context=''>
              <relation connection='textscan.187vbbv0393s1b14vpfnz0jrf6vh' name='financials_18.csv' table='[financials_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='weighted_annual_dollars' ordinal='1' />
                  <column datatype='real' name='dollars_waste' ordinal='2' />
                  <column datatype='integer' name='income' ordinal='3' />
                  <column datatype='real' name='perc_waste' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='food_banks_USA.csv1' id='food_banks_USA.csv_035C939829B942B3982DB29685463AAF'>
            <properties context=''>
              <relation connection='textscan.0hucxfp1l2de8313xbg701cg463q' name='food_banks_USA.csv' table='[food_banks_USA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Organization' ordinal='0' />
                  <column datatype='string' name='Address' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='zipcode' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[State (MMG2020_2018county.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[state]' />
              <expression op='[State]' />
            </expression>
            <first-end-point object-id='food_banks_USA.csv_035C939829B942B3982DB29685463AAF' />
            <second-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[location]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (child_poverty_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state_name]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (financials_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='top fi by state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='food banks by zipcode' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Ins Rate vs FB scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Food Insecure vs Food Banks by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <column-instance column='[Organization]' derivation='Count' name='[cnt:Organization:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[cnt:Organization:qk]' scope='rows' value='Count of Organizations' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26024796380090498' min='0.04' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#aa557f' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[cnt:Organization:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{1200DD49-90D8-45E8-B6E6-A7CC9EECB30B}' />
    </worksheet>
    <worksheet name='Ins Rate vs Food Waste'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Food Insecure vs % Food Waste ($)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Dollars Waste' datatype='real' name='[dollars_waste]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column caption='Perc Waste' datatype='real' name='[perc_waste]' role='measure' type='quantitative' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dollars_waste]' derivation='Sum' name='[sum:dollars_waste:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_waste]' derivation='Sum' name='[sum:perc_waste:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' scope='rows' value='% Food Waste (of total surplus, $)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' field-type='quantitative' max='80.0' min='40.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26022473919523104' min='0.04' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
              <tooltip column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#aa557f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{9F7CD80D-0BE2-4242-8368-C775907373CD}' />
    </worksheet>
    <worksheet name='Ins Rate vs Poverty scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run> %  Food Insecure vs % Poverty</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='% Children in Poverty' datatype='real' name='[amount]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[amount]' derivation='Sum' name='[sum:amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' field-type='quantitative' max='0.29619076005961253' min='0.04' minor-origin='0.0' minor-spacing='0.01' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26022473919523104' min='0.04' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#aa557f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{60CEDB3B-5693-438E-9948-72BA14C691BE}' />
    </worksheet>
    <worksheet name='child fi by county'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Insecurity by County&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[County, State - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='Attribute' name='[attr:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[County, State - Split 1]' derivation='None' name='[none:County, State - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='None' name='[none:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='32980932.846116945' min='25944795.987098519' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6809039.2989255087' min='2434423.5572522427' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' max='0.5' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 1:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#818b91'>State:&#9; </run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 1:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Food Insecure Children:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#900000' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C25343D1-58C8-48F8-A0BA-5B6DE8BCE1F2}' />
    </worksheet>
    <worksheet name='child fi by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Insecurity By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='33195792.193716966' min='24718777.892048955' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='7385966.1436161045' min='2253398.8906530533' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A3D116A5-9D70-40AC-B76E-7F699FB13844}' />
    </worksheet>
    <worksheet name='fb list'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Banks</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[Address]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Address]' derivation='None' name='[none:Address:nk]' pivot='key' type='nominal' />
            <column-instance column='[Organization]' derivation='None' name='[none:Organization:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]' value='164' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk] / ([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk] / [federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{1E62BA3D-C4F1-4E43-85A3-752375A24990}' />
    </worksheet>
    <worksheet name='food banks by zipcode'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Bank Density By Zipcode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='food_banks_USA.csv1' datatype='integer' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[Organization]' derivation='Attribute' name='[attr:Organization:nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='-7377970.4389837123' min='-14492106.458513372' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6421487.1674592439' min='2818072.920114683' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]' />
              <size column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' />
              <tooltip column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:Organization:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zipcode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Food Banks:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-transparency' value='165' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#499894' />
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DCF3D56C-8940-476A-9829-27C1E202AFE7}' />
    </worksheet>
    <worksheet name='states w least fb'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <_.fcp.ObjectModelTableType.false...column caption='food_banks_USA.csv1' datatype='integer' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;AK&quot;' function='range' level='[none:state:nk]' to='&quot;CT&quot;' />
                  <groupfilter from='&quot;DE&quot;' function='range' level='[none:state:nk]' to='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{AFE648FB-7BBB-4AB3-94FF-26A0C4178F4F}' />
    </worksheet>
    <worksheet name='timelines?'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column caption='Fi 14' datatype='real' name='[fi_14]' role='measure' type='quantitative' />
            <column caption='Fi 15' datatype='real' name='[fi_15]' role='measure' type='quantitative' />
            <column-instance column='[fi_14]' derivation='None' name='[none:fi_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fi_15]' derivation='None' name='[none:fi_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name1' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_14:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_15:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_14:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_15:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_name:nk]</rows>
        <cols>([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_14:qk] + [federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_15:qk])</cols>
      </table>
      <simple-id uuid='{A7684D39-29DA-4154-B409-6BF5ACCE1BCD}' />
    </worksheet>
    <worksheet name='top fi by county'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
            <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='None' name='[none:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State]' derivation='None' name='[none:County, State:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
            <format attr='color' id='refline0' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='National Average: 16.9%' label-type='custom' scope='per-pane' value='0.16880000000000001' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]</cols>
      </table>
      <simple-id uuid='{AF85BD61-4CCF-436E-A8B2-A377B00F6887}' />
    </worksheet>
    <worksheet name='top fi by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Food Insecurity Rates by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column caption='Child Fi Rate' datatype='real' name='[child_fi_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[child_fi_rate]' derivation='Sum' name='[sum:child_fi_rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([child_fi_rate])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:location:nk]' to='&quot;Pennsylvania&quot;' />
                  <groupfilter from='&quot;Rhode Island&quot;' function='range' level='[none:location:nk]' to='&quot;Texas&quot;' />
                  <groupfilter from='&quot;Utah&quot;' function='range' level='[none:location:nk]' to='&quot;Wyoming&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='National Average: 16.9%' label-type='custom' scope='per-pane' value='0.1688' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{E8999405-2CC4-4ADB-A338-5B70E234AEF1}' />
    </worksheet>
    <worksheet name='top waste percent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 States  % of Food Surplus Dollars that is Waste</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column-instance column='[state (financials_18.csv)]' derivation='None' name='[none:state (financials_18.csv):nk]' pivot='key' type='nominal' />
            <column caption='Perc Waste' datatype='real' name='[perc_waste]' role='measure' type='quantitative' />
            <column caption='State (Financials 18.Csv)' datatype='string' name='[state (financials_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[perc_waste]' derivation='Sum' name='[sum:perc_waste:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state (financials_18.csv):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([perc_waste])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:state (financials_18.csv):nk]' />
                  <groupfilter function='member' level='[none:state (financials_18.csv):nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state (financials_18.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state (financials_18.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state (financials_18.csv):nk]</cols>
      </table>
      <simple-id uuid='{5DB41AFF-4B20-4B33-8181-F9F4D3DEF43B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='23' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='21' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90625' id='7' param='horz' w='98400' x='800' y='8375'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='90625' id='5' w='98400' x='800' y='8375'>
                  <zone h='45313' id='3' name='food banks by zipcode' w='62301' x='36899' y='8375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45312' id='10' name='top fi by state' w='46334' x='52866' y='53688'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45313' id='19' name='fb list' w='36099' x='800' y='8375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45312' id='20' name='child fi by state' w='52066' x='800' y='53688'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7375' id='18' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='18'>Child Food Insecurity &amp; Food Bank Density (zip)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='25' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='24' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7375' id='18' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='18'>Child Food Insecurity &amp; Food Bank Density (zip)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='19' is-fixed='true' name='fb list' w='36099' x='800' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='3' is-fixed='true' name='food banks by zipcode' w='62301' x='36899' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='20' is-fixed='true' name='child fi by state' w='52066' x='800' y='53688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='10' is-fixed='true' name='top fi by state' w='46334' x='52866' y='53688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8AA7B39F-67E6-4005-A656-8AD2B7AAC6B1}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone h='32250' id='3' name='Ins Rate vs Poverty scatter' w='98400' x='800' y='31750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='35000' id='5' name='Ins Rate vs Food Waste' w='98400' x='800' y='64000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='30750' id='6' name='Ins Rate vs FB scatter' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='8' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='238' h='30750' id='6' is-fixed='true' name='Ins Rate vs FB scatter' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32250' id='3' is-fixed='true' name='Ins Rate vs Poverty scatter' w='98400' x='800' y='31750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='35000' id='5' is-fixed='true' name='Ins Rate vs Food Waste' w='98400' x='800' y='64000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{26421FBA-F050-4673-9D67-32F443987A8D}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Start With:</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='7' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4253' id='8' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94087' id='1' param='vert' removable='false' w='98426' x='787' y='5083'>
              <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='5083' />
              <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83610' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='15560'>
                <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Title' captured-sheet='' id='2' />
                    <story-point captured-sheet='Dashboard 1' id='1' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{02E45887-2571-4025-9741-AC61F81120B5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='fb list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;7649 Townsend Pl New Orleans LA 70126&quot;</value>
                <value>&quot;Catholic Charities&quot;</value>
                <value>70126</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:City:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDCE3678-04DF-43A1-A3E6-530CBDE4F0A1}' />
    </window>
    <window class='worksheet' name='food banks by zipcode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E860D492-D588-4C52-9C5E-3A8E05EECA51}' />
    </window>
    <window class='worksheet' name='child fi by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4E60F294-962B-40B8-B0DC-D4B8623FF426}' />
    </window>
    <window class='worksheet' name='child fi by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{40BFCF59-4F3F-4846-BB9F-68FC815DE18F}' />
    </window>
    <window class='worksheet' name='Ins Rate vs FB scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB0C3337-0138-488F-AA73-7E69BBBF590E}' />
    </window>
    <window class='worksheet' name='Ins Rate vs Poverty scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State (MMG2020_2018county.csv):nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F0A2AC7-4A4D-4B61-8525-6FC008CCE330}' />
    </window>
    <window class='worksheet' name='Ins Rate vs Food Waste'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E6B789-EA74-4A2F-88A6-F8D6009AC740}' />
    </window>
    <window class='worksheet' name='states w least fb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A74547B0-B596-429D-97F6-C85EAED72596}' />
    </window>
    <window class='worksheet' name='top fi by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0207828A-8135-45DE-B5F9-B29F4B0A2FBA}' />
    </window>
    <window class='worksheet' name='top fi by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CDC8D1E-1B47-4814-9BBB-7A5F7234F356}' />
    </window>
    <window class='worksheet' name='top waste percent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state (financials_18.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{690B760B-8E2F-4EA4-81EC-F91680A0BE29}' />
    </window>
    <window class='worksheet' name='timelines?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5583CC4-AB45-4B82-88FC-05B31D3BCB7C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='child fi by state'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='fb list' />
        <viewpoint name='food banks by zipcode'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='top fi by state'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3F5CD9C3-A6CA-4B9D-91D7-5E9271DCE6D1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Ins Rate vs FB scatter'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Ins Rate vs Food Waste'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ins Rate vs Poverty scatter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{ECBE5BEF-4AB0-4A0B-956B-9E342A997FE7}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{210C49CC-6562-408A-B09E-3E3F5B951D5A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      /w+m/O68pyAJywAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXBkx3ng+XuvXt13FQqFwn30faK72U02xVMUTUqiLE/ItjTWSh7JMZa9
      Hsk7Ia/tdezOUuONCUsarUeamLAljz06LFmyrfFK1EWRIkWy2c0+0A30CTTQuIECqgp138d7
      +we6io1GFVDoBvog3i8CgapXX32Z71V+mV9mfpkpKIqioKKySRHvdgZUVO4mqgGobGpUA1DZ
      1KgGoLKpUQ1AZVOzxACmRq9yeXgMpZhlYnru+tUib7z6Cn19AxRXUXb50gUAksFJgsnVpNeP
      syffpK+vj1gqv6LcpQuXASgmg7zy+gneeus0+VL1QbB8eIIhf3JFPctQSgz0neLUqTPkZIjF
      Y8tEql1TuXtonn/++efLbwYHRyjmU0RD86RlLU0eF5BndDzAww8fRsmnOH36HKlcCbNU4uzA
      RQqyBp2S4dz5K8wGQmzb0kN44iILmiZmBvuYnJjE6PIyeqWf2VCcBquO02f7KQo6yMY4f3kQ
      k15DMAWxwAwaMgxNzKEIEuNXL+IPJ2nyuJmZGMdgdzA9OUEmHmZo+BoWhwe9VsPg0DAPv+td
      GLRw7sxp5iMpvG4bZ06fJpLK4bbpOX3mHNcmZtm1cxv58AQBoZldzhSDMRPRqUuMzYRodup4
      /dQF/HMBmiwyM1kz6dA0hUycK8MjmG1uDDqJU2++TjgSw+F2MDUTxiykCKQ1GHMzXAnpefTw
      buIhPy/8+Md4mjuYGRvk2sQ8ZgP8fz/6CQ3eVuYnRxidDtDs8yLcvd9/07OkBbCaJZKxGEMT
      8/gsBc6PhQGYHhum79wFTp05S+/hIwT8U/T1X+HIkSPMjI/Qd36QI0cewG0zLVGezpY4cqCb
      ocEZAoF5RFHk+LE3UDQSJ0++xYWr1zhy+DBOKcNUMMnU+DjJqJ+FnA5bfpr+sQiXT58kUQK3
      TaT/4hgzMzMEg0GKJRlJWsx+JOCnr6+Pq31vYevuxZIL8MobZ+juPUwu4OeN0330PnCElkZ3
      JW/Dg+c5cWGKNreeYlHGf/k8wXgUjb0NbTFLFnjz5ReQ7I2EgkFKhRKSpAHA7W3hwQcPMDBw
      hfGRy5wdGMLtMCI5u+iy53jp5y8hOZrYunUrzR4HxWKJyFg/ce3itVa3yPGTVwhf62cklNvI
      31dlFZYYwK59B9GbLBzY2cXQ8CR2qwGA1q6tHDqwl9ZGF6dOniJTUPA4jJw8dYqSqMOqh1On
      zxJJpJcoF4Syehm328PI4BDe9nYoyezbtw+rXuL0mTNECxL+4fNcm5gBoNHrRW/z0mDRsm33
      PgwaMDjbWRh6HU/nHpwuJxo5yeDwLADORh+HDh2itbudkf5TXAtm2NXVSP+pkwQzBVqdVk6e
      PIU/GLkxdzjsRoJzM4yMB9HrJGQZBEFAuF4nH33iPQydP4vN5UIj5LgyNA5AJDjLybdO4PF1
      ssVnYzYjohchn4oSimXQCkWyBYVIYA5/0M+1kRn0hkX98dA8MwtZWnwOGrp20WyV1vknVVkL
      gjoTfHucPfZznFsfpstrudtZUbkFVANQ2dSow6Aqm5p1MYC1NCL1yt5Nner9vDPSrke2pgHI
      skw2m60rEVmW685QqVRaV7mN0Hk3094InZs17XpkaxpA34k3+Lu//jvStQRU3hHMnBlk9szg
      3c7GXaOmAXg8HvYcPIj2TuZG5Y6S8C9w/Avf5c0vfJeEf+FuZ+euUHMQOpVOodOpxf+djNFh
      wdHlW3zttFauX/mfr5NLZNj/sacRxHf2OElNA9BKWqKREJUuhKIQicZw2MzMzodpcJiIZWUa
      XfY7k1OVdUcy6nn6859adv3qj06QT2boerIXe7v3LuTszlHTAMwWMyZrDs3193IxTySeJJWI
      IZRkRuczGFCQHVZkWa67Zy7LMsXi6oFy9cpthM67mfZG6Fxr2t3vPUI+kcbkc9X83t2471ws
      xeypQZoe2LakxbodnTUMIM/c7AL5dJYioAEUucT87BTeRg/RaBKrw0QiKyOKIoqioNFoqqu6
      iWKxiCStPv1fr9xG6LybaW+EzrWmvfc3nrxraa8k2/ftl5k8doHmwQne9e9/c1101vhE4OrV
      q7iaWiuRihq9iaNHj9aVqIrKRuDZ3cXcwAiNu7vWTWcNA9DywJGdnO6bXbeEVO4PouNz5KNJ
      mh/Ycbezsozupw7S/dTBul2qeqjZxU9nwSwVKKxbUir3Aye++L1NNSxa0wD0Wh2iwqqrwFQ2
      lsiYn9GX+5CL9c9+3g7e/T04unx1dzLvd2p2gosFBXtrK6bqAip3iGN/8R2ykQQI0P3UoQ1P
      7+DvPld3p/WdQI0WQIcoFtWJsHuApt4tGFxWnN3NG6J/s4dC1DR1k9lEPJu5k3lRqcLh3/9g
      5XVkzE/k2iydT/QiSvUNOwOgKPR/40WAJbO75VAIgGe//GmsPndNFe9UahpAJDzLyV+Osu+h
      Q2o80D3CrbpDydkFhn98AmDJ7G6tUIh7mciYn2N/8R2aercsqRxulZoG4HK3YHaPkYwmMTnU
      5X73Ak29W5gbGFmzO2RpdrP1/UcRAFurp3K9VihEvYz+4iwXvv0S+z76NF1PHbxlPWshcm2W
      bCTB3MDI4vvbNIiaBhBeiODztjI8PETj4Y3vfN2vRMfniI/Pr90tuQVuucYTBHp/+5l1y4ci
      y8SnggQujJJPZghcGqvbABRZZuBbLwHcUrBd5xO9yIqMe0srsNwg1kpNAzDqBCSzlSMP1Hdj
      r776KqIoIkkSGo0GrVaLRqNBkiQkSap8Jooier1+yWc3v76fOPHF793RUZp7gbP//ceMvtxH
      y5GdPP5//5slrUoZ/7lhzvz1D7F3NPLYn32scj0VjFbcsS3PHsbida0pbVHS0PnkgcpIVecT
      vVh8boyuW3PhqhqAUsoRjGWwOz1ohaXbNoWmJ5jPlDBpiiQyMvt2L84YPvnkk5RKJUqlEsVi
      sfL/xr9SqUQ2myWXy1EoFJbJFgqFSmCdoiiVOCPheh4EQai8l2W5YmiiKKLT6ZYY0o2GVf4v
      CAJ6vX7JNfE2w313/vrjLFyZoPnQ9tvScz/h7GlB99ZlfAe30ri7s6qMUiqRjSTQ3bRXlMXr
      4l1//JHK69tBLpYY/2U/zp7mW+7AV90VYn7wHFHnFmJD/ex77FEMN3wWWwhw9eo41qZG9Ch0
      dHRQKpUqhXTVTMtyXYWuHrmy4eTzi1si3mhMpVKJQqGwzMDKRlq+Vja2Gx9DOe2ywZW52bjK
      f1qtdslnKxnfnX5Ga5Fbb53p+QiS1YjOZFhR7lbTHn/lHOf++48xOC2897/9b7eks2oL4N3R
      y8LAOZzt3dycdbPFSmNbG00uC/G7HA0qSRJ6vb5Sq29k2oqiLGvNisUiudzizm7l99lsdonB
      lWXz+TyyLC8xqhtbtxvfy7K8xJDK7uTNRlXNnSy7muXvrOW+b/cZ3YytxXPLaWejSaZOXKLt
      6G4MNw3ClOXcW1sxOK009W6pmcZq6VdtAcKT1/jh6yfpbu/i6GNHVx0GLZVKajj0OusURfFt
      o0qkSISiGD32Ze6kIAhVDbOaOwksa9XKiKKIVqtd4iaW3csbWzZBVihlCpjcNnQ63dLPqngB
      te67Wmf4RtmTX/k+k8cu0P7IXh78zIdu61muORza1d7DY4ezTAYS3F9d0nufG/1W5/Ux+GqI
      olgplMee/ybRMT/v+uOPLInSXO3HLadl6/DSsLV1xXyVjSeXy/HmF79LMhTl6J98BEGrWdLa
      vfafvkXMH2Lnh5/A1tbI5ImLeA9uRbIYKsZ2c1+t7E7C2y5JdiFB3zd/gEYUSTRKOFobK/cr
      SRJZu0RcyaE0mllYWFjS8gHrFq5RU0uhkCefTFEA6vNcVeph/Jf99H3tBQwuKx/468+u6bun
      /+qHPPZ/2lc0nGpp6R0WfvVrf7Si7I0uVzGQgEgau968rHM54W0lmtawd+dupt64gO7iAlZH
      Mw9+5tmqeqsZqSzLFAtFXDEBWZHZ/uABiteNDxY9itZH9tD00A6KxSIzMzOLrVo+T3hiDmOj
      HW5yJYFlgyXltMqt2Y19t0rLVeuBdGzZSdeWFSxE5ZZw9jQv+q37t9T9nSc/9wl++pmvkI0m
      iYzO1m0A5bQa961tAckDv/+rKMVS1ZGVJz/3CdILca7+6DizZ4YQJQ2Ne9amXxRFdHodRz75
      3JLrq7Vo/d94keSP+2l89jCHPvn+utIqFosIglAZFLl55LFGagX+5bv/iKuplSeffTe6um9N
      ZTWcXT4+8NW11fySQccj/8dHiYzO0vl475rTWusCEl/v1hXzMvpyH2O/OAvAlmeO0PXu9Z8F
      VmSZ+HQQW6vntnemKNf6Ot3yklxzRdj+3l3Es4J6eMM9grPLV7PmvxshCQBdTx1i38ee3hDd
      A996ieEfn2Dr+49WZrH3f+xpup7sxeRzkfAvYHRYkIy356DXNC2TWV0JcDdQZJnz3/o5/d94
      EaXOLSeDl8YqIQl3gv0fe5qnPv8pDv3b91dq52w0yfBPT5KNVj9W6la5sQIWRBF7u5dA/zV+
      9of/lVef//pt66+9LYrZwtzZQfJqNOgdJT4d5NpPTwHUvS/P/o8/g2tbK20P7V6XPGQiCaB6
      hGgxkyMTTWJrW+qaDHzzRSaPXSB0ZQLvvp5VR7mqcWNcVbm2rxZmcSuM/uIswUtj7P/4M0vm
      FWq2AMloiGBBUVeEXaeYyfHSn3yVl/7kqxSzKx/GdzvYWj10P3sYQSMy9srZuloBg8PC1mcf
      XDZhdKu89rmv89PPfKViCDfy6vNf52d/+F+ZPTO05Lpndxc6q5FMOEHf117g2Oe/s+Z0T3zx
      e/R97QXGX+uv1PbV/H/vgS08++VP8+TnPgEsDveOvtxHZMxfU/eFb7/E5LELTL11acn1mgYQ
      iqZosZmob3/odz6ZaJLomJ/omL9qwVgvBFGk88kDKCWZ4Z+cJD4d3LC01pPupw7ywb/9Ew78
      zvvWNMp1+q9+wAuf+hKRMT/e/T2rrn6LjPn56R98mQt//1Jl4X55uHclo9v70adpf2Tvslay
      6kxwbGaCoruZhZEROvfsrDoK5J+eIJYpsWNr96aZCS4vHVzLZNRa5QAKhQKXvvMKArBvhZDh
      jXqWhcTiSsCqLlA2TyaSwOixr0vaL3zqS2QjCQ596gO0P75/VZ2jL/fR97UXACpzKSutCbil
      UIhcbJ5jZ4eQFYGn3v1o1WZianoaFIWWlpbKGKtGo6nsx17r9Y2TFCvJ5/P5yvDVajpvZD10
      lkoldDrdquneLzrrfT4367wTeQyPzhKfmKf90X0U5dKqOgu5PJOvDnDtJydp3NfF3k88e1v5
      vOUzwiKheWJZmc5W36ZpAe5XnZs17Xpk1+WQvFgsRqRU34xBLp1Eb1q9s1av3EbovJtpb4TO
      zZp2PbLrEukwMjLCL7P1TUjMDw/i3br6tnv1ym2EzruZ9kbo3Kxp1yO7Li3AVCzFP168M5Mw
      Kirrieb5559//naVxHMFLgWiNT6VmR88j9bippSOEvYHKKYiyCUFWdQiSW93sWMzY5QUCa1W
      YW5oCEFUyKRyoJSQdG+3MNlYiMDICMYGL6nAFJlUjrh/ElFnQNLrl8wehieGKZREdHphRZ2J
      +SnSySxGi4WFsUHkUoloKIJGI94gJ7MwMY7RrGfu6gjmBg/ZaIBYKEI24kcRtAg6PaIgkPRf
      Q9a7iE2PYnI4kXNJ5q6NgZyjUCgiFxUknZZSLkUsFIZCmvDcPBank9jsGPlsnqh/DkknVdJf
      1OkgOjaIIhmQKFTVmY0tkM3kkTQlIoEoRquJ0MglikWFVDyJIMjXdS7ej8miY3ZoBKPLQy4W
      IJNKE531V0nbRXz6KmjNaJTsimmnQzMkognMDvuKaesNWgLXRtA7GsjHglWfZVlnZmGWfF5B
      bzJU1VnMJAiMXkMQIRZYwOyw13yWsZkxspnCHTgnWM6QS5dQZIVMIo1Oq6FYyBOemiAZCiwR
      jc3PUsznSM8HcW9tITIdJr0wzcLULDc2UwZ7A0aHA0mEUhGUYoZSJklkZoJkeKkh5pJxcqnk
      qjoL2QzxeT+QR6Nzkg7NkU9GiUyNksuWg8lEJIOeRCBMY6eLWCRHNpNDI8qUChnCU5MkQyEA
      LFYjuTxIBiMA8YUIjU1mIpEs8ZkJosHF8X2N3owoyBisdiRpcc5dRqKUXiCXThOZniCdSN2g
      U0Rr0JLPZGvqNNjdlPJpYoEQSjEDhTAaexfJwCTZWIjwxBhF+e37KabiFJXFsOJsJkcpFayR
      dpq4P0KpkFs1bbuvGUlvWj3tdIJCLkmhINd8lmWdhWyWeMBfU6fGYMFo1pNK5ij3e2s9S6PD
      hSCKG28ASkmD3mokF48gSiKpZBqnrxWzu4FiYemMqtnpppjPojFoCQ6O49mxDVujFzmXXVJY
      lVIWyWQjn0mjFLOUZBFnezdGq3WZTlGSEDXCqjr1Zismh5N8pkAu4Uff0IbT14xWp6GYL++R
      XSThn0GhxNw1P1ptCUlQyGXyOJo7MTvtlK6vT44FQ2TCfpLz0yRDASSdjrmpBXw97Vhdbor5
      xdj3YjpOzD9DYGyUYrFAPpNGziZRtA7crS0YTAaKN+oMTZPLFhHkfE2d6YW564U/RyaRIl/Q
      kg0MY23djr3Rh4Y8i6OAi/eTyijoNUXS8SSSoKDoXNXTDscxucwUM8lV005F4ti9nlXTTibS
      aPV68qlkzWdZ1qkzWzDanTV1ZkMzJJN5tBqZbDq34rMMT4yiyEW1D6CyuXlnHwGoorIKqgGo
      bGpUA3iHUMrEmBsdJx0NA4ujHNHADIlghFI2SdQ/hwwkgvNVv58OzjI3NrrseiI4t6hvfuaW
      8iUXiwTPna37FNE7jbrk9x2CnMuQCgcoxIMI260kwlFa927h6itvYXbayStG8tkY0ZkAcf84
      AiLRSBqHy4ygt6MrpiiZHASGzoNGRzYRR2O0kgzOs93TRGx6kPD4OJLejKI3UlwYRTK7EbRW
      TC4zIhCfnUAQBAqCmZ6DByikksyfOomg1ZGLxTA4HHf7MS1DNYB3CFpHE542hWx4hkImh06n
      IRqI4O7uIRuYRWtvADmH3mLBYLchKEU8Di+ivDjEq9XZsHZ2Eh06X9GplGT0lsWIUIPFikbf
      QD5bJBEOYLF7MDmdJKJ5CskYiqDD3NiCnE1itS0u4lFkBaO3CZPPd08WflBnglU2OWofQGVT
      sz7RoNn8CqEQKir3LutiACoq9yuqC6SyqVENQGVToxqAyqZmQwwgFotvhFoVlXVnmQGcfusN
      fvryL0kuzNA/OL7ks3/69rfo6+sjkVl5s9XLFy8vvsjO8eqbl9cts6vx2i9+xusnTjMxNMB0
      KFnJw999/X9y7JWfcs1fv2FeuHxpdSGV+55lM8EFWcRplhg4f4GS1oQ/3IjPtXR/uFxsluPH
      JyCfYcf2Dsb8EbKZLHs6PYwGEgQCC0vkf/bTF2hs9JKR9WRCk9i9HWxrsXLyyiyCLNPVZCWY
      yNPZ3cbEyCxeXRR6DnHsn37GI88+xuilfgQB9j/6DMbUOJcCOpToBJJOJKdo6d6yHa/LhtZk
      hWKSS8MpLPMpPI88jB7o2rqDbc0FxmfHuXoxjFTM4vXYcW45yMTFU1gNWrIyaAwO5kb6ad6y
      n2tXzpHPyaQi8xx5/CneeuN1nnji8Q39MVTuPMtagIP7dlHIZyiWzBw4eoDpaxOVzxqaWjl0
      6BD5kJ8tvUfoaTRycTzI4QcfxG6QGJ0LcfToQ7Q0Lt1X3ups4OChI1BKs3v3LuKBKYaGphD0
      OjRaDYGFBEeOHMHncaKgUF6psmXXPrra7ATm41htFjKZLCZPD/noBCWNxJ7dexDlElNTi4Fa
      27s7yRY12F0edjZp8ccXtxUcGx4kJrjZ4szTvuswO9vs2Hp6mTj3OpLRjX9+HkmjRRIU3L42
      Du7bSXN7NwcP7OXog/v52T//Aw3d+zbqN1C5iyxbEyzpjCCI7NndzdnTF9h7sBed5u1Vtk6n
      E6vHx8SlsxSNbh45tJP+vrPYPc3s29bJmb4BtAYzLb7rm7qKOhx2E3abHYBkLIqsMXHwoUPE
      5vyYrE56d/Vwrv8Cot5GNh4gminS2tGFUZKw2R0YdDJ5RUNzcwt6rYhYTOJu3k4hEyGRSNPU
      0obNYsRo1KPRmmn32hkO5djd1YQAOBqa6enwYXT6mBvuJ6mxs7PDRzIaYfu+ffjcNhYiCdye
      Jpw2Mza7HZdJ4tyVcdo6uhgcHuaxhw6qW8W/A1EnwlYhEpglnIWe9tr7Varcv6gGoLKpUecB
      VDY1G2IAcp0nm1TbvPV25DZCp5rH+1tuNdl1NwBFUeo2gHq9r7V4aeutU83j/S23mqzqAqls
      amoawK32jQVBqBxYrKJyr1PTAALTY3zvH/+Zydm1HdGjKMo9uwOAisrN1FwUHwgs8PCRo5gs
      t3cOq4rKvUK10y9rtAAFxsenGJ2ZwWmzrSkR1QVSuRfJRBL89DNfWXb6ZQ0D0NLsdQAi9Q82
      LaK6QCr3EzVdIEeDjYWRDCVQD8pWWZGVDtbeCBL+BbRWI5lEDKPDgmRc3U03Oq289yufqbwu
      U9MATGYbGTlW9YjUlVBdoM1FNprk5//+vwHw3q98ZsONYObMIMe/8F10VhP5RBpHl4+nP/+p
      ur5bLW81R4FEJFKJBQq1BGqgukAqayE0NMXxL32P0NBUXfLrXbXWbAHikRCu1g7UMSCVlTA4
      LFVdi3q5+qPjzJy8AkDD9g+vKt/8wA6e/fKn0VqNFBKZ225xahpANJlDjiXJAMY1KFRdoM3H
      7RTCbc89vOR/PVh9borFIgaLaXXh68iyTDKZJBKJEI/HicViFAqF6gaQCs2wkEyy7cCRSuEv
      ZFNcG5ukobGRcCzFtu52/NMTCHoz0YUILS1NWK1W1QXaZCiKQv83XgRg/8eeRhDXFl3TsL2t
      rpq/TDaaZOCbL1LM5Wk+uB3foW0MfPNFSvkCvgPbaH5kN9FotPKXTqeRZRmNRoPVasVms9HU
      1MSOHTvQarXVDSARiSMZtJw/1UdH26+gBSS9CafVyEI0hUUnIAMlNCiZCJlUismpSZqaO3BY
      jSiKQrG48sJ5WLTK9ZTbCJ2bJY/Z6OImAgaHZU06Y5PzDP/4BADtj+3D1uZZ8nkxmycbSWDy
      OtflXiaPX2D8jQEyhTyXTw/gfXw3/f/yCiVFRvvKqzym/SgOhwOHw4HX68VisSDLMmIVwywW
      i9UNoGnrTrw92ymWShWBdHiO2WiGBruFcDKDM52mkE0hGmx0drpIpmLk83k0msUHqNFoVr3Z
      eo+8r1duI3RuhjxmIollIzn16rS3e9n6/qMIgLPDu6wFePXP/5bomJ+jf/SbtB7ZtaY8ZjIZ
      otEosViMSCRCJpOhIGeZsxbITUXw2Js48tyTNBQNUCjhO7iNrscO1n3fsEIfoO+tYxRFM4ce
      OoQWMLt9HHD7AGi7LtO1ZXtF3uleXAivukDvDBRF4eRXvk/j7i66nlpeqMoIgkDvbz+zZv2h
      oSmu/ug4W973IKlshv4XXsP9wBaKBhFFURBFEaPRiM1mw+l00tHRgdG46JDvbermzS98F0eT
      j6aOVpr+8DdQZJmBb71E/zdeXJMrVsMA8iTDMc4NX2H/dQNQeedSbZJoYXCSyWMXmBsYWdEA
      VuPJz32CdDiOYNUzMzNDLBYjGo1y9u9fJHh5nP6xQcw6I8mhWcwaPU/87x9Fp1t59qn5gR08
      /f/+r1ga3j50Iz4drLhiXU/2Ym/31pW/Ggag44nnPsATdalYijoKdH9y40hOJpLg+Of/AQCd
      uf4xwEKhQCwWqxTyZDJZWY1lMBhwu9243W66urrY5m7j6o+OV0Z/yq+r+erVsDS5lrg1tlZP
      xRWztXpqf/EmarpAI1ev0tzaitFkWtPkg+oCbTxjr55j4rUBOh7fT9eTB9Zdv0anxdLsJh2M
      4d7eVrmey+WIRqMsBEOc/MaPSafT6HU6Dn/svRgtZgRBYPgfXyc2GeDo7/0rDjx6oFKgb/bD
      jTeN/pRf1zuQcDOCKN6SK1bTAHRKhp+/coL3P/eU6gLdYwQujBK8PI7RZV13A1AUhbxSZMe/
      ez/hcJhEIsErr7wCgE6nw+l0oi0oSNeiNEo6IE+3rx2rb7EPODj5Q6RIDjmcqrs2r0U2mmTq
      xCXaju6ujE6tNzUNIBSbZ+rSFMXn1GC4e439H38G17ZW2h7afcs6CoVCZVIoEolUxssBTCYT
      VquV9vZ2rFYrWu3yEmD5s4+TCkQxNtgrhR/gkT/9LSKjs3Q+3nvLeSsz8M0XmTx2gfDwNA9+
      5kO3ra8aNQ2gwd3Bh//tQxjWqFDtA9RHMZPj1ee/Dix2FCXD6mGHo784y4VvvwTAvo8+vWqt
      qCgKyWSSqSvX+OVf/gOix0Jkah5nRxO7P/R4Zbx8x44dmM3mJTX2SkOHxUyOS//0GqlABHOj
      g6Z9PZX8O7t8OLt89TyCqkz8sp+L3/kF+z76NJ7dXcwNjNC4p2uZXHxinje/8F2aerdw+Pc/
      eMvpVb3DTHyBgYEBJv1v8sk/+OSaQiHUPkB9ZKJJomP+xdeRxJJatBbBS2PkkxkAApfGKqMz
      +XyehYWFSuczlUpVJn+sViuJwWn0aRnzbAG3tgFD1sijjz66RPfMmUEEFkdY1pL36Nhc1fxH
      xvxErs3S+UQvorT6nFCZ0OUJ8skMgUtjPPiZD9FdYwQqOjZHNpJgbmCkbt3VqGoARpub1tZW
      RCmm7oe5QVh9bt71xx+pvF4NWZbp/OBDJHQlotEo8S5TxTfXaDQ0NDTgcDjw+XxYrUtjc+Te
      A3Q0t2FpbSA5HcLZs3Sbx4R/geNf+C4Az37506vmp5z3ai5QmWN/8R2ykQQI0P3UoVXvr8ye
      j76nLveu7dG9AMvuZa1UNYB0NEgiW0AyGKnfdhfZrC7QrTTJ1WrbG2c/FxYWuJcBI9sAAB9K
      SURBVPzCMUJXJjE6LMjRDI9/5sMc6H0Km81W8c1Xm7UVJQ3d7zlEsVikcUfHss+NDguO625L
      eTi0mM3z089+ueb9ND+wg2Imxyv/4e+48v3Xl7lxTb1bmBsYwdm9tgKqt5vZ+uyDwNsu376P
      Pr1sLkLQiHS/p37DqkXVp2Zy2HFZ7ITJrlnhZnWB1tIky7JMJBKpBGzF43GKxeKy2c/m5mbC
      33wLh94DGUBvxMnieHo1yrOr2557mIYbhi9XQzLqly0qyUYSq95PJpokNjG/+PomN+h2/PIy
      ZZfvRndvvak5EabRlNDp1PGfWiT8C0uW493cJCuKQiaTqYy0RKNRstlspXJwOp3Y7XY6Ozux
      2WxVY6eyyTS9v/0MhUwOe7uX2OT8iqMra42tXwmLz82h3/3Aii6G1efmoc/+JhqNWJcbt1bW
      Y7RrNaq7QGE/Y3MRjLq3x4BKuQyD4zM4jRpmw0kO9e7l6uXzCFoN01NxduzqormpaVO4QOVl
      eY4uH0/8P58kkUgQCoVIOGFq8iqlscVCaDabsdvtOJ1OOjs7K7Es9QaavfEfv0l0fI53/fFH
      cG9txb21dUX5W4mtX4l6XAzfoW11BwGuFYPDUnGHNooa6wECbOl9kNjVgcqieI3eiMtmppDP
      47ZbUAC92YYiK3S1S4QC8+TyMu0tXmRZrssNul9CjQuFAqlUqlKTD58Z4GJgDJs2iXTsGA6H
      A5vNVqnNa1UA5fTqTbv8BGV55fDysj5Hj48jf/ihJWlVk6uHezFk+1bkVpOtcT6AwuDFfrQ2
      b+VgiEI2yejEDL7mZlLpHHarqRIOrdNAPpNENNgx6TWUSqX7MtT45smhVCq1uGpIkjCbzTgc
      DpxOJzabjXw4idFprXT8NiKP2WSaQiKzqntxrz3He0luNdnq8wCJKGa9gZPnLtLW3owO0Bos
      bN++GP5sKw+zmd5ekqbXv716+F52gcqTQwsLCyQSCWKxxXUMgiAgSdKSySGLxVLTmPW+jV8t
      LRl0a1r2p7J2qhqAVtLQPzSKy+FYcxjEvTIKVA7cKg8pplKpSpy51WrFbDYvWRqnsjmpagDZ
      ZAq7s5EHj/Qiw5rnAu4UsixXFjhHIhESiQS5XA5RFCuBWw6Hg+bm5mWTQ2tpQlXeuVQtARaP
      j8c8txbPsRGjQNlstuKuRCIRstlsJQ2r1YrD4agEbpVdGRWVelj3knKrLlCpVKp0PmOx2JLJ
      oXJt7nQ6aW9vx2Sq7Rffajy5yubkjlaVN08OhUIhCoXFvec0Gg12u73q5JDqrqhsFOteqgRB
      QJZlFhYWKp3QG5fGlYcTXS4XbW1tWCwbs9BBRaUe1v2c4PKeQPWsBqq1X8utym2ETjWP97fc
      arIb0gJoNJq6MicIwrrKbYRONY/3t9xqsupJ8Sqbmjves7w4cBZvWw8WIcfg5DQIRvSSgqep
      BY/LXpEbv3YVjdFBW3MD58+dQyMIxNHT1dRAU9Pbe74koiHOX7zK4YcfZnL4MnlBS2x6Cu+O
      XXQ1N1UW9MjZMKfOj9LWuRUhG2Y2nMSqLVESDHR0b8FsePtRDJw9hdXdjM+mq5nHRDRMKJ6m
      kIoiSyZ29Pg4d24QGQWt0UBjQyNNjQ0UsilGJudo87oIRJN0d7QxdPk8giAzESyyd1srTU1N
      gMz5C5fZubWLq1cu4d12iHRgjHAyj5gLIdk62dLThk4jEBw7T9Gzh9TUJQRTAy6jwuT0LIre
      jE5QaG7rxGE1VfJoNwhMhTLs39GyYh7NOoUCeno6F/OYzBSrytkNIllFR3dHy4r3sq2rjfPn
      L7D1wFEScyvdyy5mL53B1dyBQ7/yvaSjQSSTg+3dTVXvJZdOMHT5Mhq7h1wmw8F9u2vkscTI
      4BCa559//vkNL/U3kIhFiGfyWCQBo8OCKJpBzHFtcIL27vbKgQX+mSkiiRTNvgYyWRmtQYdO
      UIhF5pAlB1bzYgyO3mBAEERcDhuJZBpJFLA7bcSjUZLpHC7nYoEtZlMsJLKYTWZKxQIGvRaX
      y0EkHCcUT+BrbKjkUSnmiMQz2PSamnnUG4xkMykQJDQiOG16srIRg05EQUN4ahCjtxuzQUex
      kMPd4CGbSWO1WkmmM4gaPU6zRCQWJVsAh82KrJQw6bTktVZ8LgvReAK9VsLpcBJLxIgnUnjc
      LsxamaRsQijl0EgSlIo4LAYEsxMxHWF4Nkpni7eSx3m/n3SuSKvXvmIe9ZLEtD9Aa4uPZDqD
      QaerKpdOxAmGYzS3+EitcC9OVwMyAl63Y5V70ZOKRtCbzIjyyvdiM5uYX4jS0mirei9aOQdG
      O5JcRK+TcDqdNZ63mXgie+dbAKvNRqOjAY2iUAyH6epoJJ9zYrc4l8w492zpIZwskE7nMRsl
      bA2tUCqQjEexu81vF9ZSEU9TM+l0GrfTSlE0YNRp8OQzFMS3w7m1FjcNtgQuqwGN00w4msRu
      s2Ld6yYSTS3NpCCxY0c7pXyhZh6joXniqRzNbguyZCGdlzFKRRpauykV8sQcVhx6yKUTxGNx
      BATiyQzWdBqn1VwJIsylE2jNTqBEOhYnKEMmESdkNNDsdRNOFnFYjbjcDSRyi97qbCRHSRNC
      KZVobLSjiBLh0AKdjXbyLgfWSGRJHvf2HiKbza6aR09jI21tbaSv59HsaKgq19LWiSGWJLvK
      vYQMZjyeRtLp9Cr3EsPb6MLZ4Fj1XlxmLTt37CCdL1a/lyIkowu0tLaQTOcr97Isj7JMIZ9V
      +wAqm5vb27lIReU+RzUAlTtCOBIjmUrf7WwsQ40veIfRf+YEkVia9q276Gky88MX38RrECg0
      9dBq0zIzO8eWdh/nLl1j15YudCYJUWchMjuLr2cbZ157iZZte9DLGZp8TcyEkth0MqfPD/Hw
      Nifn4w14jHl8LiuJgoZcLERLRweTMwGam9zI+TThtIJUSGJvasdm1DEfXOCNt/q4OjLOH37q
      Y5hNa9lpamNR+wDvMNLxMOcunWfo3DT/+t88zfGBIG3CAvM5DQuygMegoZjPoREKpDIa0jE/
      rVvbyMUVNFIDmcQ47du78U9GGJxP0OPVIykgSgJ7Wsy8cHyejlY7kl2PGA9yaSyOUa/luV97
      jqsXz5GeH6bU+ij+gZfZe+QJ9u7o4cLlq/zN33+f//DZ36PB7bzbj2gJqgG801BkkqkM4YUQ
      7R0dzExcQ9RaMJsN5GXQigKpWAj0ViwGA/l0lAwSdpMJkFAoYbfbGB8ZqrQAZrFAUWumyW4g
      FC9gNEik0zFKgpFMxE9jcztzwQhaijicVrQmN9G5MQwOHx6nhblACFEUaWxw3e2nswzVAFQ2
      NWonWGVToxqAyqZGNQCVTY1qACqbGtUAVDY1qgGobGqWGMDU6FUuD4+hFLNMTM9dv1rkjVdf
      oa9vgNX2W7h86QIAyeAkweSd2p1B4WL/KWbmI4RmJ0nm5UoeXj9xmktDo6t8P8nlCxMAjI2P
      g5zlxFtnARifmKj6jUwixvVkbspKgddee5NocJbvf/9fGBmf4fypNwln1J0q7lWWhELMzkcQ
      Jbh8IUDR0MDiUQpFiug5dGg/pXyKk2cv4vA00e6xcH7wGo2+dhqtGi5enSAUibBr916SwSnC
      rkZmBvvIF0ps2fcA/pELFDRm9vQ003f+Ct7WLhzaIlcnZtja1UZCsUAyiMuhZ2w+hcfTSGhq
      mJLOxv5d25iZGMfT3ol/cgKdUGImEGbbrv3YCJIUmshMXCWbStApGLH4PCSDUzR0HWJXk4GF
      uSmuTfpp79kJ6RCT/gA9O/eRDk4RjM6RyiyuBZgYH8eSDzM0H+FwYhp/RKaYuchCLMOBBw5w
      4cwZzG4f4SunSDV088iBXVwYOI/L28qWzhZGB87Quf8BBvpeZ8u2HfR0NCO0uXjtxFkef+TI
      nf91VVZlSQtgNUskYzGGJubxWQqcHwsDMD02TN+5C5w6c5bew0cI+Kfo67/CkSNHmBkfoe/8
      IEeOPIDbtnS/nnS2xJED3QwNzhAIzCOKIsePvYGikTh58i0uXL3GkcOHcUoZpoJJpsbHSUb9
      LOR02PLT9I9FuHz6JIkSuG0i/RfHmJmZIRgMUizJSJIIRg9KfJyF4AIZQc/MxDXKlfPghXNc
      GRnnysgYR44cYeRKPyNjMxw5coQr/WcZm5nn4MF9le0fdYLAlVCWxzstvHL6Gjt2dVIqFilE
      xrg0Nsd8OIkoafA1t7L3wCEunzpGVtFw8uRJAGZSBToceh597FHGRq5w+txF0BgRi5kN/RFV
      bp0lBrBr30H0JgsHdnYxNDyJ3bq4oKS1ayuHDuyltdHFqZOnyBQUPA4jJ0+doiTqsOrh1Omz
      RBJLo/0Eoaxexu32MDI4hLe9HUoy+/btw6qXOH3mDNGChH/4PNcmZgBo9HrR27w0WLRs270P
      gwYMznYWhl7H07kHp8uJRk4yODwLgpaDvTtpaNuKU68QTeUqN7Vj7wF2bunEKAmcOnUKncmJ
      JBQ4deoUJqeHfDJKf/9FCuX773QwOB2nc9dOzp8fwqmD4Wsj6PUGCiUBj8fB0OUrWBwWzp8+
      hbOpHZES+/btA8AmQiSvMDszRUkRSCQSgIwsqF2texU1FGIdKWWjvHlunMeO9jIxOUlHezsT
      V/qQXdvp8qr7H92LqAawzkSjURwOR+V9LBbDbrev8A2Vu4lqACqbmg1bEFPeClG1L5V7mbpa
      gHQ6g+kWVvGUSqWqpx/ezL16fM5mlrvX85iNJpk8foH2h/dicKzcv1pJ36rDE4FQmC//zd9X
      1nMmAtOcPn2Si0PXONN/AQUYunyeq8OXeOWVE8zOza2sUEVlHRj45osMfP1FBr754m3pWdEA
      AqEw/+kvv8bW7k5y+TwARUSMeolsXl5yWqRWMtHV7iIUmGdscva2MqWishqe3V3oLEYa93Td
      lp4VXSD/fJBQOEqj24W3cfGkQkUuMj4xQ1uLl2AkWfO0SLNBUl2g+1jufsjjesit+G2f14PP
      61lyTRAluro6rn9+fee1GqdFqqjc61Q/KT4a5Mz5K4COo489tOaTIlVU7heq9gFMDg++BiPT
      E/Oog5gq9wuhoSmOf+l7hIam6v5OzU6wzuTGbdVQLepX5f4lPjHPC5/6Eqf/6gd3Oyt1MfqL
      s5z8yvfJRpOryl790XFmTl7h6o+O19T1g09+nrFfnK1cq2EABY7/8hgYTOqKmXcY0bE5spEE
      cwMjq8rKxRKjL/cRGfPfgZxV58K3X2Ly2AWm3rq0quy25x6m5cGdbHvu4aqfBy+NkU9mCFwa
      q1yr0QnWcuiBfYxOhZZ9kk3GmJiZo6W1lXgyQ7O3gVg4iGCwkY5HcDqdakd4HcnFUoydGqTt
      6O5VJ3zqoe3RvQA4e5pXlZ14bYD+v/0JBpeVD/z1Z1eUzUQSABid1hXl1srejz5N8NIYbQ/t
      XnL95omwbDRJZHSWg7/z/prPaf/Hn8G1rXWJrpqjQJJWQtLquPnIa4PFjtMSxz8fRBIUZBqI
      JFIokQDjkwnaWqP42rZg0C6eFllPKIQsy3Wd77vecncz7XrlLvz9S0y9eZGFq1M88Ae/xsQv
      B7j4nZfZ81vvoeOJ/WvWpwjQfv17S+QVhYvfeQWAPb/1bhAEbJ1e9A4LjXu7luku5Qq8/h+/
      CUDv77yXN/78WwA881/+HXq7eYns/LnF1sazv3vNz6b98X20P75vWX77v/Ezpt68SHh4hr3/
      y9Oc/C//zMLQVOU5VdMnWQx0vefQEl01DKDAyRNncTW1VukEy2RLYJYU/OEU3nSaXCqOoLfR
      u7cBf3CBQCBAV/tiDaPOA9yenGd3J/Pnr+Hd240kSYQuj5NPZghdHqfn+o+5HunGJucZ/vEJ
      ALqe7MXe7sXd08Kvfu2PquqJjc4Rve4a/fL/+h9wvaKT80Xm+0cQgOYHdpDwL3D8i98F4Jm/
      /ANsLZ6q+kZ/cZbgpTH2f/wZJIth1Xtp3NPN/MDic7n47ZdZGJpClDSV51TPPUMNA4gHozz2
      vvfRcsOxQW8j0t7eBkBz++KV7bv2VT51NnirfEflVul4opee9zxQeV+tGb+RyJifY3/xHZp6
      t3D49z9Ydzq2Vg9b338U4frr1bC3eXB0+UBRSMwuUMovLitK+hc4/oXFAv/slz+N0WFZlAP0
      K7hwF779EvlkBte21kotvRLdTx2k/fF9SJKEosDcwAj7Pvo0Xe8+WMfdvk1VAzBa9Lz281e5
      ZLTz5K88oc4D3GVCQ1Nc/dFxtj33MA3b29j67IM1ZSPXZuvu5N6IIIr0/vYzdctLRj1Pf/5T
      ACRDUSJXp9HoJDw7OyoF3ui0Ihl0Fbmb3Z/ImJ/ItVk6n+it6etXIxtNMnXiEr7D2zG5bLQ8
      shvPka0UCgXm5+fJ5/MUCoXKXyaTQZZlCoVCJQ9l17yqAWiNNnweF/OBOEUgGZhlaGwKjSig
      Ndro3bOj7gelsjI3F+5qlIf3ABq2f3hFfZ1P9AL1dXJXQy6WGP3lAM6eZpzXC3U1DA4LbQ/v
      qbwvF/halAviz//870gtxNgVDuF7cAfuDhtj/imy2SylUolCoUA+n6dUKiEIQqXQDv7LG8xf
      GMOzq4O9H343Wq0WnU6HVqtFkqTKa6vVilarRRRFjEYjWq0WrXZpdV7VAKKRCNt3bkO0hMlG
      ouQTAQqywqXzl3n6X/163Q9QZXXqKdzlYb1aw3s3IkoauutwIW5GkWUGvvUSAPs/9jSlXIFf
      /NnfkJwJoXdaeOYrn15Sq95Yy95Yw+bzeYrFIoqiVAqsIAgIgkCpVEIURSRJQpIk5A47mUwc
      qdFKqVRCr9djsVjQaDQYDIv9AL1ev+yQa/2ZeWbnFXwd23jk8cdXvbc19wFMepH+C+MoQCrf
      SHNrD5enLvD+970H2zoPc2126incDdvbVq35b6ZUKlEsFpcU1Hw+TzabXVJYywU2OhPkzP/4
      AQowbUyjkSTeOncaQRRp27KLM2fOLKlpy38WiwWbzYZer1/ymSDcPH64vCAePXp08XomRyaa
      xOpbDLgceekMo1cm2P/xZxCNy2eitn/wEQSNSM97b3+rmaoGoDPZ6WhxMxMo0OR1IwJPPvEw
      hWSY+YUopkZHta+p3AI3Fu6ya1AumIVCoeIOFItFpk5f4eK/vE7Pew/j2N5aqWUVRUGW5cqI
      m6IoaDSaqgVWFEXMZnPlfcV10GhozZoQgH2//jSCKLLL14Wtyb2i+wNrG3WrxqvPf53omJ93
      /fFHaH5gB5f+4ReVDnG1/k75mdU71L0SNXOdSEQ4d3qUPQd3AjAzO8PMyCBdB1ZvhjcL5Zr0
      xho2k8mgKMoyN+Fm16BcYMs1paIoS/zX8l/ZHdBqtUzPJmjAiCup4V2PPrrENViP4debO8Et
      h3fcVsG+VXb/66dYuDKxaoc4PDzNyE9Orth/Wo2a8wBnz1zF63VWYoHEYhZBMqA33DsHnN0K
      5Vq2lv96839Zlpf4rzd2xgRBWFaTajSaii97c6fsRtfgVgqs4/c+xFTvJdoe2k1qPoLRYUEy
      3v+z7k9+7hNkIomKC9T5ZC9bnl4c+j39Vz9grn+ER/70t5a1RCM/OVn34EAtaoZCPPrUu4nF
      Y5Qfr8FoJByYJp3NM3ttnKamBgLhJNu62/FPTyDozUQXIrS0NGG1rl8/QVGUiltQrl1zuVzV
      Dlm5YBeLxUrtqCjKslpWq9Wi1+srLoHBYECn02EymZa5DeXCtxGTcGvF4LCw9dkHmTkzyPEv
      fBdHl2/VEZf7AcmgqxT+m5nrHyEbSRAZnV1mAFvet+ge1TM4UDPtWh+kYgu89dop2nbsQJeO
      8vrrbzA6HWRb0E9zZwsT12Zx2AwoQEEWEdIRjDodwWgcWVaw222EQiGCwWClJgUQRbFSsMqF
      tFy7ApUatuxGFAqFJTVuubMlSRImk2mZy6DT6SiVSus+E1z1uzd13u4UeosRg9NCaj5MZMy/
      qo9+P/PIn/4WkdFZOh/vXfaZa2srD3+287b01/zl46kwmXQJDaA1OTj8wCFcnnl8rV4mRsdp
      8jYQTaTJpNNoRRnB0IBZL5FNxSkqi4XZYDDg9XqX1ao3cy/UrrfCzZ23O0XDjg52/8aT9H3t
      BY59/jurBqrdLWbODFZCIm4VZ5dvQw28amnKxMPkizoe/pXH0F2/lkgmKKZCXBoPcWjH4g15
      rkdKmEwdle/e6P6Ux3RV1h9nTzMGp5Wm/VvudlaqkrgpJOJOt5L1UtUA8pkEsVQOpRSjCOiA
      YjaFYmpgV1frnc3hPczNnbc7ibPLxwe+urE1f3TMz4n//I8rxhXNnBlEkRVaj+xccv3GGKD1
      DpFeT6qud9Gb7SjpMJeGrlWiQZvbu9EKMsviozcxK3Xe7jUiY35e+NSX6PvqD+v/zqh/xbii
      ci1/4j9/j4R/Ycln5Vihpz//KSSDrur37wWqxwIZLPzKc7+GePNsXi5FugTGe8cNV6mTcpDc
      /MBqJ+a8Tcfj+9FoNDXjiu6XWn4lqrtA6Rg/f+UYkqDj3R98L0YgEI6RjAaQ1UXC9yXlIDlb
      R/3h6qvFFZVr+XttcGItVHWBjDY3hw/sQtDrK6HQzY0NbD/4GPb7f95lU1IuzI6uprudlXuK
      mmY7OzOHks1QuC5kdXqwOldfKKGicj9Rc9OHVp+L2VSO+zvwQWWjmTkzyNzZ4budjVumZgsw
      5Q/TYjWSgSVGoGTCnB0O0NxgIxhLsm/nNsZGhhB0OsKhFG0dPjzu+2NkROX2uF/G+leiqgH4
      h0ZwNjTR2du2rAUolgT0mgLhZB63xYgMaA1mFKWIXlKYn/NTLAk0uu3qrhD3sVw9slqrsTIK
      pLUaV9V7L95z1d2ho3NTnDp/Ba3BxiM37Q2aSycYn5yhodFDOJai5YZ9gcqhEKLBjtth2ZS7
      Q4dGpomPz9P5RC+iVPve7/XdKO6HPG7Y7tCOpjaecrm4eHVqmYDeZGX79VAIt2uxyasVCrEZ
      OfHF75GNJECA7qfWvjRR5c5StROcSUQ4d6qP+WC4coauSn149/dgcFlxdt/+onSVjadqC5CL
      hrg0FeahQ7vVvUHXyMHffe6+nRTajFR3gVp7+NVnPTid6tpflXc21St4QVQLv8qm4JY8nGg0
      SqmQZXZ+cffoWDhIPJ1jbm6OXC63rhlUUdlI1uysKsUsA5eG6GptoiTLNXeHNhtUP1jl3mfN
      LUA0HIHS4gZL4ViK7PXdoQuY6d3bRb4oEwgENiKvKirrzpqraWejj8cbl67RVHeHVrlf2TA/
      pVQqVXaCWA1FUSiVSndc7m6mfa/L3Q95XA+5DTOA8q5nN29sWo27JXc3077X5e6HPK6H3Ion
      xauovNO5a0M1FwfO4m3rwSLkGJycBsGIXlLwNLXgcdkrclcu9tPY2oNJyawoNz87xfhsiAcf
      2M/5c+fQCAJx9HQ1NdDU9Ha/xD85xpQ/TO+Dh5gcukxe0BKbnsK7YxddzU2VNf8zE9cILCTZ
      fWA/k1drycmcv3CZLl8D16am6dhxgMTcGOFkHjEXQrJ1sqWnDZ1G4fyFy+ze1sPg+Ay7t29h
      cmykipxAcOw8Rc8eMv6roLfhNMDk9CyK3oxOUGhu68RhNZGIhgnF0xjEIoFYlv07Ozh3bhAZ
      Ba3RQGNDI02NDRU5u0FgKpRh/46WqnKFbIqRyTnMOoUCeno62xi+PEA8U6oqZzeIZBUd3R0t
      DF0+jyDITASL7N3WSlNTU0XO6zRzeWSSR44eqSpXeYZeB4MTM3TvPkxqfrT2s3H1MDN0lcbW
      FqxSseqzmZ0aJ5rOUEhmcPpaa8pFQ/Nonn/++efvQHlfRiIWIZ7JY5EEjA4LomgGMce1wQna
      u9srw1OT46PkigoWSVxRTq8BncWFxSSRycpoDTp0gkIsMocsObCaF3cmSCXjZJIpnL5msqk0
      kihgd9qIR6Mk0zlczkWjMuh1TI5P4G3vWEFOQFZKKMUiNruZvGCmlEuj10o4HU5iiRjxRAqP
      242slLA5nJQKOaxWK9F4ooqcC7NWJokVskla29tIRKM4LAYEsxMxHWF4Nkpnixe9wUg2k0Ir
      iuRlgQa7nqxsxKATUdAQnhrE6O3GblmUm/f7SeeKtHrtVeXMBh3FQg69JDHtD9Da4iOfSSHp
      DFXl0ok4wXCM5hYfqXQGUaPHaZaIxKJkC+ByuSgWcnganIgaI3abmWQVOYfNiqyUEAWBTDaN
      yeahUPUZXn82ohNDKUKqIKATlKrPJpVK0NjkoVTSIitFBEWuKpfNpO9eC2C12Wh0NKBRFIrh
      MF0djeRzTuwWJzcGEff0bEHQW5BEYUW5kqinyW0gnU5jNkrYGlqhVCAZj2J3v31qoafRS7Yk
      QTaN22mlKBow6jR48hkKoqEipygKndt3oqwoVyIdi2P3+simkri0RbReN+FkEYfViMvdQCKn
      VOTmEIjH40h6M81V5WA2kqOkmaOQzxONhLF5mgiHFuhstJN3ObBGIgBEQ/PEUzmcJglPg4d0
      XsQoFWlo7aZUyBNzWHHo35bb23uIbDZLOi9XlculE8RjcTyNjbS1tZFOp9GZnXiczqpyLW2d
      GGJJsuk0TqsZ0WBD9/+PGSLPyi0IV8fNxccgKSXG8A2HOljYsIqKMXDzijBws/xhEMQbNq8Y
      mFi5GNSlJRh+/mXEGjZ///xm+PDxJwMnBwODkLAYw+//2NX9+/dvtA8wCkY2GF3sOQpGNBjN
      AKOAbuDd+48MX75+G2hnoAAAaHfhY0eh1VYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs FB scatter' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs Food Waste' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs Poverty scatter' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXBbWXafv4d9JQnuEhdJpKiltXVra+1SL57JTI+nXUkce7yM//CSjBNX
      OeVyUrEryaRil+N4yuUszqTsJHbZmXjiyWI7M+Wx3askslt7a6EkUtwArgCIfQfeezd/qMlu
      NUkJBECCEO9XpSoKwL3nAngH7957fvccRQghkEg2KYZqD0AiqSamhT/+4OYjsqpakU5/8lAv
      LqulpLZCCHRdx2g0lmxfVVVMJtOzX7hB7WuaVnL7cmwDaJqGwWBAUZRNYX/xlZmCSkbVSjL6
      WWp9VlXr4y+Har/39bYvp0CSTY10AMmmpuIOkIqE0LXKTKUkkrWm4g7g9DRhKGMBKZGsJ3IK
      JNnUSAeQbGqkA0g2NdIBJJuaIkNmgoh3BFWxoKUi2Jo6cLmt+EfHsNU3oOkKzjo3Tk/j2o5W
      sqnx9d/j9h99n74vnGDPD52pSJ9Fx4yt7npMQiEWCaDm8uSMBZq6uokEgohCnmg8iG6wkvJ7
      UQ9uQzWVvhOk63pZEUFd11HLkHXUcvtK2C6HtbQ/e3OYbCTJ9LUH7PzSiYrYL/oOEJ+bwepp
      wWy1YTIbMJhshKcnaerZg5ZNkgpMYbHbce96AZPZUpYWRlGUqmpxgLL0LNW0X64WR1VVjEZj
      1bRAT7O/74cvYGtw0XVy34o2StYCPR0D7S+8+PjPLR2Lj9rrPY//sDXiaJDTH8na4mpv5NBP
      fq6ifcpFsGRTIx1AsqmRDiDZ1EgHkGxqpBpUsqmRalDJpkZOgSSbGukAkk1N6SE7iaSGEUJw
      586d4u8A+VScfDZHPhWnkCuAEGRiUbRCnlwmg1ahlCoSSSlExmYIDE7AZzRk6fkYM9eH0PKF
      xcd0XefGjRsYDIbitUD5VJJUYo5CMkbTzv1omTDJ+QjZTA6DyYi9zkN9Wxv5dBKh62WJqhZy
      88j21bG98K8a9j89hmLJRhK8+y//AL2gcvpXf4K2fTsWn7v8m/+DmNfP/q+8xu43T6NpGleu
      XKGlpYW+vr7ip0C5dIr69naCw1Fis9PUeRyYrDZc7ka0dJz03DCKvRFDLlXWBwir/wBW6mOz
      tq/1sa+2vcFkxOywoWZymO3WJ9rb6l3EjUEsbjuFQoHLly/T09NDd3f3Y+HlQm7Q/3TlwVMS
      Y+nEZiZRLC5MBhWjvQ6DYiAbj+BqaUMrFMglYjgam1EUhZ870ofbZi35A6jlzGzVtv88q0Gf
      Ri6RRlc1zG77E/a1fIFMJIGxzs7Fixc5ePAgW7ZsWXy+aDVo/dZtSx4129ofd2KxYGpqWdWA
      JZJKYnU7AJacBTBazOh2E/0XL3L8+HE8Hs8Tz8tdIMlzTSQS4dq1a5w+fRqXy7XkeekAkucS
      IQSBQIC7d+9y5swZHA7Hsq+TgTBJxRFCEJ2YI+YLVDzZbS6eInBvHK2w8ra7EILJyUkGBwc5
      d+7cihc/rMEdQNc02LzJlSVAzBfgrV/5fRQF/tbv/ALOloaK9d3/W98mNDTJ/h99lb1/+9yy
      r3n06BF+v5/z588/czOl4g6QSyUQulSDbmYMpsf5/RWDgmKs7CTDaH58yRrMSy9dIQSDg4Pk
      cjlOnz6NwfBs2xV3AHtdA4pUg25q3Fub+cK/+wUUg4LN465o36f/6Y+R8oep62x94vGF6K7Z
      bObYsWNFb6PKRbCk4iiKgqO5fk36NlnN1He3PfGYqqp8+OGHtLS00Nvbu6oYglwES2qaQqHA
      xYsX6erqYteuXatuL+8Akpolk8nQ39/P/v37aW9vL6mPosVwycAMWOuwWQSqsGK1m4hMTeJu
      aiKbVbE5bJht9pIGIZEUS2RsFv/dUZqP9nHj3kfLRndXQ9F3ALPdSSISJkccRDvCVcBksTAz
      /AiDyYDZ6qSxs5PIlBf14HaZGlGmRlwT+1f+/f9mbmKKTH8dX/mVn8flcj1hb81SIwZHhnBv
      6SARTKKLMFa7i+T8PJ7tOxGZOImZR2TVHbT07sJkNpclZgNk+zLa1/LYn9XetM2Db/gOP/7m
      V6ivX36hvRr7RTqAQvsLB0ExUd/ega7poCjYGpoxmi1Q58LV3IrB9ImKr1Q14UJu0FLbL464
      DPvltN8I9ssd+0a17/V6Mb64lV/+ud/B5rCvaGc19ot2AJP1k/n9QtYHg8W6YBGjobTC2BLJ
      sxBCLEZ3z507V/Yd5tPIXSDJhkYIwb1798hms0VHd1eDjANINixCCG7cuIEQgmPHjlX84gd5
      B3guCT7wkvJH6D5zAEMZu3GfRiuoeC/extFUT9Ifpu1gL+4tTRXpe1l7msYHH3xAS0sLu3fv
      XjM7FXeAbCKOKHMrTVI6+WSG/t/8EwrpLIrRwLazByvS78R7H3Hz97+7+P/Gvk5e+/WfqUjf
      n6VQKNDf3794dnctqbgDmG0rr84la4/Raqa+u5X49HxFf6HrOpoxO21Y3Q6y0SSenq0V6/vT
      ZLNZBgYGOHjwYMnR3dVQ5KH41SEPxVf3ULwiQMurWJy2ktovdyhdCEEhncVoMaNm85gdNgzL
      SJ3Lee+JRIL+/n6OHz9OY2NpFYfWqESSpJYwmk2LuvlKoSgKFqd9sf9Ks3B29+TJk9TV1VW8
      /5WQDiCpKgtnd+/cucOZM2ewWNY3niQdQFJVfD4fo6OjXLhwAbPZXJaOqBSK1gLFpsbB4kZL
      h7E0bMHpshKcGMfV1Ewur+NwOrAuk3ZCsvGZuz2Cr/8eu790CufW9av2OTQ0RDAY5MzJ0zz4
      n+9hslnY9ebpdbMPq7gD2BsaSSUy2BuayKt5MrEkrsYmQtMzKIogEzbi6e4hNj0hC2XXmBr0
      zrf+htiEHyEEL/3sGyXZXa39wcFBMpkMx48fZ35wgqG/6Aeg7Ugf9V2tz2hdvv0Fir4D+Ifu
      49y6Df/wAxp79qDrBqIzvsd/Z+IkZkbQFSvtslB2zRXK7nntCGNv3WDb6QMYDIY1TY24cHbX
      ZrPx8ssvoygKTTs7aTvYg8lmxb2laV1TM8pt0GXs1/o26EbNDbpwdrepqYm9e/euu/3lkItg
      ybpQKBS4dOkSvb29bNu2NM9stZAOIFlzFs7uHjhwgLa2tmc3WEekA0jWlEQiwQcffMCxY8fK
      Oru7Vkg5tGTNiEajDAwMcOLEiRUv/qH/N8Bf/dLv4r8zus6je4wslC2pOEII/H4/V69e5ezZ
      s0+VNky8e4v4ZJCpK/fXcYSfUPEpkCyULVmI7r7yyiuYzeanvvbQVz/P1JX77Hrj5DqN7knk
      GkBSUUZGRggGg0VlZgZof3En7S/uXIeRLY90AElFEEJw9+5d0un0mpzdXStqY5SSDY0QguvX
      r6MoCkePHq2Zix+kA0jKRNM0BgYGqKurY//+/dUezqopWgsU8Y4gzE60VBhbcxcOh5nA2AgO
      TxMFFRxuJ476ylUCkZSG0AUf/eH3ifn8HPv5H6pYmvLkXJhr3/xz1EyOvi+eIDI+y+y9UXxa
      lM//wo+xvWdHTR6FLV4N6mkil0ljcLVSSMXI6iY8WzsJz84hdJVcNIAw7CYxK9Wg1WyfiSUZ
      e+sGWr7AzK1htr/y0qptL8fUtQfMP/ACMPidd0mEY9ybGWVbQzsNJjvax1vftZabdFkHEEKg
      FwoYF0/nCMITY9hbOshFZ7A1bUFRjIQmfTT27EbLJEn5vRjMUg1abfuOBjf7fuQV4lNBuk7s
      W3U/K4nRtp89RGzCj5rJ0XZqLxffeY8zey/QsXMbDV1tKB/P+zeyGG85llWDFpJJ/Deu037i
      JCbr6lWdUg36/KpBo9EoV65cWbHubq05wJJX5qJRZgcuY9+yFT2fhxIcQPL8sRDdvXPnDmfP
      nn1q6dFaYllX8bywD5unEYu7sgXOJLWJEGJV0d1aYokDWBsasDbI3ZyNhBACNZvHZLOUtdOi
      5gooBmVVaU2EEIyMjCzW3dXzKsIoUAy1t+OzHMvGAQrJCP7R0cWVvaS63P9f7/Pdf/DbjHz/
      asl9JGZC/NU//o+8+y/+G2o2X1QbIQT3798nGo1y8uRJJt6+yfe+9tsM/um7JY9jo7GsAwhd
      p5CKMPNwaNVF36UatPLMP/ShZnKEhidL7iMxFyI9HyPm9ZNLpp/5+oXorqZpHD16FKPRSGh4
      kkI6x/xDb8nj2Ggscy8UBO7fQ69z4mxY/ekdqQatPEd+9ktMXX3AtjMHSu6j/VAvR7/2Jla3
      A0fT04Njuq4zMDCwmJl5Ydp14Md/gPruNrYe21PyODYay04GG7q2Y2hqx2618HzM9GobV3sj
      e75cXr4cg9HIjiKCYqqqMjAwQG9vL93d3U+sOeweN7vLHMdGY5kpkILFaWHq+gek4s++VUqe
      HzKZDBcvXmTfvn1s27atJqUNq2X5RXAigVBUUuHkeo9HUiUSiQSXLl3ipZdeorW19MRUtcay
      UyBLQyP2SIamrpb1Ho+kCIQQCP3xVmQ5v9IL/cQTca58+CEnTpzE6XKu+ziqybJ3AIPJQnJ2
      jHg4vvhYdPIh6WSO2fu3iPgDqOkY03dvMe8dIzAxQTIcWrdBb3YmBwb57t//BjPXHpbVj+/y
      Xf77V7/On/7b38N4ZYZL/+y/EvP6i24//8DL977221z/5p+XJV6sJsveAbR8BmdLJ3bXJ+Fu
      V2MjWVVDK6io+Ty5jEpT9zaiwXn0fI5YIogw2EgFvFINusbtgw8myMXT+O+N03a4r2Tbd/uv
      Mzrt5ajnRRKJx0K30Mg09duK2/0LPPCSjSaZvfUItVBAMRieDzWolk6jWBTSsRR2hwUQxP0B
      VGMWi82OxWrCaLIRmZmksWc3ejZFMjCFxWnHLdWga25/z5tnsNW76Hn9yJLXFWN7IbprP9jB
      393xVTqPv0AmFCc+FWTbmQNFi9H6Pn8cRUDznm5MZjOKotScGG6JGlRXM3hvXMfWuJX2nT0l
      DUSqQTeuGlTXdQYHB8lmsxw+fHjJ57zeF+By7dfT/pI1gNBVEEZSgUnSiUxJg5BsTHRd5+bN
      mwghFqO7m50lrmK0uNn+8km0Qh6D6flR/W12NE1bzMy8Z8/zE8ktl2V3gdKTQ0wNPyKXzq33
      eCRFkApGiU8Hi94oyOfzvP/++3R2dsqL/zMsqwUqaBox7zD1rZ3YXfb1H5VkRQL3J7j0a3+M
      rukc+urn2fXGiae+Pp1OMzAwsCEzM28Ell0tuDt2sqdtOybr6uvMPlaD9pQ9MMnyqOncY7Wt
      gELq6Wu0ZDJJf38/R48epampckWznyeWcQCFQmyeYCBEU3cfDvfq7gBSDbq2bDncx/l//lOo
      2TxtB1f+oVmou3vq1Cnc8mTfiix7B1DMZgyrPgkgWQ8Ug4HW/TtWfF4IsbjNeeHChXWvu1tr
      LLsIVpMx0okIifn4ck9LNihCCG7evEmhUODw4cPy4i+CZe8AJocTi8NDY6cUw9UKC9ucDQ0N
      7Nu3r9rDqRmWBsKEAIMRPZcmn80uPp4MTJLPa0SnxkgnUgg1T2BkiHRknog/QC4lpdMrEZsM
      cO2bf47/7tia9F8oFHj3r98i9PYg8bceMPfRCAC5eIqb/+W7TLz3Uc2K1daapXcAvcDcnTsY
      PG6SoSRO92NBnMVmJJ/OEJ2eodnVTCYWw9XYuFgoOxsx0dC1QxbKXqb9wz+7hO/SXaLeOV75
      tZ+uqP1cLsfly5dxhVXC96aZYoa4L0Dz/u1MvH+b0b++ju/yXdqP7sJke/aUaL3FaNW2v9QB
      FAP127qZGX5EQ+dCtl9BfG6WvFHF6naSjgRxuBxEZ3x4FgplT4+gs0emRlzGfvfpA0Qn5tjx
      yktFCdWKtb+wzXn48GHsuons4Ay5RJodrz62s+WlPnyX79K8pxurw7aYvvBZY99MWqAlYjih
      q4TGRynk89R37cRRQiBMiuHW3v7CNueJEyeeqMFVaxdgte0v+UlQDEYcbgfhqQnyReaPkawv
      iUSCa9euPbMAneTZLHEVoRcIjwzj7urDapd5QTca8Xica9euyT3+CrGMA2g4t72As85EJpPH
      7ly9HEKyNoTDYa5du8bp06flxV8hlk6BUEjMeQmMjYKUNGwIhBDMzs5y48YNzp07t2xa8kqj
      ZvMMfuc9xt+5+VxvoS65AygmG12HXyaXiGFxrT4FthTDVRYhBBMTE3i9Xi5cuLBumZlnbz3i
      /nfew2A20Xao95nZ5GqVpVMgLU9kdprgg9s0H7hAU/vqMkVLMVzlEEIwNDTE/Pw8586dW9fq
      i429W6nvbsPZ2oC1rvhUKbXGUgcQOpmQH1fnXpx1cv5fLYQQ3L59G03TOHXq1LqXHnW2evjc
      N762rjarwdIpkMGM1VWPu7MXi0X+kleLq1ev4nK5OHToUM0mnaoFlnEAI829e6sxFgmPQ/mX
      L1+mo6ODnTt3yot/jSk9ZCepOPl8nkuXLtHb27tpktNWm6IdIDY9grVpByI9S0HU43Ib8Y+O
      flwoW+B0O7FvokLZY2/fYOL92xz4ymu07N227Gu0vMq1b/4Ziel52l/cyf4ffXVFPU4qmeLb
      3/g9PAmFcbeP5N5t7PvhV4ouRZQOxbj+n/+CXDxF7+eO0fPakZLeV+D2KA//7yX63jhJ18ml
      surg/Qnu/snb7HjlMDteXV0N4o1I0Q7gbKgjm8uTjUdBWMig4tna8USh7IZNVCh7+HsfkpgK
      Mv7eLTx9Hcu2j3pnmey/BzyutN77xZexLKOtSiQSXH7vIpYHYTRhZJ4o0fE5dn7xBCZ7cQGv
      mZvD+G+PLo6t+/yhotp9lrG3bhAankIxXmXLsd1Ln3/3FqGhSQqZHF3nlhbsqH016LIIYrMz
      FKjDqAg0PYmiuAn5vDT27tmUhbL3/8irTPbfZdcXTqyYnrCxZyt9b5wgMT1P28Fe7PWuJdOa
      hejuK6+/yqy1jdDINELXadndjdVlL3oa1PXyC4SHp8jFU/S8ujRlYrHs/vJpDEYDvZ87vmwf
      u754Ai1bYNu5g8s+X2tiuGULZZeLVIMWZ392dpZ79+5x5swZ7HZ7RezX2gVYbftyEVwFqhXd
      lSxFOsA6I4Tg0aNHBINBzp49K/NzVhnpAOvIQmbmfD7PyZMn1z26K1mK/AbWiYW6uwCHDx9e
      1cU/c32Ii7/+xwTvT5Rke/ydm1z+N98i5iu++stmoeIOIAtlL0VVVS5evEh9fT0HDhxY9QLv
      4V/04789yvD3PizJ/uB33mP25iPG37lVUvvnmYpPgaQa9EkWoru7du2is7OzpD52/+ApRswm
      +r7wckntX/g755m++oDtF14sqf3zjFwDrCHpdJr+/n5efPFFWlpKTzLWcWwPHWVUZ+95/Qg9
      r5cWGX7ekQ6wRsTjcT788EOOHTuGx+Op9nAkKyAdYA2IRCLcunWLkydPyszMGxzpACuwIMlY
      bZu5uTlu377N+XPnsdlti9KKSio7P62TWq7fStlci7FvNIp2gOjkQ6yNvaTmHmFwNlFXb8c/
      MoqtvgFNV3DUuXE11n4RhvDINAPf+Dat+3s4/g9/qKhsagt4vV7Gx8fZ6+nib37xd7E4bRTS
      OU7/8o/SuLPj2R0UydQHg9z6g7/kyM/94JK1wYPvvM/42zc4/NNv0LmMmrNYErMhLv/Gt3C2
      NnD6n/wYRsvz+VtZ9LtyNTaS0wRWVz1Gp4tcOvaZQtnzz0Wh7OADL9lIkrmPHpHP5jBaipMp
      DA0NEQ6HOX36NIPffodcNEku+jhhcODBBHXbiy9P9KzxB+5PkIul8N8do+2lnU88N3tzmFw8
      zdydUdqXUXMWYxsgPDZDci5MOhQnHU1gbyxuKvfcqkHj/gCqIYuaCODaYsFithOZmaKxZzda
      NkXKP4XFUfuFsnteP0Ihk6N5VxcWu+2Zt39d17l79y75fJ7Tp09jMBjY9cZJzFYrFpedQjpL
      72vFqzOLKpT95dNY3Q56f+Dokte99DNv4L81smwR7WJYEKN1HttD9id+AHtjHa6WhqKnQbUm
      hpNq0GXsF6vG1HWd69ev43A42Ldv3+KXtpELZRfTXqpBJc9EVVU+/PBDWltb2bVrV7WHIykR
      6QAl8OnobldXV7WHIykDKYZbJel0mvfff5+DBw+WdfGr2TxJf+S5TjtYC0gHWAWJRIJLly5x
      5MiRsqQNQtd5/1//Ed//xf/A1Af3KzhCyWqRatAiCYfDDAwMcOrUKRobG8vqSwhBPpFGaDr5
      ZLpCI5SUglSDPoOFzMyDg4OcP38em638dJEGo5Gzv/qTJKaDtB3srcAoJaUiF8FPYeHs7sTE
      RMXP7rraPLjapEiu2kgHeAoLZ3fPnTsnz+4+p0gHWIHbt2+jqqo8u/ucI79ZIBtLoWZywONp
      z9WrVzEYDKs+u7tALpGm8HF/ko1N8WpQ7yBmTy8x7z2sTZ246ywERscw2Z0IxYjL48HdXPrW
      YLUIPZri0q//MY7mBs79q5/i6o3rtLS0sGfPnpLC8VHvHO99/Q+x1jl5/Td+FrND1ljYyBSv
      Bm1uIVsoYG/qRNdyqDmdxq5tJONJtGya2OQwmsFOdt5XU2rQdChGIZ0jOhfknb95mxdePMDW
      rVvRStzKTYfjFNJZdFUjl8qglCAjLkdRWWtqzGrbL14NGgihm+sxqEnsTVswKhCbm6Fxey9a
      Nktq3oKr3klDY22pQTuO7eWlf/QmNx/c5eipl2lpaSlLjLbl0E5O/NKPYK934mpZ/S5PuZXq
      a02MVm37Rb5SoXHH0qIZrTsf681NLhdWV1/RRjcSqXSK0UyA13/4SzQ2NpYtTVAMBrYc7ivr
      IpCsH5v6WwqHw1y9epUzZ86sS+lRycZj0zrAQmbmCxcuVCS6K6lNNp0DCCHw+XyMjY3xyiuv
      yKnKJqfi375WKMAGlfgKIRgeHl6suyuju5KKO0Ahm9mQGnchBHfu3JGZmSVPUPGrwOauW1Uq
      kfVgIbprNBo5evSovPglizz3E2BN0xgYGKC9vV3W3ZUs4bl2gFwuR39/P7t27aKjo0Ne/JIl
      PLcOkE6nGRgY4ODBg7S2tlZ7OJINyqomw0IIolOjZDM5hK4R9o2TT8WJh8LkM5m1GuOqSSaT
      XL58mcOHD8uLX/JUVncHEBrJ+XlUbOh2BbPNxuzICAaDgbTVjqeri8hkdQtlRyIRrl69yqlT
      p3C73SUJs9aj0PZata81MVq17a/aAYQwoGZT6BYncf8cjdv7EJk48akh8trOqhbKnp2d5c6d
      O1y4cAGn01myfShdjAbrU6h7LWwvtJdiuBVQDBY6DryIYjACCo7GNhSjEepcuFraqrb9+emz
      u6+99lpVxiCpTVbnqoqCwfTJwXDF8ElzxVid9bQQgpGREQKBwGJ0t5xbsGRzUdO7QLquc+/e
      PRndlZRMzV4xC5mZAY4cOSIvfklJ1OQdQNM0+vv7aW9vl5mZJWVRcQfIxKOINUyNuBDd7evr
      k5mZJWVTcQewOt0f7xJVnmw2y8WLF3nppZdobm5eExuSzUXFHcBgNMIaSG4SiQQDAwMcO3as
      7OS0EskCNbEGCIVC3LhxYzG6K5FUig3vAAtnd8+dOyfP7koqzoZ2AJ/Px+joaMUzM0skC6xS
      CySITI5i8WzBYTcRGB/D1dRMPq9jdzmwuSo3PRkaGiIYDHL+/Hm5xy9ZM1blAELPE5vz0+Ru
      IROLUdfcQmhmFgVBJqLg6e4lNl2eGlQIsZiZ+eWXX0bX9VUrBGtZzVlu+1pTY1bb/iq1QCZs
      bifZWBiHy0540otnxx70TILE7Ci6Yi1LDboQ3bVarRw5cqQqikSpBpVq0BVRDEba9764+H9n
      c/vjP9xO3K3tq+lqCaqqcuXKFVpaWujt7ZXHFyXrwoZYBOdyOQYGBujt7aWrq6vs26BEUixV
      d4CF6O6hQ4doa2vbkDmFJM8vVXWAhbO7x48fl9FdSVWomgMsRHdlZmZJNam4AzwulN3z1NfM
      zMwwODgoo7uSqrOuhbKFEHi9XiYmJjh//jwWi6XS5iWSVbFuU6BPn909e/aszMws2RCsiwMs
      ZGYuFAry7K5kQ7FKBxBEfHdRxRbqPQr+sXEMFhsYjLibWqhrWVomdSEzs8PhKCu6K5GsBatL
      jVhIE5mbJxOPoRbyeDq6sLrrH1eM9N0nmXryKKSqqvT399PY2Mj+/fvlxS/ZcKxOCmF20nP8
      LLlEDgwK6eAcnq7taLkc6bADu/0Tf/p0dLe7u7viA5dIKoEiPg693vNHUMuUICSTKe4/uM9X
      XjtLMh7HYDCUdHZX1/Wy1gmbuX0tj70a7RcdoJJomlbyLo8QAl3Xy9ol2sz2y7G90N5gMJQ8
      Xa01+2viABJJrWD8+te//vW16HhuyofFVU8uEcE7M4+ajZPTQNPBYn5y6ZFORPDNhWhsqCMw
      O0k8qxGcmcJktWI0mjAYnv5rkE5EGPXO4mlsIB4K4I8kSUYCYDSiYcRsWvmWmEnGiMQzFDJx
      /OEkDXVO/NOTJHMF/LOzmM1mjGYLhhV+kfLZFP75GIqWY2JqjgZPA9H5OeZjaaLBuce5VE0W
      TCu8h0wqTjiewmkzMzk9S32dm8DMJIlMMfYFwRkf2BoITI2hGaxYTTAyMgICwrEUiqJjtVhX
      fP/R4Cw5LIRmfaQL4HLamBgZQhUG/PNhTEblKe0FM5NeElmNSGAK3eTAaoLRkREEEIolMTzD
      /vzcNIFoikwsRDyrUueyMzE6jCoMzAVDmExPtz876SOeVTHpaaIZgcNsYHRkGAHMRz9tXzDl
      HSddEESCMwiTHYtBrE1qxHw6QcAfIKfDfCSB3SSIxhNMeieY9Qf57C1n0udDVzV0oZPNQy4V
      Ix6ex+vzMR+JP9NePBYjFY+hCoinclDIkojHmRifYD4cXmLv01jsTgr5DPFkDqHlQAiymkI2
      HiAUjeHz+ojGkiu2N5lt6Hoem8OJ1aQgdEhkCmj5JMlklLHxSULz4ZXt2xyo+Szz/jniyQwI
      yKiQTQSJxGJ4vT4i0cSK7etsBpL5DJO+AJqmkYyH8DS2MDE5SWh+Du/EJHlt5au0iz0AAAPG
      SURBVLWdy2EhlcsTjcaIxWNQiKI4tjA3NUYoFGLS6yOVLazYvsHjQVNjCKOHWDhIOhGm3tOK
      1+sjPO9/bF9d2b67vh50jXqPB11VoRBDsbfhnx4nFAox5fWRzORXbF/vaUAr5AkE5kgksmRS
      Yeo87Xi9XiIhPz7vJLmP7Td4PORzMaam5tE0jVg0tDYOkMmkyWbTROdDGBQdfyTBju078DTU
      EQ1HllyQdfX1pBNRYskMuUyMnKrQu6sPu8Xy+Et5BrouMAiNRDKFrmaJZ/L09OzA6XAQiz3d
      gZKxML6p6cdOkMqRSmfIpaLkcbKrpwur1fTUMeTSCSZ9PkYePSKWzpPOpBH5NMmszvbtPbgd
      T38PqVgE3+Q08VSaaChEPJ0mn4qTw87OHd3YnmF/bs5PwB+hrt5ONDyPqhuZ8nnp3r6T9tY2
      9HSIZH7ln4D5YICZmRkECpqqkcorROZGqW/dTndHG4qeI55KL99YCB4+eIhQbMTDkygGIwXd
      yPTkBJ2L9sMkcytnChwZHqKg6wzdf4hQFFJ5iM6NU9fSzfbOdhSRJ55c2f7Qg4cIvUAqnSMW
      i5DXDMxMjtOxrY/21lb0TIRkVgWh8fDBEAajnbo6G9FQEE0Y5RpAsrmRmgTJpkY6gGRTIx1g
      ndAKOYLzETIfV9PMZ5JMzwVJplIA6FqBTDaHUHMrLjoDs1PMBkJLHk+lUghdJZEsvVLnnfvD
      5HIrLzafV9ZsG1TyJFNj97l8cxC9kKeltZXLl96no2sb77/9l1isVsYnRvHPJ5l7dJ2PpvJY
      lBzT3nFyhQLDw4+ob27jSv87NLd14BsfQxEqwxMzaOko7wzcYF9PE+9evE0sGkAXgkcT04hM
      jPl4htmJEdI5gZbPEQjOkogleDTmpbWtDaHrXLt1j//zvbcIR2Ps39tX7Y9qXan6ofjNQueO
      vfQl8sxOPsLmbgbxOOpb37KFqfEHZBU7Smoap6eZ6eERDvcd5tKVW+zc1k5dQz2ToTRmiw2b
      FuXBaITBkUnaXRYmEdS77ADkEkGyDZ3cHxwkGMkyVAjR0d1NNu+kKT7BeK5AWhTY5jJy3xth
      574D1FsMjIz7aG9t5u+9+fkqf0rrj9wFWjcEmUyWbDqJq6EJUUgzH8tS77aDriNQMBiNROaD
      2FwNNDS4CM5MY3XVYTWbMZqtqIUsToeDYGCOuro6wrEMTgukVQNtTXUkEilMZjNqIUc0maXB
      aSGrGVEKKcw2B+lMgbo6Jw6bhcnJWTq7u9BUlUw2i64LPA111f6Q1h3pAJJNzf8HyrXGRa5X
      XaUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFOklEQVR4nO3cy09cdRyG8Rdmik4BucMMtA0BTGuQircSNYRojWJMEycxTXWnS23iwn+A
      f8HGTbupiZbaRFYWghZFShBttchUqkWCgFHLbSj3i8OMiyamKUljTJ1ZvM9nN2cx53tO8uSc
      md+ZyUqlUikBprIzPQCQSQQAawQAawQAazsC+LKzQydPnVRHZ6+0saDh0am7vsHocEwb/7xK
      qrOrS5L0yekT+nVuQ/GJH/XNyKQufXtJkhSLDUuSOj88o5v37DCA/yZ454bY9XG99c67Ciil
      ge52tfdeVzQaVXVBSr2DP6ip5QXVFEkTs+uamhpX/6edijxyUK9EX9e+sjzNTE9LSiiZHVBs
      6KoeWBlVzXNHtTixqGvfD+jU6Xa1vBjVbm2r//PzWlkN6li0VRf7+tTS0pKBUwBngba2trbb
      N0SK83Sm/ZymZtf0UnOj4oGwooeblEgklJuXq+7uHtVX5erjnqt67WhU2zcXdeTNN1SRmyNJ
      mh8f0WaWlCh4SOszo5pf3VLzoUf1xYUeHW59WQsLcR17NapfYldU9/TzWogNqKT+SdXXVmfg
      8OHujlughLay83X8+Nua/2NMys7W2vKKksmkzp09q82tLW1v31o2aHqmWaFdAWUH/tLK8qaS
      yVvbH2s8oA8+6lJjQ61SqW0FAkFl3baHtdU1JZNJSTkKh0t0X84usRKBTNlxBfhpaFAXvvpa
      z7YeUUl5pebGrujGapb27y3Rz5Mzamw8qH17KpWzu0BF+SGFK8t1vqNDVXUPK+/+oEKFxVpa
      WtETDQcUytpUXuRBRcqKJEkV4QolVuY0NHZD+2v2qSRcoaCkknBEg/19qq6uTv8ZgLUsVoLh
      jK9BYY0AYI0AYI0AYI0AYG3HSjDuvXg8rng8nukxdqiqqtL6+nqmx9ihuLg4bfviCgBrBABr
      BJBmFz/r1LXxCS0vTGthOaHJibs/bYv/FwGk2d49taqpCWvku8u6PDyqtfhvOvHe+5r4cynT
      o1niQ3CaFZaVKqig6hoe1++zyyqtqNFThwIqzM/J9GiWCCDNispLJUml4YhKwxFJUll5JJMj
      WeMWCNYIANYIANYIANYIANYIANYIANYIANYIANYIANZ4FCINQqFQWn/k8W8Fg0GFQqFMj5FR
      /C8QrHELBGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGt/A3AOBWWkSlyN
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='child fi by county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='child fi by state' width='192'>
      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
      /38PHWeM7aorRgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='fb list' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='food banks by zipcode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='states w least fb' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='timelines?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top fi by county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top fi by state' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQqklEQVR4nO3dW28bZ34G8GdmeBqeSVESKduSLMuJ7LWzmyjZpsV2g83FoijQm9wv0P1S
      BVqgH6DtbXuVIg0CdBtk0zh2EsW2zidb4lniccg57IUsSkPSMF/alEy9zw8QYNKcv0bUPBpy
      +AypOI7jgEhCiqIo6mWvBNFlGlkAbNsGdy70thvpHoABoLcdHwKR1BgAkhoDQFJjAEhqDABJ
      jQEgqTEAJDXPRXyT7ON9WG1r4Nt7dR9Si+kRrhHRiQsJwOb/Pkar2hz49qHJKANAF4IPgUhq
      QnuA7mqDoih96w6KorzeWhFdEIEA2Fj7eQWGqiMZbCFfDeG9pTS+/+4R/JEgytkipjLXkLkx
      i5BfG90aE71BAgFQEIpEMBkO4bsH38GnpwErjnh6AU67hPRUEpXaEdbW13F/abHTBrVtGxAt
      xTkOTNMUW4ZoCAIBMJE7zCOu6fj009+hkK+jaqhw6gcIxDOITihImCbyRw2o6tlTC1VVAdGH
      RIoCj8e9avsPNuHY9sAj/NEgJm9nxL4vSUcgAF788sPlzqWJVAwAEH7nrutWieQbWa8eW396
      DNscPADxGykGgF6JR4FIagwASY0BIKldyCvBbwPHcWA220LLKJoKj+/sLhpmhqqp0HzS3M1j
      R5rfjG3Z+PpfPhdaJnU7gzt//0HncqvWxDf/+oXQjMz9WSx+er9z2WqbqOWOhWb4wjoCUV1o
      GRqMNAF4WzSP6nj4H/8ntMyNjxYx/zfvjmiN5MbnACQ1BoCkxgCQ1BgAkhrr0CQ14Tp0Uw1A
      RxMNJ4D778721qFnZxHysQ5N40G4Dj2dmEKtlMVkYgqwmufq0BMndejVddy/M4I6tPAI9wzb
      HPyc5JfNsIaYYXfPsIaYYdush4+IWB06m0db8eI4n0dU8UOLhzt16NiI69AQHuGeYYkO6DfD
      I75nU7tmaNoQM1TVNaNVM9ButIRm6PEg1CHW/6oTq0Mvv6hDX5/pXHu+Dh3C6OrQdGb/wQb2
      /n9DaJnlP/wWwWRkRGs0vvhKsKR2v11HcTMrtMzdf1iGN+Ab0RpdDgZAUo1yDcfPikLLOPbV
      +7wHvg5AUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaXwijoa39z48o7eSFlvnwD7+For49
      f3eF6tCrKytQQ3G0Knno8Qzmr6Xw+Kcf4Y8mUCkUMJ2ZQTiZYh1aEq2agWa5JrSMA+Fe40gJ
      1aFTU5NoWhZ8agZmuwGYVQSSc3CMLBQFODg8hF43sDh/nXXo0+87gjq0PUQlwbIs14x+JzK9
      coZpwjTP/rg5zuDv1Xo2w4Ktii83KkJ16Cc/ryKzsIhKYQ+BxDSqTaCa3UAgPo35uSRKlSrK
      NYN16HNGUYdWVfGfRdM014xhztrTPJ6uGeIPZTSP5to+LptQHfrjv/3NyT+vnX1+171fnb1x
      VCSRwuybWjOiC/D2RJHoEvAoEF2qlf/8FsfPSgPfXvN58NE//s51ndkyxZ5nKkrnPV8ZALpU
      ZrMtdHqnbfU+gX74739CvVAZeIY/quPXf/wUAB8CkeQYAJIaA0BSYwBIagwASY0BIKkxACQ1
      BoCkJvRC2OqTHzAzt4Ttpz/CH5/GrRvTrEPTWBMKwNRkCpZlwzBagNHqW4cO1A3cZh367Puy
      Dt01w12HFl6PvtuG6Ax0ZgidELOzuQVP3ICqeqHA7qlDl1mH7sE6dPcMdx1aeD36bhuiM9CZ
      IRAAFfeX//rFv+c713bXoW+IrQrRpbqQMpxX9wm9sapX730HYm/QD9scfJfrCXhdl5UXM7q1
      68bAM+nqGXkA2u02Uu9k4Ay48dq2DX840Hn87fWebMjpX9wYOES2bcMf1WHbNgzDgK7rsBwb
      E0tpqKoKBQoURYGqqtj989qVfNdjGsxIA2DbNr744gsEmhomIkm0Wi3kywWk4hPwer2oN+pI
      RBMoHpeQjMaRLxehqSqS2gSq1SoePnyI5eVleDwe1JsN1Go1hIIhtNotVOs1TE9MIlvIYSKe
      ROm4jEQ0Do/mQblShm2UcfSkDr/fj4WFBaysrODZzjYcAB5Nw0Q8iVR8YpQ/Po2Bkb8OMDMz
      g2whh3wpj5WNx/B5fdA0DVv727BtG0+3V9Fut7CffY7N/S3kyyfvWb++vo7j42Nks1msrKxg
      dXsN63ub2H62g3a7jc39LaxsPEHbMvHz5lNs7G2hYTShqioS0QS8mgfVahV7e3tot9vIZDKo
      1CtIRGIAgM29LdQa9VH/+PSWG+keQFEUzM7O4ni7AK/iQSaVRjgYhtEycCN9HdliDtemZhAM
      6Kg3G2i1W0jGEvB5fUhcn8LS0hKazSYAwElfR6FUxFRyEj6vF6n4BMLBML5/8ggf3PkVjqvH
      UBQFlmUhXy6g0q7hl79ZxuHhIRqNBmzbRnpiGtMTU4iGI9A0DX7v1fq0ExI30gAcHBzAtm3Y
      NRM1owEVQKVZBgDUAHihonxYRPnF7X3QUM0fo220cWPSj0ajAeDkMGA5W4JqOcg/y3Zua5Tr
      WJyYQ7NUgw8aCs9yKLyYFUmG0Ww2EYvFcHR0BNuyYVXb2K5uncwEsLOxjWIpB7zkOYCZVxHe
      3e1cbtUMZEs5sTsh54d/N965WC9WhWd4siFou8HO5efZA+EZe/v70GuhzuWD3AFyojP29lwH
      KA7yhyiJztjdg3LuMO5BIYtKSeyUyN1zvxMAOCxm0ShVB57hN/XOjJEGIBI5+VC2dq6BVq05
      8HKetopYLOa6rnVQfelRIAO9p9Tpmt81wzYtGM9776SQP9hz3alIMOya0fI0EdJDL7193xkh
      9wyPqYrPCEdcM8rhCI4FZ8SiUeix8Ln1iqAuPCMGb/AsAJFQGC1d7I2xYrGYKwDhYAi2Pvgp
      kZrP07NthPUQVH3wAxl+Xe/MGGkAwuEwVFVFSA/Caw3+dCOkBxGNRt3XBYJCh0FDesg1wzIt
      hAIv39j7zgi6ZxiqV3hGuGuG1sIQM8KuGeFgSHhGJBJBMHr2KZGhYWZEI/CdO5Qc0kNoDjHj
      /AthYT0EKzD4oWjN5+ndNvQQlMDg24Zf1zszWIYjqTEAJDUGgKQmFID93S0YbRvPdzZxkC8D
      cLC7uYps8Qjrq09Rq1ZQb4m3HYkui9CTYJ9XQdMwsLG1g8VfJAGzirYWQ6u4i1y2grphIpGa
      QmAqyTr06fdlHbprxhjXoY9KZXisIOKJJA6fP0MsOINaOQdfMIT79zLY2j9EoZDH9XSqsxTr
      0KxDu2eMbR1awVRmFoo3gHRyAdB80BTg9uI8NF8AKhzceTeGJh8C0RgRCkA0nui59rSteSqo
      8+1GaXzwKBBJjQEgqTEAJDUGgKTGAJDU+gbgq6++uuj1ILoUfQPwzTff4OHDhxe9LkQX7qUP
      gT7//HN8+eWXF7gqRBev76tWn3322UWvB9Gl6BuAhYWFTknJgXANh2hsvOQhkIV/+6d/xn/9
      91eus21P69DNWgkHuSO46tBPn7AOTWPnJcUdBbfuv4N8S3XdwOdVYLRtFA6foW3FkU6oZ3Xo
      3MnGzzq0G+vQ3TPGoA5deL6Jb39Yw435W7ABnPzINo5KJWiGimKpgkbLwuy1cE8dOs86tAvr
      0N0zxqAOPZG5iXu3ZlDz+c9tNgqmMnNQvQHcnLsO07TgOKxD03h7yUMgB6rjoJAv42xn5a5D
      nybI63WPYB2axknfrXVt5RHqgThuhvlRR3S19X0Qt7G2hdr+GnaPTZaF6Erruwf45Pd/h7Zp
      AYoK7gPoKuv7B75WKmPlx+/x528fgU9p6Srrfxj0uIrJiQyWb9/iHoCutL4ByO1vYPt5ARvP
      cvjkk48v5oPEiC5B3217OpNG1VSgir78SjRm+j4HuHXnHlSzjaNiEeIvdhONj757gIPdHaTS
      04grOp8D0JXWdw9gVOvY3t7E6uomjwLRldZ3DzB35y70eBTHddu1B9jf3UIqPYuDnTV4IynM
      TCWwu7kGf2wKlfwB0jMzUHxBBH3cb9B46BsAo1nHw+9/wq2lu67rT+vQqclJZMs1wPSyDv0K
      rEN3zxiDOvTKw+8Rn0xhfW0TszdnX1x7Uof2WEEU9jcwu7iEZstmHfoVWIfunjEGdehGw8DS
      ++/hwddfu9qgU5l5qF4fkqF3ofp80Lxe1qFprPUNwEcf/xo//PgYd5c/wtmHYiqIxk8/7/bs
      kwFZh6Zx1ndr9QbC+ODDDy96XYguHNvOJDUGgKTGAJDUGACSGgNAUmMASGoMAEmNASCpMQAk
      NaEAnL479M7GKnKlCvju0DTuhIo7Pq+KptGArQZxXMxhMgLWoV+BdejuGWNQh+7PxlGpCI8Z
      QPU4D28w+qIOnXXXofOsQ5/HOnT3jDGoQ79sqamZeageP9LJEDRfAHAc3F686a5Dt/kQiMaH
      UACisXjPtT11aI11aBofPApEUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSYwBIauIB
      cBwclQqoN9sAgMpRCc2WiXKpCMsy0bb4qTI0PoSLO45jYXt7B95gFHduzWB3PwfNs4dKqYlQ
      LIn5hTl41POV2eECMexy5ya4Z7yJ9RhihNM1Y9gf63XvD8d5A/ep03WfDnmHvP7P8vp/ZE9n
      iAcAFhzLge0AcCz4g1E4Vg2ZaR25oypWHj/F+/eWOucDKIoy1PkAPb158RGuGbYl3l13utbD
      sl9/hm0Pc06B7Z4xxAZg2+4ZQ50PYNtQXTOER8CyLCjOWX15mPMBercN8fMBTmcIB0BRvIjH
      wwjEJlBtKtDVOgLJNAKag+SkjdxRw9X3fnvOBxDf8HpmaG3hGW/kfACl63yAYbr8mvr65wO8
      kXMKxvZ8gNPvpWLu1judy+Hwguv/Z0NR0ZFEl4ZHgUhqDABJjQEgqTEAJDUGgKTGAJDUGACS
      GgNAUmMASGoMAEltqADUK0eo1BoATurQDdahaUyJt0FtE+sbW5i7dRuwGj116DnWobvWgnVo
      94y3qw4tvAdwHBv1Wg0bm9udOrSmBZGZTsAwqvj58dPO26JblnVSOx2y8nr+a9g69NnX8FXm
      ztdr1KFPv16nDt2Z8Rp16NOvYevQ7hnCI3p+r8PWod3bxkXWoVUv5mZngECMdegBsA7dNWP8
      69AK0tfnO5dZh6ZxxqNAJDUGgKTGAJDUGACSGgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNSG
      +Fh3B9ln68hXddy9PYVHDx4hEI3gqFDGdDqDifQMQn7xwhfRZRAOgG02sbl7AM07CZhhRKcX
      4LSLiIYCKJaLqDRbuHP7ZufdoW3bHqoObZpm13WiI9wzbFO8Ddo9wxpiht09o/udjQeZYdvu
      n8UeospsWa4ZQ9WhTROmef5cD/F6uGVasNWz5YapQ/duG+J16NMZQ9ShfVh6dwmlchtVQ0Xr
      aBuBeAbXridQNwwUKsZbWocWr+72zPAMU2V+A3VotasOrV5WldnTNUP8EfT416FVDbF4CrH4
      yeV37r7X+b8wgKlp0YlEl4dPgklqDABJjQEgqTEAJDUGgKTGAJDUGACSGgNAUmMASGoMAEmN
      ASCpib87tONg/clPaGth3Fm8xjo0jTXxMhyAaCwBTY8CZp116FdgHbp7xpjXoR3Hwv7eHpKZ
      Ofg9oZ46dJF1aBfWobtnjH0d2oP3P/qrzmXWoWmc8UkwSY0BIKkxACQ1BoCkxgCQ1BgAkhoD
      QFL7C7rOravJa4CwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top waste percent' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
