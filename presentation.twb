<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='16.9'>
        <calculation class='tableau' formula='16.9' />
      </column>
    </datasource>
    <datasource caption='food_banks_USA.csv+ (Multiple Connections)' inline='true' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MMG2020_2018county' name='textscan.00u036v1pp693e13iwpg008qjvoe'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data/Map the Meal Gap data' filename='MMG2020_2018county.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_banks_by_state' name='textscan.16xqeu61wkjun51ghzj4c1f1mpor'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_banks_by_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_banks_USA' name='textscan.0hucxfp1l2de8313xbg701cg463q'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_banks_USA.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_pop_state' name='textscan.0xru2a60yw3aqc1054uze0qtbh6y'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_pop_state.csv' password='' server='' />
          </named-connection>
          <named-connection caption='fi_rates_5yr' name='textscan.0yr55cu1lrxejt19knwo01wvbphj'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='fi_rates_5yr.csv' password='' server='' />
          </named-connection>
          <named-connection caption='median_income_hh' name='textscan.1t6fwrc0iizon815jfgrj0s5an48'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='median_income_hh.csv' password='' server='' />
          </named-connection>
          <named-connection caption='income_18' name='textscan.0jdg3q00eshtd111cyluk0ftwobt'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='income_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='food_waste_percents' name='textscan.0qhuosv1ywr38214aputw0ie78av'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='food_waste_percents.csv' password='' server='' />
          </named-connection>
          <named-connection caption='financials_18' name='textscan.187vbbv0393s1b14vpfnz0jrf6vh'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='financials_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child_poverty_18' name='textscan.1kd29ao0d5cczz0zwx9790l7a5o3'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child_poverty_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='income_18 (2)' name='textscan.00krgsn0wuxld51cqa8f71ry5lof'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='income_18.csv' password='' server='' />
          </named-connection>
          <named-connection caption='child poverty by race' name='textscan.0g5bcoy0feqird12y8to60lp2xe8'>
            <connection class='textscan' directory='C:/Users/rgher/Documents/my github projects/USA_children_food_insecurity/data' filename='child poverty by race.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='FIPS' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County, State' ordinal='2' />
            <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
            <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
            <column datatype='real' name='Low Threshold in state' ordinal='5' />
            <column datatype='string' name='Low Threshold Type' ordinal='6' />
            <column datatype='real' name='High Threshold in state' ordinal='7' />
            <column datatype='string' name='High Threshold Type' ordinal='8' />
            <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
            <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
            <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
            <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
            <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
            <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
            <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
            <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
            <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0hucxfp1l2de8313xbg701cg463q' name='food_banks_USA.csv' table='[food_banks_USA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Organization' ordinal='0' />
              <column datatype='string' name='Address' ordinal='1' />
              <column datatype='string' name='City' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='zipcode' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018state.csv' table='[MMG2020_2018state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='State Name' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='real' name='2018 Food Insecurity Rate' ordinal='3' />
              <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
              <column datatype='real' name='Low Threshold in state' ordinal='5' />
              <column datatype='string' name='Low Threshold Type' ordinal='6' />
              <column datatype='real' name='High Threshold in state' ordinal='7' />
              <column datatype='string' name='High Threshold Type' ordinal='8' />
              <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
              <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
              <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
              <column datatype='real' name='2018 Child Food Insecurity Rate' ordinal='12' />
              <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
              <column datatype='real' name='% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016' ordinal='14' />
              <column datatype='real' name='% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016' ordinal='15' />
              <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
              <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='FIPS' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='County, State' ordinal='2' />
              <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
              <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
              <column datatype='real' name='Low Threshold in state' ordinal='5' />
              <column datatype='string' name='Low Threshold Type' ordinal='6' />
              <column datatype='real' name='High Threshold in state' ordinal='7' />
              <column datatype='string' name='High Threshold Type' ordinal='8' />
              <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
              <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
              <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
              <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
              <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
              <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
              <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
              <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
              <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0xru2a60yw3aqc1054uze0qtbh6y' name='child_pop_state.csv' table='[child_pop_state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='integer' name='count' ordinal='2' />
              <column datatype='integer' name='num_food_ins_children' ordinal='3' />
              <column datatype='real' name='child_fi_rate' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1kd29ao0d5cczz0zwx9790l7a5o3' name='child_poverty_18.csv' table='[child_poverty_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='string' name='dataform' ordinal='2' />
              <column datatype='real' name='amount' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0yr55cu1lrxejt19knwo01wvbphj' name='fi_rates_5yr.csv' table='[fi_rates_5yr#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state_name' ordinal='0' />
              <column datatype='real' name='fi_18' ordinal='1' />
              <column datatype='real' name='fi_17' ordinal='2' />
              <column datatype='real' name='fi_16' ordinal='3' />
              <column datatype='real' name='fi_15' ordinal='4' />
              <column datatype='real' name='fi_14' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.187vbbv0393s1b14vpfnz0jrf6vh' name='financials_18.csv' table='[financials_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='weighted_annual_dollars' ordinal='1' />
              <column datatype='real' name='dollars_waste' ordinal='2' />
              <column datatype='integer' name='income' ordinal='3' />
              <column datatype='real' name='perc_waste' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.00krgsn0wuxld51cqa8f71ry5lof' name='food_waste_18.csv' table='[food_waste_18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='real' name='tons_surplus' ordinal='1' />
              <column datatype='real' name='us_dollars_surplus' ordinal='2' />
              <column datatype='real' name='tons_waste' ordinal='3' />
              <column datatype='real' name='dollar_per_ton' ordinal='4' />
              <column datatype='real' name='us_dollars_waste' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[# of Food Insecure Children in 2018]' />
          <map key='[# of Food Insecure Children in 2018]' value='[MMG2020_2018state.csv].[# of Food Insecure Children in 2018]' />
          <map key='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[# of Food Insecure Persons in 2018]' />
          <map key='[# of Food Insecure Persons in 2018]' value='[MMG2020_2018state.csv].[# of Food Insecure Persons in 2018]' />
          <map key='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI &gt; High Threshold]' />
          <map key='[% FI &gt; High Threshold]' value='[MMG2020_2018state.csv].[% FI &gt; High Threshold]' />
          <map key='[% FI ? Low Threshold (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI ? Low Threshold]' />
          <map key='[% FI ? Low Threshold]' value='[MMG2020_2018state.csv].[% FI ? Low Threshold]' />
          <map key='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[% FI Btwn Thresholds]' />
          <map key='[% FI Btwn Thresholds]' value='[MMG2020_2018state.csv].[% FI Btwn Thresholds]' />
          <map key='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' value='[MMG2020_2018state.csv].[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' />
          <map key='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' value='[MMG2020_2018state.csv].[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' />
          <map key='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' value='[MMG2020_2018county.csv].[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' />
          <map key='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' value='[MMG2020_2018county.csv].[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' />
          <map key='[2018 Child Food Insecurity Rate]' value='[MMG2020_2018state.csv].[2018 Child Food Insecurity Rate]' />
          <map key='[2018 Child food insecurity rate]' value='[MMG2020_2018county.csv].[2018 Child food insecurity rate]' />
          <map key='[2018 Cost Per Meal (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Cost Per Meal]' />
          <map key='[2018 Cost Per Meal]' value='[MMG2020_2018state.csv].[2018 Cost Per Meal]' />
          <map key='[2018 Food Insecurity Rate (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Food Insecurity Rate]' />
          <map key='[2018 Food Insecurity Rate]' value='[MMG2020_2018state.csv].[2018 Food Insecurity Rate]' />
          <map key='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[2018 Weighted Annual Food Budget Shortfall]' />
          <map key='[2018 Weighted Annual Food Budget Shortfall]' value='[MMG2020_2018state.csv].[2018 Weighted Annual Food Budget Shortfall]' />
          <map key='[Address]' value='[food_banks_USA.csv].[Address]' />
          <map key='[City]' value='[food_banks_USA.csv].[City]' />
          <map key='[County, State]' value='[MMG2020_2018county.csv].[County, State]' />
          <map key='[FIPS (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[FIPS]' />
          <map key='[FIPS]' value='[MMG2020_2018state.csv].[FIPS]' />
          <map key='[High Threshold Type (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[High Threshold Type]' />
          <map key='[High Threshold Type]' value='[MMG2020_2018state.csv].[High Threshold Type]' />
          <map key='[High Threshold in state (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[High Threshold in state]' />
          <map key='[High Threshold in state]' value='[MMG2020_2018state.csv].[High Threshold in state]' />
          <map key='[Low Threshold Type (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[Low Threshold Type]' />
          <map key='[Low Threshold Type]' value='[MMG2020_2018state.csv].[Low Threshold Type]' />
          <map key='[Low Threshold in state (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[Low Threshold in state]' />
          <map key='[Low Threshold in state]' value='[MMG2020_2018state.csv].[Low Threshold in state]' />
          <map key='[Organization]' value='[food_banks_USA.csv].[Organization]' />
          <map key='[State (MMG2020_2018county.csv)]' value='[MMG2020_2018county.csv].[State]' />
          <map key='[State Name]' value='[MMG2020_2018state.csv].[State Name]' />
          <map key='[State]' value='[MMG2020_2018state.csv].[State]' />
          <map key='[amount]' value='[child_poverty_18.csv].[amount]' />
          <map key='[child_fi_rate]' value='[child_pop_state.csv].[child_fi_rate]' />
          <map key='[count]' value='[child_pop_state.csv].[count]' />
          <map key='[dataform]' value='[child_poverty_18.csv].[dataform]' />
          <map key='[dollar_per_ton]' value='[food_waste_18.csv].[dollar_per_ton]' />
          <map key='[dollars_waste]' value='[financials_18.csv].[dollars_waste]' />
          <map key='[fi_14]' value='[fi_rates_5yr.csv].[fi_14]' />
          <map key='[fi_15]' value='[fi_rates_5yr.csv].[fi_15]' />
          <map key='[fi_16]' value='[fi_rates_5yr.csv].[fi_16]' />
          <map key='[fi_17]' value='[fi_rates_5yr.csv].[fi_17]' />
          <map key='[fi_18]' value='[fi_rates_5yr.csv].[fi_18]' />
          <map key='[income]' value='[financials_18.csv].[income]' />
          <map key='[location]' value='[child_pop_state.csv].[location]' />
          <map key='[num_food_ins_children]' value='[child_pop_state.csv].[num_food_ins_children]' />
          <map key='[perc_waste]' value='[financials_18.csv].[perc_waste]' />
          <map key='[state (child_poverty_18.csv)]' value='[child_poverty_18.csv].[state]' />
          <map key='[state (financials_18.csv)]' value='[financials_18.csv].[state]' />
          <map key='[state (food_waste_18.csv)]' value='[food_waste_18.csv].[state]' />
          <map key='[state]' value='[food_banks_USA.csv].[state]' />
          <map key='[state_name]' value='[fi_rates_5yr.csv].[state_name]' />
          <map key='[tons_surplus]' value='[food_waste_18.csv].[tons_surplus]' />
          <map key='[tons_waste]' value='[food_waste_18.csv].[tons_waste]' />
          <map key='[us_dollars_surplus]' value='[food_waste_18.csv].[us_dollars_surplus]' />
          <map key='[us_dollars_waste]' value='[food_waste_18.csv].[us_dollars_waste]' />
          <map key='[weighted_annual_dollars]' value='[financials_18.csv].[weighted_annual_dollars]' />
          <map key='[year (child_poverty_18.csv)]' value='[child_poverty_18.csv].[year]' />
          <map key='[year]' value='[child_pop_state.csv].[year]' />
          <map key='[zipcode]' value='[food_banks_USA.csv].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Organization</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Organization]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>Organization</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[food_banks_USA.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Food Insecurity Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Food Insecurity Rate]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Food Insecurity Rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Persons in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Persons in 2018]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias># of Food Insecure Persons in 2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low Threshold in state]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>Low Threshold in state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Low Threshold Type]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>Low Threshold Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High Threshold in state]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>High Threshold in state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High Threshold Type]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>High Threshold Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI ? Low Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI ? Low Threshold]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI ? Low Threshold</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI Btwn Thresholds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI Btwn Thresholds]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI Btwn Thresholds</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI &gt; High Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI &gt; High Threshold]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% FI &gt; High Threshold</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Child Food Insecurity Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Child Food Insecurity Rate]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Child Food Insecurity Rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Children in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Children in 2018]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias># of Food Insecure Children in 2018</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Cost Per Meal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Cost Per Meal]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Cost Per Meal</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Weighted Annual Food Budget Shortfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Weighted Annual Food Budget Shortfall]</local-name>
            <parent-name>[MMG2020_2018state.csv]</parent-name>
            <remote-alias>2018 Weighted Annual Food Budget Shortfall</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County, State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County, State]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>County, State</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Food Insecurity Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2018 Food Insecurity Rate (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Food Insecurity Rate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Persons in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias># of Food Insecure Persons in 2018</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low Threshold in state (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>Low Threshold in state</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Low Threshold Type (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>Low Threshold Type</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold in state</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High Threshold in state (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>High Threshold in state</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High Threshold Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High Threshold Type (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>High Threshold Type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI ? Low Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI ? Low Threshold (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI ? Low Threshold</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI Btwn Thresholds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI Btwn Thresholds (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI Btwn Thresholds</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% FI &gt; High Threshold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% FI &gt; High Threshold (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% FI &gt; High Threshold</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Child food insecurity rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Child food insecurity rate]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Child food insecurity rate</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># of Food Insecure Children in 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias># of Food Insecure Children in 2018</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure children in HH w/ HH incomes below 185 FPL in 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% food insecure children in HH w/ HH incomes below 185 FPL in 2018</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% food insecure children in HH w/ HH incomes above 185 FPL in 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>% food insecure children in HH w/ HH incomes above 185 FPL in 2018</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Cost Per Meal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Cost Per Meal (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Cost Per Meal</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Weighted Annual Food Budget Shortfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]</local-name>
            <parent-name>[MMG2020_2018county.csv]</parent-name>
            <remote-alias>2018 Weighted Annual Food Budget Shortfall</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_food_ins_children</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_food_ins_children]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>num_food_ins_children</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>child_fi_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[child_fi_rate]</local-name>
            <parent-name>[child_pop_state.csv]</parent-name>
            <remote-alias>child_fi_rate</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (child_poverty_18.csv)]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (child_poverty_18.csv)]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dataform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dataform]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>dataform</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[amount]</local-name>
            <parent-name>[child_poverty_18.csv]</parent-name>
            <remote-alias>amount</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_18]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_18</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_17]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_17</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_16]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_16</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_15]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_15</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fi_14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fi_14]</local-name>
            <parent-name>[fi_rates_5yr.csv]</parent-name>
            <remote-alias>fi_14</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (financials_18.csv)]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weighted_annual_dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weighted_annual_dollars]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>weighted_annual_dollars</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars_waste]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>dollars_waste</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_waste]</local-name>
            <parent-name>[financials_18.csv]</parent-name>
            <remote-alias>perc_waste</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (food_waste_18.csv)]</local-name>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tons_surplus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tons_surplus]</local-name>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias>tons_surplus</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_dollars_surplus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[us_dollars_surplus]</local-name>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias>us_dollars_surplus</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tons_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tons_waste]</local-name>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias>tons_waste</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollar_per_ton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollar_per_ton]</local-name>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias>dollar_per_ton</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_dollars_waste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[us_dollars_waste]</local-name>
            <parent-name>[food_waste_18.csv]</parent-name>
            <remote-alias>us_dollars_waste</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# of Food Insecure Children in 2018 (MMG2020 2018county.csv)' datatype='integer' name='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[# of Food Insecure Children in 2018]' role='measure' type='quantitative' />
      <column caption='# of Food Insecure Persons in 2018 (MMG2020 2018county.csv)' datatype='integer' name='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[# of Food Insecure Persons in 2018]' role='measure' type='quantitative' />
      <column caption='% FI &gt; High Threshold (MMG2020 2018county.csv)' datatype='real' name='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI &gt; High Threshold]' role='measure' type='quantitative' />
      <column caption='% FI ? Low Threshold (MMG2020 2018county.csv)' datatype='real' name='[% FI ? Low Threshold (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI ? Low Threshold]' role='measure' type='quantitative' />
      <column caption='% FI Btwn Thresholds (MMG2020 2018county.csv)' datatype='real' name='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% FI Btwn Thresholds]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
      <column caption='2018 Cost Per Meal (MMG2020 2018county.csv)' datatype='real' name='[2018 Cost Per Meal (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Cost Per Meal]' role='measure' type='quantitative' />
      <column caption='2018 Food Insecurity Rate (MMG2020 2018county.csv)' datatype='string' name='[2018 Food Insecurity Rate (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[2018 Food Insecurity Rate]' role='measure' type='quantitative' />
      <column caption='2018 Weighted Annual Food Budget Shortfall (MMG2020 2018county.csv)' datatype='real' name='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018 Weighted Annual Food Budget Shortfall]' role='measure' type='quantitative' />
      <column datatype='string' name='[Address]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([child_fi_rate])) / LOOKUP(ZN(SUM([child_fi_rate])), -1)'>
          <table-calc ordering-field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[location]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[County, State - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
      </column>
      <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='FIPS (MMG2020 2018county.csv)' datatype='integer' name='[FIPS (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='High Threshold Type (MMG2020 2018county.csv)' datatype='string' name='[High Threshold Type (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='High Threshold in state (MMG2020 2018county.csv)' datatype='real' name='[High Threshold in state (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[High Threshold in state]' role='measure' type='quantitative' />
      <column caption='Location1' datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Low Threshold Type (MMG2020 2018county.csv)' datatype='string' name='[Low Threshold Type (MMG2020_2018county.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Low Threshold in state (MMG2020 2018county.csv)' datatype='real' name='[Low Threshold in state (MMG2020_2018county.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low Threshold in state]' role='measure' type='quantitative' />
      <column caption='State (MMG2020 2018county.csv)' datatype='string' name='[State (MMG2020_2018county.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='MMG2020_2018county.csv' datatype='table' name='[__tableau_internal_object_id__].[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='MMG2020_2018state.csv' datatype='table' name='[__tableau_internal_object_id__].[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child_pop_state.csv' datatype='table' name='[__tableau_internal_object_id__].[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child_poverty_18.csv' datatype='table' name='[__tableau_internal_object_id__].[child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fi_rates_5yr.csv' datatype='table' name='[__tableau_internal_object_id__].[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='financials_18.csv' datatype='table' name='[__tableau_internal_object_id__].[financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='food_waste_18.csv' datatype='table' name='[__tableau_internal_object_id__].[food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466]' role='measure' type='quantitative' />
      <column caption='% Children in Poverty' datatype='real' name='[amount]' role='measure' type='quantitative' />
      <column caption='Child Fi Rate' datatype='real' name='[child_fi_rate]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Dataform' datatype='string' name='[dataform]' role='dimension' type='nominal' />
      <column caption='Dollar Per Ton' datatype='real' name='[dollar_per_ton]' role='measure' type='quantitative' />
      <column caption='Dollars Waste' datatype='real' name='[dollars_waste]' role='measure' type='quantitative' />
      <column caption='Fi 14' datatype='real' name='[fi_14]' role='measure' type='quantitative' />
      <column caption='Fi 15' datatype='real' name='[fi_15]' role='measure' type='quantitative' />
      <column caption='Fi 16' datatype='real' name='[fi_16]' role='measure' type='quantitative' />
      <column caption='Fi 17' datatype='real' name='[fi_17]' role='measure' type='quantitative' />
      <column caption='Fi 18' datatype='real' name='[fi_18]' role='measure' type='quantitative' />
      <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Num Food Ins Children' datatype='integer' name='[num_food_ins_children]' role='measure' type='quantitative' />
      <column caption='Perc Waste' datatype='real' name='[perc_waste]' role='measure' type='quantitative' />
      <column caption='State (Child Poverty 18.Csv)' datatype='string' name='[state (child_poverty_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Financials 18.Csv)' datatype='string' name='[state (financials_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (Food Waste 18.Csv)' datatype='string' name='[state (food_waste_18.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AK&quot;' value='Alaska' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;DE&quot;' value='Delaware' />
          <alias key='&quot;MS&quot;' value='Mississippi' />
          <alias key='&quot;ND&quot;' value='North Dakota' />
          <alias key='&quot;NE&quot;' value='Nebraska' />
          <alias key='&quot;NV&quot;' value='Nevada' />
          <alias key='&quot;RI&quot;' value='Rhode Island' />
          <alias key='&quot;VT&quot;' value='Vermont' />
          <alias key='&quot;WY&quot;' value='Wyoming' />
        </aliases>
      </column>
      <column caption='State Name1' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tons Surplus' datatype='real' name='[tons_surplus]' role='measure' type='quantitative' />
      <column caption='Tons Waste' datatype='real' name='[tons_waste]' role='measure' type='quantitative' />
      <column caption='Us Dollars Surplus' datatype='real' name='[us_dollars_surplus]' role='measure' type='quantitative' />
      <column caption='Us Dollars Waste' datatype='real' name='[us_dollars_waste]' role='measure' type='quantitative' />
      <column caption='Weighted Annual Dollars' datatype='real' name='[weighted_annual_dollars]' role='measure' type='quantitative' />
      <column caption='Year (Child Poverty 18.Csv)' datatype='integer' name='[year (child_poverty_18.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='Attribute' name='[attr:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[fi_14]' derivation='None' name='[none:fi_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_15]' derivation='None' name='[none:fi_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[# of Food Insecure Children in 2018 (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:# of Food Insecure Children in 2018 (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Children in 2018]' derivation='Sum' name='[sum:# of Food Insecure Children in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Persons in 2018 (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:# of Food Insecure Persons in 2018 (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# of Food Insecure Persons in 2018]' derivation='Sum' name='[sum:# of Food Insecure Persons in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI &gt; High Threshold (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI &gt; High Threshold (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI &gt; High Threshold]' derivation='Sum' name='[sum:% FI &gt; High Threshold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI ? Low Threshold (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI ? Low Threshold (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI ? Low Threshold]' derivation='Sum' name='[sum:% FI ? Low Threshold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI Btwn Thresholds (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:% FI Btwn Thresholds (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% FI Btwn Thresholds]' derivation='Sum' name='[sum:% FI Btwn Thresholds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016]' derivation='Sum' name='[sum:% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016]' derivation='Sum' name='[sum:% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure children in HH w/ HH incomes above 185 FPL in 2018]' derivation='Sum' name='[sum:% food insecure children in HH w/ HH incomes above 185 FPL in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% food insecure children in HH w/ HH incomes below 185 FPL in 2018]' derivation='Sum' name='[sum:% food insecure children in HH w/ HH incomes below 185 FPL in 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Cost Per Meal (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:2018 Cost Per Meal (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Cost Per Meal]' derivation='Sum' name='[sum:2018 Cost Per Meal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018 Weighted Annual Food Budget Shortfall]' derivation='Sum' name='[sum:2018 Weighted Annual Food Budget Shortfall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:FIPS (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[FIPS]' derivation='Sum' name='[sum:FIPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Threshold in state (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:High Threshold in state (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Threshold in state]' derivation='Sum' name='[sum:High Threshold in state:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low Threshold in state (MMG2020_2018county.csv)]' derivation='Sum' name='[sum:Low Threshold in state (MMG2020_2018county.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low Threshold in state]' derivation='Sum' name='[sum:Low Threshold in state:qk]' pivot='key' type='quantitative' />
      <column-instance column='[child_fi_rate]' derivation='Sum' name='[sum:child_fi_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dollars_waste]' derivation='Sum' name='[sum:dollars_waste:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_14]' derivation='Sum' name='[sum:fi_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_15]' derivation='Sum' name='[sum:fi_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_16]' derivation='Sum' name='[sum:fi_16:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_17]' derivation='Sum' name='[sum:fi_17:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fi_18]' derivation='Sum' name='[sum:fi_18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[num_food_ins_children]' derivation='Sum' name='[sum:num_food_ins_children:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weighted_annual_dollars]' derivation='Sum' name='[sum:weighted_annual_dollars:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[location]' ordering-type='Field' />
      </column-instance>
      <group caption='Action (County,full state)' hidden='true' name='[Action (County,full state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[County, State - Split 1]' />
          <groupfilter function='level-members' level='[County, State - Split 2]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State,Zipcode)' hidden='true' name='[Action (State,Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='level-members' level='[zipcode]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.96562' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0343797' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>%null%</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:2018 Child food insecurity rate:ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>4.4640000000000004</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>4.6690000000000005</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>4.9249999999999989</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>5.6490000000000018</bucket>
            </map>
            <map to='#af123a'>
              <bucket>3.6649999999999996</bucket>
            </map>
            <map to='#af123a'>
              <bucket>3.9140000000000006</bucket>
            </map>
            <map to='#af123a'>
              <bucket>4.4169999999999998</bucket>
            </map>
            <map to='#b0123a'>
              <bucket>3.5490000000000004</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>3.2599999999999998</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>3.3519999999999999</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>2.7939999999999996</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>3.0939999999999999</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>3.2140000000000004</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>2.5380000000000003</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>2.5749999999999997</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>2.399</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.2880000000000003</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.3310000000000004</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>2.3450000000000002</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2200000000000002</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2469999999999999</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>2.2549999999999999</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1430000000000002</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1440000000000001</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>2.1850000000000001</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.1120000000000001</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.125</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>2.1309999999999998</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>2.1099999999999999</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>1.964</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>1.9909999999999997</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.853</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.8719999999999999</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>1.9550000000000001</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>1.7810000000000001</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>1.8029999999999999</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>1.7690000000000001</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.599</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.649</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>1.73</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.5429999999999999</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.5509999999999999</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>1.575</bucket>
            </map>
            <map to='#bc173a'>
              <bucket>1.5410000000000001</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>1.5230000000000001</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>1.5339999999999998</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.5</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.5069999999999999</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>1.512</bucket>
            </map>
            <map to='#be183a'>
              <bucket>1.4749999999999996</bucket>
            </map>
            <map to='#be183a'>
              <bucket>1.478</bucket>
            </map>
            <map to='#be193a'>
              <bucket>1.4699999999999998</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.407</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.4329999999999998</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>1.462</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3180000000000003</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3320000000000001</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>1.3500000000000001</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.2589999999999999</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.2670000000000001</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>1.274</bucket>
            </map>
            <map to='#c21a3b'>
              <bucket>1.2249999999999999</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.165</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.2120000000000002</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>1.22</bucket>
            </map>
            <map to='#c31b3b'>
              <bucket>1.161</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>1.0980000000000001</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>1.1150000000000002</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>1.0600000000000001</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>1.0680000000000001</bucket>
            </map>
            <map to='#c41d3b'>
              <bucket>1.054</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.0249999999999999</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.032</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>1.0410000000000001</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>1.01</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.97199999999999998</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.99399999999999999</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>0.998</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.92900000000000005</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.93400000000000005</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.93799999999999994</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>0.96999999999999997</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92000000000000004</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92100000000000004</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>0.92799999999999994</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>0.89900000000000002</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>0.90600000000000003</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>0.88900000000000001</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.84899999999999998</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.8650000000000001</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>0.86799999999999999</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>0.84700000000000009</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83400000000000007</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83699999999999997</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>0.83700000000000019</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.81699999999999995</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.82000000000000006</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>0.82799999999999996</bucket>
            </map>
            <map to='#cd233c'>
              <bucket>0.81400000000000006</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.80400000000000005</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.80699999999999994</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>0.81000000000000005</bucket>
            </map>
            <map to='#ce243c'>
              <bucket>0.79400000000000004</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>0.78600000000000003</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>0.78800000000000003</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>0.78400000000000014</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>0.78499999999999992</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>0.77700000000000002</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>0.78299999999999992</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>0.74800000000000011</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>0.749</bucket>
            </map>
            <map to='#d0273c'>
              <bucket>0.71900000000000008</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.70799999999999996</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.70999999999999996</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>0.71899999999999997</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.68199999999999994</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.68300000000000005</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.69299999999999995</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>0.70299999999999985</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67600000000000005</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67800000000000005</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>0.67900000000000005</bucket>
            </map>
            <map to='#d32a3d'>
              <bucket>0.67399999999999993</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.66499999999999992</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.66500000000000004</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>0.67200000000000004</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>0.66100000000000003</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>0.66200000000000003</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>0.65799999999999992</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>0.65999999999999992</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>0.63100000000000001</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>0.63900000000000001</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>0.626</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.61599999999999999</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.62</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>0.621</bucket>
            </map>
            <map to='#d72d3e'>
              <bucket>0.60699999999999998</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.59900000000000009</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.60199999999999998</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>0.60499999999999998</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.57700000000000007</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.58299999999999996</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.58399999999999996</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>0.59599999999999997</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57099999999999995</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57499999999999996</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57600000000000007</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>0.57699999999999996</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.56899999999999995</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.56999999999999995</bucket>
            </map>
            <map to='#da313f'>
              <bucket>0.57000000000000006</bucket>
            </map>
            <map to='#da323f'>
              <bucket>0.56400000000000006</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.55999999999999994</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.56299999999999994</bucket>
            </map>
            <map to='#db323f'>
              <bucket>0.56399999999999995</bucket>
            </map>
            <map to='#db333f'>
              <bucket>0.55700000000000005</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>0.55100000000000005</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>0.55499999999999994</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>0.54600000000000004</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>0.55000000000000004</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>0.53900000000000003</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>0.54299999999999993</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>0.53300000000000003</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>0.53800000000000003</bucket>
            </map>
            <map to='#de3540'>
              <bucket>0.52400000000000002</bucket>
            </map>
            <map to='#de3540'>
              <bucket>0.53200000000000003</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51500000000000001</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51600000000000001</bucket>
            </map>
            <map to='#de3640'>
              <bucket>0.51800000000000002</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.50600000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.50900000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.51100000000000001</bucket>
            </map>
            <map to='#df3740'>
              <bucket>0.5149999999999999</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.501</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.502</bucket>
            </map>
            <map to='#e03841'>
              <bucket>0.504</bucket>
            </map>
            <map to='#e03941'>
              <bucket>0.49900000000000005</bucket>
            </map>
            <map to='#e03941'>
              <bucket>0.5</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.495</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.498</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>0.499</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>0.49199999999999999</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>0.49299999999999999</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>0.49099999999999999</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48700000000000004</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48799999999999999</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>0.48899999999999999</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>0.48500000000000004</bucket>
            </map>
            <map to='#e33d42'>
              <bucket>0.48499999999999999</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>0.48199999999999998</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47300000000000003</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47499999999999998</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>0.47700000000000004</bucket>
            </map>
            <map to='#e33f43'>
              <bucket>0.47299999999999998</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>0.46999999999999997</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>0.47000000000000003</bucket>
            </map>
            <map to='#e44043'>
              <bucket>0.46800000000000003</bucket>
            </map>
            <map to='#e44044'>
              <bucket>0.46599999999999997</bucket>
            </map>
            <map to='#e44044'>
              <bucket>0.46699999999999997</bucket>
            </map>
            <map to='#e54144'>
              <bucket>0.46199999999999997</bucket>
            </map>
            <map to='#e54144'>
              <bucket>0.46299999999999997</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45799999999999996</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45900000000000007</bucket>
            </map>
            <map to='#e54244'>
              <bucket>0.45999999999999996</bucket>
            </map>
            <map to='#e64344'>
              <bucket>0.45700000000000007</bucket>
            </map>
            <map to='#e64345'>
              <bucket>0.45500000000000002</bucket>
            </map>
            <map to='#e64345'>
              <bucket>0.45599999999999996</bucket>
            </map>
            <map to='#e64445'>
              <bucket>0.44999999999999996</bucket>
            </map>
            <map to='#e64445'>
              <bucket>0.45200000000000001</bucket>
            </map>
            <map to='#e74445'>
              <bucket>0.44800000000000006</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44599999999999995</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44700000000000001</bucket>
            </map>
            <map to='#e74545'>
              <bucket>0.44800000000000001</bucket>
            </map>
            <map to='#e74645'>
              <bucket>0.44400000000000006</bucket>
            </map>
            <map to='#e84646'>
              <bucket>0.439</bucket>
            </map>
            <map to='#e84646'>
              <bucket>0.442</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.43700000000000006</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.43799999999999994</bucket>
            </map>
            <map to='#e84746'>
              <bucket>0.438</bucket>
            </map>
            <map to='#e84846'>
              <bucket>0.437</bucket>
            </map>
            <map to='#e94846'>
              <bucket>0.435</bucket>
            </map>
            <map to='#e94946'>
              <bucket>0.43400000000000005</bucket>
            </map>
            <map to='#e94947'>
              <bucket>0.43300000000000005</bucket>
            </map>
            <map to='#e94947'>
              <bucket>0.434</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>0.43200000000000005</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>0.43099999999999999</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>0.432</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42600000000000005</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42799999999999994</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>0.42999999999999999</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42399999999999999</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42400000000000004</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>0.42499999999999999</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>0.42099999999999993</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>0.42200000000000004</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>0.41699999999999998</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>0.42000000000000004</bucket>
            </map>
            <map to='#eb4e49'>
              <bucket>0.41699999999999993</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41199999999999998</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41400000000000003</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>0.41500000000000004</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>0.40700000000000003</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>0.41100000000000003</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>0.40699999999999997</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>0.40400000000000003</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>0.40600000000000003</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>0.40300000000000002</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>0.40399999999999997</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39700000000000002</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39799999999999996</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>0.39900000000000002</bucket>
            </map>
            <map to='#ed544a'>
              <bucket>0.39600000000000002</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>0.39300000000000002</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>0.39500000000000002</bucket>
            </map>
            <map to='#ed554b'>
              <bucket>0.39200000000000002</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>0.39000000000000001</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38799999999999996</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38800000000000001</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>0.38900000000000001</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>0.38600000000000001</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>0.38700000000000001</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>0.38200000000000001</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>0.38400000000000001</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>0.38100000000000001</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>0.376</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>0.378</bucket>
            </map>
            <map to='#ef594d'>
              <bucket>0.375</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>0.373</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>0.374</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>0.36799999999999999</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>0.371</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>0.36600000000000005</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>0.36599999999999999</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>0.36499999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36299999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36399999999999999</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>0.36400000000000005</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>0.35999999999999999</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>0.36199999999999999</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>0.35899999999999999</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>0.35699999999999998</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>0.35799999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35299999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35399999999999998</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>0.35499999999999998</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>0.34999999999999998</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>0.35199999999999998</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34499999999999997</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34599999999999997</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34799999999999998</bucket>
            </map>
            <map to='#f26250'>
              <bucket>0.34899999999999998</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34100000000000003</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34199999999999997</bucket>
            </map>
            <map to='#f26351'>
              <bucket>0.34200000000000003</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33700000000000002</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33800000000000002</bucket>
            </map>
            <map to='#f26452'>
              <bucket>0.33899999999999997</bucket>
            </map>
            <map to='#f26552'>
              <bucket>0.33699999999999997</bucket>
            </map>
            <map to='#f26553'>
              <bucket>0.33399999999999996</bucket>
            </map>
            <map to='#f26553'>
              <bucket>0.33400000000000002</bucket>
            </map>
            <map to='#f26653'>
              <bucket>0.33200000000000002</bucket>
            </map>
            <map to='#f26654'>
              <bucket>0.33100000000000002</bucket>
            </map>
            <map to='#f36654'>
              <bucket>0.33099999999999996</bucket>
            </map>
            <map to='#f36754'>
              <bucket>0.32900000000000001</bucket>
            </map>
            <map to='#f36755'>
              <bucket>0.32700000000000001</bucket>
            </map>
            <map to='#f36755'>
              <bucket>0.32899999999999996</bucket>
            </map>
            <map to='#f36855'>
              <bucket>0.32500000000000001</bucket>
            </map>
            <map to='#f36855'>
              <bucket>0.32600000000000001</bucket>
            </map>
            <map to='#f36856'>
              <bucket>0.32400000000000001</bucket>
            </map>
            <map to='#f36956'>
              <bucket>0.32200000000000001</bucket>
            </map>
            <map to='#f36956'>
              <bucket>0.32299999999999995</bucket>
            </map>
            <map to='#f36957'>
              <bucket>0.32199999999999995</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.31899999999999995</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.32000000000000001</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>0.32100000000000001</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>0.318</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>0.317</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>0.31799999999999995</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.314</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.315</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>0.316</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.31100000000000005</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.312</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>0.313</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>0.311</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>0.309</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>0.31</bucket>
            </map>
            <map to='#f46f5b'>
              <bucket>0.307</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>0.30499999999999999</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>0.30599999999999999</bucket>
            </map>
            <map to='#f4705c'>
              <bucket>0.30399999999999999</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>0.29999999999999999</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>0.30199999999999999</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>0.29799999999999999</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>0.29899999999999999</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>0.29700000000000004</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>0.29500000000000004</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>0.29699999999999999</bucket>
            </map>
            <map to='#f5725f'>
              <bucket>0.29499999999999998</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29199999999999998</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29200000000000004</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>0.29400000000000004</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.28899999999999998</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.28999999999999998</bucket>
            </map>
            <map to='#f57460'>
              <bucket>0.29100000000000004</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28600000000000003</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28699999999999998</bucket>
            </map>
            <map to='#f67561'>
              <bucket>0.28800000000000003</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28399999999999997</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28499999999999998</bucket>
            </map>
            <map to='#f67662'>
              <bucket>0.28500000000000003</bucket>
            </map>
            <map to='#f67762'>
              <bucket>0.28300000000000003</bucket>
            </map>
            <map to='#f67763'>
              <bucket>0.28100000000000003</bucket>
            </map>
            <map to='#f67763'>
              <bucket>0.28199999999999997</bucket>
            </map>
            <map to='#f67863'>
              <bucket>0.27899999999999997</bucket>
            </map>
            <map to='#f67863'>
              <bucket>0.28000000000000003</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27600000000000002</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27699999999999997</bucket>
            </map>
            <map to='#f67964'>
              <bucket>0.27800000000000002</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27399999999999997</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27400000000000002</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>0.27500000000000002</bucket>
            </map>
            <map to='#f77b65'>
              <bucket>0.27300000000000002</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>0.27100000000000002</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>0.27200000000000002</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>0.27099999999999996</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>0.26900000000000002</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>0.27000000000000002</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>0.26800000000000002</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>0.26899999999999996</bucket>
            </map>
            <map to='#f77d68'>
              <bucket>0.26700000000000002</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26400000000000001</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26500000000000001</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>0.26600000000000001</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>0.26200000000000001</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>0.26300000000000001</bucket>
            </map>
            <map to='#f88069'>
              <bucket>0.26100000000000001</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>0.25900000000000001</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>0.26000000000000001</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>0.25700000000000001</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>0.25800000000000001</bucket>
            </map>
            <map to='#f8816b'>
              <bucket>0.25600000000000001</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>0.254</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>0.255</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>0.253</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.25</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.251</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>0.252</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.247</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.248</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>0.249</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>0.24600000000000002</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>0.245</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>0.246</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>0.24399999999999999</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>0.24199999999999999</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>0.24299999999999999</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>0.23999999999999999</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>0.24100000000000002</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23799999999999999</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23800000000000002</bucket>
            </map>
            <map to='#f98870'>
              <bucket>0.23899999999999999</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23499999999999999</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23600000000000002</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>0.23699999999999999</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23199999999999998</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23300000000000001</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>0.23399999999999999</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>0.23100000000000001</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>0.23000000000000001</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>0.22800000000000001</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>0.22899999999999998</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>0.22799999999999998</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>0.22600000000000001</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>0.22699999999999998</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.22399999999999998</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.224</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>0.22500000000000001</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.221</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.222</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>0.223</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>0.21999999999999997</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>0.22</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>0.218</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>0.21899999999999997</bucket>
            </map>
            <map to='#fa9079'>
              <bucket>0.217</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>0.216</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>0.21600000000000003</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.21299999999999999</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.214</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>0.215</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.20999999999999999</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.21100000000000002</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>0.21199999999999999</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>0.20800000000000002</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>0.20899999999999999</bucket>
            </map>
            <map to='#fb937e'>
              <bucket>0.20699999999999999</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>0.20499999999999999</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>0.20600000000000002</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>0.20300000000000001</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>0.20399999999999999</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20000000000000001</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20100000000000001</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>0.20199999999999999</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19699999999999998</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19800000000000001</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>0.19899999999999998</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>0.19500000000000001</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>0.19600000000000001</bucket>
            </map>
            <map to='#fb9783'>
              <bucket>0.19399999999999998</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>0.192</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>0.193</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>0.191</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>0.19</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.187</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.188</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>0.18899999999999997</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.184</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.185</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>0.18600000000000003</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>0.182</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>0.183</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>0.18100000000000002</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>0.17899999999999999</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>0.17999999999999999</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>0.17800000000000002</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>0.17600000000000002</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>0.17699999999999999</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>0.17399999999999999</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>0.17499999999999999</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17100000000000001</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17199999999999999</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>0.17300000000000001</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>0.16899999999999998</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>0.17000000000000001</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>0.16699999999999998</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>0.16800000000000001</bucket>
            </map>
            <map to='#fca08d'>
              <bucket>0.16600000000000001</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>0.16399999999999998</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>0.16500000000000001</bucket>
            </map>
            <map to='#fca18e'>
              <bucket>0.16300000000000001</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>0.161</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>0.16200000000000001</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.158</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.159</bucket>
            </map>
            <map to='#fca290'>
              <bucket>0.16</bucket>
            </map>
            <map to='#fca291'>
              <bucket>0.157</bucket>
            </map>
            <map to='#fca391'>
              <bucket>0.156</bucket>
            </map>
            <map to='#fda392'>
              <bucket>0.154</bucket>
            </map>
            <map to='#fda392'>
              <bucket>0.155</bucket>
            </map>
            <map to='#fda492'>
              <bucket>0.153</bucket>
            </map>
            <map to='#fda493'>
              <bucket>0.151</bucket>
            </map>
            <map to='#fda493'>
              <bucket>0.152</bucket>
            </map>
            <map to='#fda593'>
              <bucket>0.14999999999999999</bucket>
            </map>
            <map to='#fda594'>
              <bucket>0.14800000000000002</bucket>
            </map>
            <map to='#fda594'>
              <bucket>0.14899999999999999</bucket>
            </map>
            <map to='#fda595'>
              <bucket>0.14699999999999999</bucket>
            </map>
            <map to='#fda695'>
              <bucket>0.14499999999999999</bucket>
            </map>
            <map to='#fda695'>
              <bucket>0.14599999999999999</bucket>
            </map>
            <map to='#fda696'>
              <bucket>0.14400000000000002</bucket>
            </map>
            <map to='#fda796'>
              <bucket>0.14300000000000002</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14000000000000001</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14099999999999999</bucket>
            </map>
            <map to='#fda797'>
              <bucket>0.14199999999999999</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13699999999999998</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13800000000000001</bucket>
            </map>
            <map to='#fda898'>
              <bucket>0.13900000000000001</bucket>
            </map>
            <map to='#fda999'>
              <bucket>0.13500000000000001</bucket>
            </map>
            <map to='#fda999'>
              <bucket>0.13600000000000001</bucket>
            </map>
            <map to='#fda99a'>
              <bucket>0.13400000000000001</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>0.13200000000000001</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>0.13300000000000001</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>0.13</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>0.13100000000000001</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.127</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.128</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>0.129</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.124</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.125</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0.126</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.121</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.122</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>0.12300000000000001</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>0.11900000000000001</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>0.12</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>0.11699999999999999</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>0.11800000000000001</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>0.11599999999999999</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>0.113</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>0.114</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>0.11199999999999999</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>0.11</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>0.111</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.107</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.10800000000000001</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>0.109</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.10400000000000001</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.105</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>0.106</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10099999999999999</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10199999999999999</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>0.10300000000000001</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>0.10000000000000001</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>0.096999999999999989</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>0.095000000000000001</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>0.096000000000000002</bucket>
            </map>
            <map to='#feb5a7'>
              <bucket>0.094</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>0.091999999999999998</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>0.093000000000000013</bucket>
            </map>
            <map to='#feb6a8'>
              <bucket>0.090999999999999998</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>0.08900000000000001</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>0.089999999999999997</bucket>
            </map>
            <map to='#feb7a9'>
              <bucket>0.088000000000000009</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>0.084000000000000005</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>0.085999999999999993</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.081000000000000003</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.08199999999999999</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>0.083000000000000004</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>0.080000000000000002</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>0.075999999999999998</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>0.076999999999999999</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>0.072000000000000008</bucket>
            </map>
            <map to='#febaad'>
              <bucket>0.070000000000000007</bucket>
            </map>
            <map to='#febaad'>
              <bucket>0.070999999999999994</bucket>
            </map>
            <map to='#febaae'>
              <bucket>0.069000000000000006</bucket>
            </map>
            <map to='#febbae'>
              <bucket>0.068000000000000005</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>0.062</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>0.065000000000000002</bucket>
            </map>
            <map to='#febcaf'>
              <bucket>0.060999999999999999</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>0.048000000000000001</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>0.055999999999999994</bucket>
            </map>
            <map to='#febdb0'>
              <bucket>0.040999999999999995</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>0.024</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>0.039</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:state:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI ? Low Threshold:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Weighted Annual Food Budget Shortfall (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Persons in 2018:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_14:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI Btwn Thresholds (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_14:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI ? Low Threshold (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Persons in 2018 (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Food Insecurity Rate:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:High Threshold in state:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Children in 2018:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Low Threshold in state:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure children in HH w/ HH incomes below 185 FPL in 2018:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Cost Per Meal:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI &gt; High Threshold:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_18:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:fi_15:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_15:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_16:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Cost Per Meal (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Weighted Annual Food Budget Shortfall:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:High Threshold in state (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:budget_shortfall_v_income_v_foodwaste.csv_6036727166674270970175101B2D77CD:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:FIPS:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI &gt; High Threshold (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:Low Threshold in state (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:weighted_annual_dollars:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% food insecure children in HH w/ HH incomes above 185 FPL in 2018:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:fi_17:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\% FI Btwn Thresholds:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:FIPS (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:\# of Food Insecure Children in 2018 (MMG2020_2018county.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:count:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:num_food_ins_children:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='MMG2020_2018county.csv' id='MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE'>
            <properties context=''>
              <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018county.csv' table='[MMG2020_2018county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='County, State' ordinal='2' />
                  <column datatype='string' name='2018 Food Insecurity Rate' ordinal='3' />
                  <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
                  <column datatype='real' name='Low Threshold in state' ordinal='5' />
                  <column datatype='string' name='Low Threshold Type' ordinal='6' />
                  <column datatype='real' name='High Threshold in state' ordinal='7' />
                  <column datatype='string' name='High Threshold Type' ordinal='8' />
                  <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
                  <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
                  <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
                  <column datatype='real' name='2018 Child food insecurity rate' ordinal='12' />
                  <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
                  <column datatype='real' name='% food insecure children in HH w/ HH incomes below 185 FPL in 2018' ordinal='14' />
                  <column datatype='real' name='% food insecure children in HH w/ HH incomes above 185 FPL in 2018' ordinal='15' />
                  <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
                  <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='MMG2020_2018state.csv' id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B'>
            <properties context=''>
              <relation connection='textscan.00u036v1pp693e13iwpg008qjvoe' name='MMG2020_2018state.csv' table='[MMG2020_2018state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='FIPS' ordinal='0' />
                  <column datatype='string' name='State Name' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='real' name='2018 Food Insecurity Rate' ordinal='3' />
                  <column datatype='integer' name='# of Food Insecure Persons in 2018' ordinal='4' />
                  <column datatype='real' name='Low Threshold in state' ordinal='5' />
                  <column datatype='string' name='Low Threshold Type' ordinal='6' />
                  <column datatype='real' name='High Threshold in state' ordinal='7' />
                  <column datatype='string' name='High Threshold Type' ordinal='8' />
                  <column datatype='real' name='% FI ? Low Threshold' ordinal='9' />
                  <column datatype='real' name='% FI Btwn Thresholds' ordinal='10' />
                  <column datatype='real' name='% FI &gt; High Threshold' ordinal='11' />
                  <column datatype='real' name='2018 Child Food Insecurity Rate' ordinal='12' />
                  <column datatype='integer' name='# of Food Insecure Children in 2018' ordinal='13' />
                  <column datatype='real' name='% food insecure Children in HH w/HH Incomes Below 185 FPL in 2016' ordinal='14' />
                  <column datatype='real' name='% food insecure Children in HH w/HH Incomes Above 185 FPL in 2016' ordinal='15' />
                  <column datatype='real' name='2018 Cost Per Meal' ordinal='16' />
                  <column datatype='real' name='2018 Weighted Annual Food Budget Shortfall' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='child_pop_state.csv' id='child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26'>
            <properties context=''>
              <relation connection='textscan.0xru2a60yw3aqc1054uze0qtbh6y' name='child_pop_state.csv' table='[child_pop_state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='integer' name='num_food_ins_children' ordinal='3' />
                  <column datatype='real' name='child_fi_rate' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='child_poverty_18.csv' id='child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD'>
            <properties context=''>
              <relation connection='textscan.1kd29ao0d5cczz0zwx9790l7a5o3' name='child_poverty_18.csv' table='[child_poverty_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='dataform' ordinal='2' />
                  <column datatype='real' name='amount' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='fi_rates_5yr.csv' id='fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF'>
            <properties context=''>
              <relation connection='textscan.0yr55cu1lrxejt19knwo01wvbphj' name='fi_rates_5yr.csv' table='[fi_rates_5yr#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state_name' ordinal='0' />
                  <column datatype='real' name='fi_18' ordinal='1' />
                  <column datatype='real' name='fi_17' ordinal='2' />
                  <column datatype='real' name='fi_16' ordinal='3' />
                  <column datatype='real' name='fi_15' ordinal='4' />
                  <column datatype='real' name='fi_14' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='financials_18.csv' id='financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7'>
            <properties context=''>
              <relation connection='textscan.187vbbv0393s1b14vpfnz0jrf6vh' name='financials_18.csv' table='[financials_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='weighted_annual_dollars' ordinal='1' />
                  <column datatype='real' name='dollars_waste' ordinal='2' />
                  <column datatype='integer' name='income' ordinal='3' />
                  <column datatype='real' name='perc_waste' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='food_banks_USA.csv1' id='food_banks_USA.csv_035C939829B942B3982DB29685463AAF'>
            <properties context=''>
              <relation connection='textscan.0hucxfp1l2de8313xbg701cg463q' name='food_banks_USA.csv' table='[food_banks_USA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Organization' ordinal='0' />
                  <column datatype='string' name='Address' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='zipcode' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='food_waste_18.csv' id='food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466'>
            <properties context=''>
              <relation connection='textscan.00krgsn0wuxld51cqa8f71ry5lof' name='food_waste_18.csv' table='[food_waste_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='tons_surplus' ordinal='1' />
                  <column datatype='real' name='us_dollars_surplus' ordinal='2' />
                  <column datatype='real' name='tons_waste' ordinal='3' />
                  <column datatype='real' name='dollar_per_ton' ordinal='4' />
                  <column datatype='real' name='us_dollars_waste' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[State (MMG2020_2018county.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='MMG2020_2018county.csv_D1854598A4D941059D7269A5AE65EFAE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[state]' />
              <expression op='[State]' />
            </expression>
            <first-end-point object-id='food_banks_USA.csv_035C939829B942B3982DB29685463AAF' />
            <second-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[location]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='child_pop_state.csv_FF60A1257E9742E690ADE9830BEA0B26' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (child_poverty_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='child_poverty_18.csv_CD0AE63018EF4303931ADABBEF01CFDD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state_name]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='fi_rates_5yr.csv_5B38007CEB87402EA3B09A63261C16CF' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (financials_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='financials_18.csv_BA9263A3055242299AF8E1D2C2E559C7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Name]' />
              <expression op='[state (food_waste_18.csv)]' />
            </expression>
            <first-end-point object-id='MMG2020_2018state.csv_A953C30115CD40208E6C0FC30950662B' />
            <second-end-point object-id='food_waste_18.csv_CFA56CFEBA684775BFA89A19E8A06466' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='FI and Bank Density' type='sheet' worksheet='top fi by state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='FI and Bank Density' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='FI and Bank Density' type='sheet' worksheet='food banks by zipcode' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='FI and Bank Density' />
      </command>
    </action>
    <nav-action caption='FI by State' name='[Action3]'>
      <source dashboard='FI and Bank Density' type='sheet' worksheet='top fi by state' />
      <params>
        <param name='sheet' value='top fi by state' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='Ins Rate vs FB scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Food Insecure vs Food Banks by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <column-instance column='[Organization]' derivation='Count' name='[cnt:Organization:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[cnt:Organization:qk]' scope='rows' value='Count of Organizations' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26024796380090498' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[cnt:Organization:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{1200DD49-90D8-45E8-B6E6-A7CC9EECB30B}' />
    </worksheet>
    <worksheet name='Ins Rate vs Food Waste'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Food Insecure vs % Food Waste ($)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Dollars Waste' datatype='real' name='[dollars_waste]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column caption='Perc Waste' datatype='real' name='[perc_waste]' role='measure' type='quantitative' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dollars_waste]' derivation='Sum' name='[sum:dollars_waste:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_waste]' derivation='Sum' name='[sum:perc_waste:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' scope='rows' value='% Food Waste (of total surplus, $)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' field-type='quantitative' max='80.0' min='40.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26022473919523104' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
              <tooltip column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:dollars_waste:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#734f69' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:perc_waste:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{9F7CD80D-0BE2-4242-8368-C775907373CD}' />
    </worksheet>
    <worksheet name='Ins Rate vs MI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Food Insecure vs Median Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Child Food Insecure' />
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]' scope='rows' value='Median Income' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26018815789473687' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]' field-type='quantitative' max='110528' min='50000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#e7a0d4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:income:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{CFF9610D-BE81-4986-AD60-D46D26654866}' />
    </worksheet>
    <worksheet name='Ins Rate vs Poverty scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run> %  Food Insecure vs % Poverty</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='% Children in Poverty' datatype='real' name='[amount]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[amount]' derivation='Sum' name='[sum:amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' scope='cols' value='% Children Food Insecure' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' field-type='quantitative' max='0.29619076005961253' min='0.040000000000000001' minor-origin='0.0' minor-spacing='0.01' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' field-type='quantitative' max='0.26022473919523104' min='0.040000000000000001' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#95678a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:amount:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]</cols>
      </table>
      <simple-id uuid='{60CEDB3B-5693-438E-9948-72BA14C691BE}' />
    </worksheet>
    <worksheet name='child fi by county'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Insecurity by County&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[County, State - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='Attribute' name='[attr:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[County, State - Split 1]' derivation='None' name='[none:County, State - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='None' name='[none:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='32980932.846116945' min='25944795.987098519' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='6809039.2989255087' min='2434423.5572522427' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' max='0.5' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 1:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#818b91'>State:&#9; </run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 1:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Food Insecure Children:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#900000' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C25343D1-58C8-48F8-A0BA-5B6DE8BCE1F2}' />
    </worksheet>
    <worksheet name='child fi by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Insecurity By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child Food Insecurity Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[2018 Child Food Insecurity Rate]' derivation='Sum' name='[sum:2018 Child Food Insecurity Rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='member' level='[location]' member='&quot;New Mexico&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='34249687.126603223' min='24948190.158414923' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='7410988.5388401635' min='2278421.2858771128' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' value='F.I. Rate' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]' />
              <geometry column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A3D116A5-9D70-40AC-B76E-7F699FB13844}' />
    </worksheet>
    <worksheet name='fb list'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Banks</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[Address]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Address]' derivation='None' name='[none:Address:nk]' pivot='key' type='nominal' />
            <column-instance column='[Organization]' derivation='None' name='[none:Organization:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='member' level='[location]' member='&quot;New Mexico&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]' value='164' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk] / ([federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk] / [federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{1E62BA3D-C4F1-4E43-85A3-752375A24990}' />
    </worksheet>
    <worksheet name='food banks by zipcode'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Bank Density By Zipcode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='string' name='[Organization]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='food_banks_USA.csv1' datatype='integer' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[Organization]' derivation='Attribute' name='[attr:Organization:nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='member' level='[location]' member='&quot;New Mexico&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]' field-type='quantitative' max='-8072126.390180598' min='-12087870.68648624' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]' field-type='quantitative' max='5849279.0701000094' min='3633390.8381323307' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' value='Count of Food Banks'>
              <formatted-text>
                <run>Count of Food Banks</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' />
              <lod column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]' />
              <size column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' />
              <tooltip column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:Organization:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zipcode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Food Banks:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-transparency' value='165' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#499894' />
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Latitude (generated)]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DCF3D56C-8940-476A-9829-27C1E202AFE7}' />
    </worksheet>
    <worksheet name='poverty by race'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column caption='Location1' datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{2DCA4C09-A6CA-4D28-B44D-5EE68BAAE764}' />
    </worksheet>
    <worksheet name='states w least fb'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Lowest Food Bank Density By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <_.fcp.ObjectModelTableType.false...column caption='food_banks_USA.csv1' datatype='integer' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='food_banks_USA.csv1' datatype='table' name='[__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='member' level='[location]' member='&quot;Florida&quot;' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[food_banks_USA.csv_035C939829B942B3982DB29685463AAF])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;AK&quot;' function='range' level='[none:state:nk]' to='&quot;CT&quot;' />
                  <groupfilter from='&quot;DE&quot;' function='range' level='[none:state:nk]' to='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' scope='rows' value='Count of Food Banks' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Food Banks:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{AFE648FB-7BBB-4AB3-94FF-26A0C4178F4F}' />
    </worksheet>
    <worksheet name='top fi by county'>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column datatype='real' name='[2018 Child food insecurity rate]' role='measure' type='quantitative' />
            <column caption='full state' datatype='string' name='[County, State - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[County, State]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [County, State], &quot;,&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[County, State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[County, State - Split 2]' derivation='None' name='[none:County, State - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[County, State]' derivation='None' name='[none:County, State:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Child food insecurity rate]' derivation='Sum' name='[sum:2018 Child food insecurity rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
            <groupfilter function='member' level='[location]' member='&quot;Mississippi&quot;' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:County, State - Split 2:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#00000067' />
            <format attr='color' id='refline0' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='National Average: 16.9%' label-type='custom' scope='per-pane' value='0.16880000000000001' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]</cols>
      </table>
      <simple-id uuid='{AF85BD61-4CCF-436E-A8B2-A377B00F6887}' />
    </worksheet>
    <worksheet name='top fi by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Food Insecurity Rates by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='food_banks_USA.csv+ (Multiple Connections)' name='federated.1ndagsv0qjkkwo16wn53r1iaxjyh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ndagsv0qjkkwo16wn53r1iaxjyh'>
            <column caption='Child Fi Rate' datatype='real' name='[child_fi_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column-instance column='[child_fi_rate]' derivation='Sum' name='[sum:child_fi_rate:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[state]' />
              <groupfilter function='level-members' level='[zipcode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([child_fi_rate])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:location:nk]' to='&quot;Pennsylvania&quot;' />
                  <groupfilter from='&quot;Rhode Island&quot;' function='range' level='[none:location:nk]' to='&quot;Texas&quot;' />
                  <groupfilter from='&quot;Utah&quot;' function='range' level='[none:location:nk]' to='&quot;Wyoming&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State,Zipcode)]</column>
            <column>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' value='p0.0%' />
            <format attr='text-orientation' field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='National Average: 16.9%' label-type='custom' scope='per-pane' value='0.16880000000000001' value-column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]</rows>
        <cols>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{E8999405-2CC4-4ADB-A338-5B70E234AEF1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Correlations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
          <zone h='50000' id='16' name='Ins Rate vs FB scatter' w='50000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='50000' id='18' name='Ins Rate vs Food Waste' w='50000' x='0' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='50000' id='19' name='Ins Rate vs Poverty scatter' w='50000' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='50000' id='20' name='Ins Rate vs MI' w='50000' x='50000' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5250' id='12' w='10800' x='7400' y='18875'>
          <formatted-text>
            <run bold='true' fontsize='11'>R = .032</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3750' id='13' w='10000' x='59600' y='79875'>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontsize='11'>R = .650</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3750' id='14' w='10000' x='10300' y='76250'>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontsize='11'>R = .072</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='3750' id='15' w='10000' x='59600' y='15750'>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontsize='11'>R = .526</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='24' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='23' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='50000' id='16' is-fixed='true' name='Ins Rate vs FB scatter' w='50000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='20' is-fixed='true' name='Ins Rate vs MI' w='50000' x='50000' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='3750' id='15' w='10000' x='59600' y='15750'>
                  <formatted-text>
                    <run bold='true' fontcolor='#555555' fontsize='11'>R = .526</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5250' id='12' w='10800' x='7400' y='18875'>
                  <formatted-text>
                    <run bold='true' fontsize='11'>R = .032</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='18' is-fixed='true' name='Ins Rate vs Food Waste' w='50000' x='0' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='19' is-fixed='true' name='Ins Rate vs Poverty scatter' w='50000' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3750' id='14' w='10000' x='10300' y='76250'>
                  <formatted-text>
                    <run bold='true' fontcolor='#555555' fontsize='11'>R = .072</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3750' id='13' w='10000' x='59600' y='79875'>
                  <formatted-text>
                    <run bold='true' fontcolor='#555555' fontsize='11'>R = .650</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{26421FBA-F050-4673-9D67-32F443987A8D}' />
    </dashboard>
    <dashboard name='FI and Bank Density'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='38' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='36' param='horz' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='33' param='horz' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='31' param='horz' w='98400' x='800' y='1000'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='28' param='horz' w='98400' x='800' y='1000'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='23' param='horz' w='98400' x='800' y='1000'>
                      <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='21' w='98400' x='800' y='1000'>
                        <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90625' id='7' param='horz' w='98400' x='800' y='8375'>
                          <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='90625' id='5' w='98400' x='800' y='8375'>
                            <zone h='45313' id='3' name='food banks by zipcode' w='59901' x='39299' y='8375'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='45312' id='10' name='top fi by state' w='44804' x='54396' y='53688'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='45313' id='19' name='fb list' w='38499' x='800' y='8375'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='45312' id='29' name='child fi by state' w='53596' x='800' y='53688'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7375' id='18' w='98400' x='800' y='1000'>
                          <formatted-text>
                            <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='18'>Child Food Insecurity &amp; Food Bank Density (zip)</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='34' name='child fi by state' pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' w='14000' x='2000' y='86625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='42' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='41' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7375' id='18' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='18'>Child Food Insecurity &amp; Food Bank Density (zip)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='19' is-fixed='true' name='fb list' w='38499' x='800' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='3' is-fixed='true' name='food banks by zipcode' w='59901' x='39299' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='29' is-fixed='true' name='child fi by state' w='53596' x='800' y='53688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='34' name='child fi by state' pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' w='14000' x='2000' y='86625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='10' is-fixed='true' name='top fi by state' w='44804' x='54396' y='53688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8AA7B39F-67E6-4005-A656-8AD2B7AAC6B1}' />
    </dashboard>
    <dashboard name='HHS programs'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='98000' id='3' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='14'>Since poverty and income (economic) are most correlated with child food insecurity rates, further exploration of enforcement and management of federal services would be useful, particularly related to the Dept of Agriculture: </run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Supplemental Nutrition Assistance Program (SNAP) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   National School Lunch Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Special Supplemental Nutrition Program for Women, Infants, and Children (WIC) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Child and Adult Care Food Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   School Breakfast Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Summer Food Service Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Commodity Supplemental Food Program </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Food Distribution Program on Indian Reservations (FDPIR) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Senior Farmers&apos; Market Nutrition Program (SFMNP) </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>o   Special Milk Program for Children </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='8' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='98000' id='3' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Since poverty and income (economic) are most correlated with child food insecurity rates, further exploration of enforcement and management of federal services would be useful, particularly related to the Dept of Agriculture: </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Supplemental Nutrition Assistance Program (SNAP) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   National School Lunch Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Special Supplemental Nutrition Program for Women, Infants, and Children (WIC) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Child and Adult Care Food Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   School Breakfast Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Summer Food Service Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Commodity Supplemental Food Program </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Food Distribution Program on Indian Reservations (FDPIR) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Senior Farmers&apos; Market Nutrition Program (SFMNP) </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>o   Special Milk Program for Children </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D3ADF88A-5C6B-4BA5-9F93-2AD98A2ECC81}' />
    </dashboard>
    <dashboard name='References'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='51625' id='3' w='81900' x='3300' y='4125'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Light' fontsize='14'>References:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Map The Meal Gap (files received via email): </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952&amp;quot;' underline='true'>https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Food Bank Data: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.foodbanks.net/&amp;quot;' underline='true'>https://www.foodbanks.net/</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Poverty, Median Income: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://datacenter.kidscount.org/topics&amp;quot;' underline='true'>https://datacenter.kidscount.org/topics</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Food Surplus and Waste: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://insights.refed.com/&amp;quot;' underline='true'>https://insights.refed.com/</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Poverty Guidelines: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references&amp;quot;' underline='true'>https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Federal Programs: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html&amp;quot;' underline='true'>https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Minimum Wage: </run>
            <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.laborlawcenter.com/state-minimum-wage-rates/&amp;quot;' underline='true'>https://www.laborlawcenter.com/state-minimum-wage-rates/</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='7' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='6' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='51625' id='3' w='81900' x='3300' y='4125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Light' fontsize='14'>References:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Map The Meal Gap (files received via email): </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952&amp;quot;' underline='true'>https://www.feedingamerica.org/research/map-the-meal-gap/how-we-got-the-map-data?s_src=WXXX1MTMG&amp;_ga=2.67349524.44214178.1620268572-880066652.1619024952</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Food Bank Data: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.foodbanks.net/&amp;quot;' underline='true'>https://www.foodbanks.net/</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Poverty, Median Income: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://datacenter.kidscount.org/topics&amp;quot;' underline='true'>https://datacenter.kidscount.org/topics</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Food Surplus and Waste: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://insights.refed.com/&amp;quot;' underline='true'>https://insights.refed.com/</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Poverty Guidelines: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references&amp;quot;' underline='true'>https://aspe.hhs.gov/prior-hhs-poverty-guidelines-and-federal-register-references</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Federal Programs: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html&amp;quot;' underline='true'>https://www.hhs.gov/answers/hhs-administrative/what-programs-use-the-poverty-guidelines/index.html</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>·       Minimum Wage: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Tableau Light' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.laborlawcenter.com/state-minimum-wage-rates/&amp;quot;' underline='true'>https://www.laborlawcenter.com/state-minimum-wage-rates/</run>
                    <run fontcolor='#000000' fontname='Tableau Light' fontsize='12'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{94FE1FA9-E7C4-4B8B-B1A4-F4F3CD181143}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Start With:</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='7' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4253' id='8' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94087' id='1' param='vert' removable='false' w='98426' x='787' y='5083'>
              <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='5083' />
              <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83610' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='15560'>
                <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Title' captured-sheet='' id='2' />
                    <story-point caption='Some beginning facts and assumptions' captured-sheet='' id='8' />
                    <story-point caption='Child Food Insecurity &amp; Food Bank Density (links to top 10)' captured-sheet='FI and Bank Density' id='1'>
                      <currentDeltas>
                        <worksheet name='child fi by state'>
                          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
                            <groupfilter function='member' level='[location]' member='&quot;Alabama&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='fb list'>
                          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
                            <groupfilter function='member' level='[location]' member='&quot;Alabama&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='food banks by zipcode'>
                          <filter class='categorical' column='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[Action (Location)]'>
                            <groupfilter function='member' level='[location]' member='&quot;Alabama&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='top fi by state'>
                          <selection-collection>
                            <tuple-selection>
                              <tuple-reference>
                                <tuple-descriptor>
                                  <pane-descriptor>
                                    <x-fields>
                                      <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</field>
                                    </x-fields>
                                    <y-fields>
                                      <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]</field>
                                    </y-fields>
                                  </pane-descriptor>
                                  <columns>
                                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</field>
                                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]</field>
                                  </columns>
                                </tuple-descriptor>
                                <tuple>
                                  <value>&quot;Alabama&quot;</value>
                                  <value>0.23100000000000001</value>
                                </tuple>
                              </tuple-reference>
                            </tuple-selection>
                          </selection-collection>
                        </worksheet>
                      </currentDeltas>
                      <capturedDeltas />
                    </story-point>
                    <story-point caption='Correlations: F.I. vs Food Banks, and other Economic Indicators (is indicators the right word here?)' captured-sheet='Correlations' id='3' />
                    <story-point caption='Economic is more related: what programs exist? do they need improvement?' captured-sheet='HHS programs' id='4' />
                    <story-point caption='Deeper dive into top 10: what programs are they lacking?' captured-sheet='' id='6' />
                    <story-point caption='Conclusion: didnt find relationship between food banks' captured-sheet='' id='7' />
                    <story-point caption='References' captured-sheet='References' id='5' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{02E45887-2571-4025-9741-AC61F81120B5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='fb list'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:zipcode:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;18390 Bridgeport Rd Dallas OR 97338&quot;</value>
                <value>&quot;A &amp; M Food Co&quot;</value>
                <value>97338</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Address:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:City:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDCE3678-04DF-43A1-A3E6-530CBDE4F0A1}' />
    </window>
    <window class='worksheet' name='food banks by zipcode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='34'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E860D492-D588-4C52-9C5E-3A8E05EECA51}' />
    </window>
    <window class='worksheet' name='child fi by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child food insecurity rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[attr:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4E60F294-962B-40B8-B0DC-D4B8623FF426}' />
    </window>
    <window class='worksheet' name='child fi by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:2018 Child Food Insecurity Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{40BFCF59-4F3F-4846-BB9F-68FC815DE18F}' />
    </window>
    <window class='worksheet' name='Ins Rate vs FB scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB0C3337-0138-488F-AA73-7E69BBBF590E}' />
    </window>
    <window class='worksheet' name='Ins Rate vs Poverty scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State (MMG2020_2018county.csv):nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F0A2AC7-4A4D-4B61-8525-6FC008CCE330}' />
    </window>
    <window class='worksheet' name='Ins Rate vs Food Waste'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E6B789-EA74-4A2F-88A6-F8D6009AC740}' />
    </window>
    <window class='worksheet' name='Ins Rate vs MI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:State Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFD83D52-0079-43C7-AD76-93736D401A4A}' />
    </window>
    <window class='worksheet' name='states w least fb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Organization:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A74547B0-B596-429D-97F6-C85EAED72596}' />
    </window>
    <window class='worksheet' name='top fi by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Louisiana&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{0207828A-8135-45DE-B5F9-B29F4B0A2FBA}' />
    </window>
    <window class='worksheet' name='top fi by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:County, State - Split 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CDC8D1E-1B47-4814-9BBB-7A5F7234F356}' />
    </window>
    <window class='worksheet' name='poverty by race'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Location:nk]</field>
            <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:Race:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69C6967C-CD9B-4156-87E3-BFA6DB46B517}' />
    </window>
    <window class='dashboard' maximized='true' name='FI and Bank Density'>
      <viewpoints>
        <viewpoint name='child fi by state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='fb list' />
        <viewpoint name='food banks by zipcode'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[__tableau_internal_object_id__].[cnt:food_banks_USA.csv_035C939829B942B3982DB29685463AAF:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='top fi by state'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[none:location:nk]</field>
                    <field>[federated.1ndagsv0qjkkwo16wn53r1iaxjyh].[sum:child_fi_rate:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;New Mexico&quot;</value>
                  <value>0.23800000000000002</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3F5CD9C3-A6CA-4B9D-91D7-5E9271DCE6D1}' />
    </window>
    <window class='dashboard' name='Correlations'>
      <viewpoints>
        <viewpoint name='Ins Rate vs FB scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ins Rate vs Food Waste'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ins Rate vs MI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ins Rate vs Poverty scatter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ECBE5BEF-4AB0-4A0B-956B-9E342A997FE7}' />
    </window>
    <window class='dashboard' name='References'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{39605FF5-8DB5-40E8-9BD9-666329E48751}' />
    </window>
    <window class='dashboard' name='HHS programs'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{BE03DDEA-FD6C-4465-9A6B-AEFFA0E8A20D}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{210C49CC-6562-408A-B09E-3E3F5B951D5A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Correlations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FI and Bank Density' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='HHS programs' width='192'>
      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
      BEAQ1/5/H92MeiOoQhoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs FB scatter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs Food Waste' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs MI' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ins Rate vs Poverty scatter' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='References' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      obT/A6GyfCC8l30gAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='child fi by county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='child fi by state' width='192'>
      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
      sL4VvwD3thU55cv2ggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='fb list' width='192'>
      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
      aS1MDhkLL24AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='food banks by zipcode' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nNy9+XdcyXUm+L099z2xAyQIbkUWqdqrXLItqSRLVttuu9tudbfdPd2en+ZP
      mjlnzunx8Rx7ZNlu2W5ZbUu2LNkuSa4qkVUkiztBEkBiz33Pt8wPiXiMjIx4SyLBovo7BwfA
      e/Eibiz3xr03Im5IpVLJAQeSJEGSJN6rieE4DhznWXGyLMO27cDlNZtNJBIJ4ftp0EvTJypD
      VVUMBoNQ+frRdn2nhN1mE187e96XNjYvSZJQqVSQyWQ8v1NVFZqmodPpjKWp1WqIxWIol8vI
      5XJQVRWSJMFxHLefyP8kT9u2oaqq+7dXXcl37XYbsVjMqynGQPIT9c0keRKodAF0gdMe/CxI
      GbIsCzuWhWmawjST0MwyZBAaCM1hy/Kjbz6ZgiLLkGXZl142r0flQ9zZ28UbpomZmZmxb+gB
      1Ov1uHTYto1yuYx+v492u412uw1JkmBZFhzHQb/fRywWg2EY6Ha76Pf7yOfzqNfr0HUd2Wx2
      rL4sHcCwD8PCTyg5joN6vQ4ASCQSnm3IYowBvDrJjxDyvWhQkY6j3/txdxCEqTALHr1ecBwH
      iqKEKoOlj0hTuq3nkynMJ1O+tPL6p29ZMMHvO1I/HrPTiEajUBQFqVQKsixD13XYtg1FUWCa
      Jvr9PqLRKAaDAXRdR7FYhGmaiMVi0DTNsx/Js/12CwaHPtF3QRGPx92/W60WbNuG4zjQNA3x
      eNyz7tL29rYTRHr6NSAwOsBpqR5EWtKSSoRKpTImacKUwSuT/h0E0WgU3W7X8xsRk9NtcxKz
      7P7+PorF4tjzsPWk1RkCwsSEfj0SgaXIyESiaDQa6PV6wnrZto3tRgN/8+g+3swXcXlpGcCz
      fuOVFwYiAT4YDNBqtdxn0WgUqqqOfKtOsyOCDGIRjkND0EHFMuYkUodW2UT5sCrdcdolDNjO
      JaDLDlNnmnHpZ47j4KePH+GTvV3819feACzvASxJEuaSSXx++RQK8rPZU0SL5TjoDAZI6Lov
      jfF4HJZlod/vj71TVdWd0RzHQbPZRKfTQTKZdOkS6g5ksBDuDNpwonQkr+NMdWHL9iprUjpM
      04QeoGPYMqYx1R8XxH4JYsNIkgTLsfHDJ+s4aLfG3l/IF/GLSyuwB6bL4KJ8JUmCqiiYUVRo
      DJOy7SHLMn62U8Kf3rkVSGhYlhXYrkgkEojH46hUKtjZ2UGj0QBfZDCEhe00ngSkp+GgKgCb
      T7/fR7Vadb/n0UWes7+DlOP1nP5b07SxRvcyzunfJB8ilfy+C/O83W5zVcQg+bDMKkkSTMvB
      dqOBlVQaxXhiJF1M07CWy7vffOf+XSwkk3h1bgGSJKFrmpAA6IqCZrOJbreLTCbjzlJeDohL
      hRnMJlOIRqPodDrCdI7joNvtCscSr46yLCObzUKSJHQ6nWcMwA423rTnBVb3p/MMClY9YWnS
      dR25XG4qUvQ4ElmWZUSjUfT7/dDuUB7zB2HQIJ4ynhrgBT8BFNN1/O7VV7gD0HEc9EwTDoAP
      SpswFAXpSBSyLKPcbuN/PrwHRZLw+cIsCpnMiKFK8hCVn9B1ZONxmKYJWZZhWdbIe7+ZnmcT
      sP3tOA4ikciQAWipzFbyaa2K+WQKGqP7nhREjU2/nwYdx8nDsix0Op2J7QgW03CpHteQtB0H
      DhzI8Jek5P9vfnoD84kkdpsNvLW0gtv7e9is17CUSkOWJAxsC304rsr4YWkTS6k05hJJIR2k
      f8MyM0/dDAKZ/pjtzPZggO8/eoDb+3uBDMygEOXDVmISf/vzgmVZQqPTD8etk+M42G810ej1
      3Gd7e3vI5/MeX3nj+4/u46/u3Hb7mfX68DSEtxeX8ebiEv63V15H3zTRtUxs1mvoDAaAA5yP
      JrBSKLp53jncx3azcYyaP4PXeCS2ZhBtRLUdBx+WNrGQSGEpnR55Gdd1/Pr5l1CYcJVNBC89
      9rM0EoOA6P+apk30/aTuWnYK//6jB8hGovjq2jns7+9jZmbmWIx1qTiLvmX5qmY0HZdmZt00
      2WgUpXodr8zNo9nvo9Pr4aXTZ1wh5jgO/tOVVwPTE8RFGnS8eHn/1CfVCp7Uqtis18cYAABm
      PbYeTBteXP2iMAZZ/DFNE91uN/T3YQepyOX61TPnENE0tNttZDKZYy0GAsByenQbBStBCd30
      gLy5u4Ofbj7F7119Ff+88QRL6TQsx8HFQhGWZaLe6cAwDF+vmcge8/PieTEozwFDp3GdEacy
      WZxKZ/H20vJzUTcmKYOeksN+N+06OY6DTqcDRVFCrwgfZ42E7dhsNIqYpiGRSLjbAKaNzmCA
      n21vwRYMxMVkCldn56EpCuYTSTR6PSwmU/jB44fY6bRxo1ZGs9kcqwNdLzJD8JiAfU//eIE3
      +EVMJsuShLeXlrGUSj8XKfs8dXq2AaZVtm3baLfbiEQiJ14fmu5IJMK1O9LpNKrV6kT5e0nS
      7WYD17ZLqB+tfNPpyp024rqONxaXIEsSfvnUKn7vyis4ny9gNp5AvdtFpdtDNBZzGZR1svDU
      LXaQs7ZgUCeIV7oRFchvKnme8KPjOAw6TeYm0t+27TE33UnZMbIsj60/ENtA13VYloXDw0NE
      IpExl6MfRGsza7k8YpqGg3YLmWjUfd4eDPCtWzdwLpfHwLbx9uIyopqGHz1Zx6tzC3h3+RSe
      VKt4Wqtir9FwbcgfrD/EmWwOpzLitQqe7z7MWBSNZ6ERzBYwqTspDIFB9fwX2QNk2zYMw0CP
      8sScJL22baPREHtQotEootEoyuVyKAbwUhckScLDShnrlTKK8QSe1CqIqBruHe5DUxRcnp3D
      jx6v4/+79QkuF2dQ7XbROdqxe2V2Dq8vLCIOyaWn2u2i0e+h1u0iHYkI6QgDsqDotSjqWf9S
      qeR4eWV4mJbvm7c4QYPV+w8PD1EoFF4Yg5jsgiQ+a7o+Ip12WkwiktqiDYNh8LhSQToSQTYa
      hWnb6Jsmrm1v4f2Np8hFo7hYnMFcIumuBP908ylmE0mspIZOlGq3g0qng9Vsboye6zslfFTa
      wu9dfQURddyT5qe68NqTfv6nt2/icnEWl4oz7ju6fVivkqcj+3ktfHlV+EWdBYDhZit6wcZL
      4pyEQQ6ID8kcB//0dB0JXcfrC0tYTmegaBreXj6FK7PzkCQJ37z5MVRZdhng7aWVEVpu7O3i
      caWM1WxuLO/z+SJimg5DGd0SQYSdXxvy/qafLabSyMZiY04D+vcIE21vb088ynkcSBcgqgwr
      /b0YjU77os0A7NZoejpmZ4CTYADeaToiccvtNvqWhbmkeNVVhGavh396+hjlThu/e3Xcd1/v
      dhHTNChHg/ZJrYoPtjbwGxcuwVAU3Ds8QC4SRezIjx+Px4VjgWUA8oz3Nw3RGPJbP2DHm9pq
      tdyTVqTjeL5n+jcx/ujnXoOSPjrHGwRsefTxO5pzG40GCoWCsJzniVgsBlmWoarq2F4VQOzT
      niYT8IQPwU+3NtDs9/DvLl8NnW/CMPCl1TX0Lf4uy1QkMsLojuPgzv4eErqBhWQKP9l8gneW
      TuFyoejaLZIk4UH5EAPbwsX86JkFnnuUraMoHU8NpNP6CUs1mUwKdSS6cekpimepiwjh5Rtm
      BghboecFRVHQao1vE37eoJmAbvsvnD4D6xj7gwxVRd+y8P7Tx3hrcRkqZ80jGo1C0zRsPH2M
      areL7z28B1WWkTaieHlmFvKRMDNtG5ok4Um1gq5pjjBAEIEQ1gsU5r3qtfpGD052upUkCbvN
      BtKRCPSjQw5e0z2PadgyjlOx5wGy/YGeto+7Ce048HIixCbcqkFjv93C7YN9XJ6ZRVqJjryT
      JAkfbjzFXCKBa9tb0BQFXzlzFs1+D6btYKtex1IqBQfAH1z/CK/NL+K91TU8rlZw72Af5wvj
      J9cIRCoQq8+HcXeyeRCMGcFeUw77/LsP7uFMJodfXDnlWeg08VkYxmTBS9d1HBwcQFEUqKrq
      Dn6ybZdW9Xg4CTWI5CfypB0HZ7I5nOEYsgQfbW3gUnEWv3flVfQsE5/u76HZHyCiqnhQPkBO
      03C3WsFaNo98NIZat4v7hwdoD/qeDEDXg1Xxjrvlg2YiSZK8vUD0BzRBxAb4+tkLXH/uJB0c
      dAHpeTOApmlwnGE0BcuyUKvVkE6nsb6+DsuykM1mUavVEI1G0Ww2MTMzA8Ngj36fLPy8IycB
      x3Hwn6++6g5Ky7bRtyy8OreA/NHCV7vbxa3yAd5aWsb13RJs28FvXrwUKP+g44GF17oAnbfL
      CDs7O2PrALxpnc2UXZ5mM/YDO83x1AnWQ1Cv15FKpU7MpegHSZLQarXQ6/UwGAxc50EymYTj
      OO42hWg0KszjuBLMDySuz0lB5Iu/ubuDH28+xTcuX3WFouM46A0GqFWr0BIJOI6NbPTZzuLd
      ZhPXdkr40ukzMARby+mtzSSkC1mFJ7GAWK8bcaSQ46v0UVx27HBL5XEfO9jJYJ1Wh4oGv4i+
      zwKO42B2dhayLKPVanFp9Nu+e9I4yTJYdWS70cCt/V18aXUNFwpFJHQdqaPZj6TVVRXZTAbV
      ahWKoqADCbphoNbtom+aaPf7ws12rMpoWRaI11LTNJTLZUSjUXd7iCzL7hHJwWCAdDrtnhlm
      4yURCBmA594UGR+TMEFQVYZN8xd3b2M+mcTbi8vCNCeFSqWCw8NDLC8vw7Isd0bq9/vo9Xpu
      ZzxvFeizQsccoHa0DqIpCk5T9sKIr11VXfd1pVLBvVoFH5a28O8vX8Fv+ahEdN/GYjH0+32o
      qupGgzBNE6qqQlEUyLKMeDzu9oeu61AUZcRd+9f37yJtRPCLp04PafMqXLSIxb6bRC9njRHR
      1MrSspRMIhuJhgqpOC2Qwb21tYVWq4Vut4t2uw1VVdFqtTA7O4udnR0sLi5yd23yhMnPE2jN
      4IePH6FvWfidy1d8vwGe1T2TyaB7YOJKMgNNGl388vIckveZTGbMG0T/7pkmDE1DmjnbQr5f
      SqVHPGRjm+GCgPXhT2r0sv+LGIE8cxwHV2bmMLCtsfKfx4CKRCIYDAYwDAOKomBmZgamaaLX
      66FYLKLf7yOZTPqGN6TrFgaqqo5Fo9hpNvD3jx7i6+cuIMvYHo+rFWQj0TFHxXFAaJ6JJzDw
      cQGL+mW+WMR8sYhqtQpL1xE5WlgTLZL6tRn9/vuP7sPkGNt/ff8uZuJxvElpDoDPDOAFdmCK
      iDsu2AZ4f/MpdpoNfOPSM8lDvFInzQRJzrYCwzCQTj87SzFJ7Msg0DTNDVNII6ZpKMRiiHBm
      nB89foRTmSy+cPrM1OggbXxpZtYzHbu1gadNZDIZV49nV5bpb73oYJ+9OrcA3hfFWByZyLhz
      gusF8iOcgDWEpyGJeWWSZ41GAz1FQaPfw2pmPBir5ThQFQXyZ6ReRCIRdLtdN84mOQ3FwyRt
      peu6b7QEevdlvddFRNWghzy5Jsy708bPtkt4Y2Ep0KzC9qXtOFivlHE6k3X3EdVqNUQiEd/4
      omx+7CwrSRIikYgb+Zq324A8ow/8u1Ehwpykp9+dxKIO7xn5KcRiY4MfABwAf/jJNVzb3vLM
      vz3oo9Q4mSOEtm0jEom4B2aCqkJBETRUyNZRZIaUEZna4AeAH288xQelDdza2w38DZHoH2xt
      4tbeLv7hyTo26jX3fTqdRr/fHznW6TWm2MWw/VYL//3OLZiK4hujibR5IpEAjjQGmR3wYVQa
      VopNixlETOC5uAHg7cVlZKMxfFjaFLrWPixt4XsP70+FThb9fh/dbhetVgvNZlN4hBE4WSP4
      fz64hw9Lm1PP963FZby9sIJX5xcCpSd1lGUZnx7swXRs/MaFl0a8RcBQtYxEIjg8PITFRKYg
      eFqr4u7hASRJwkG75dofqizDUFXIEtDtD4Ubz4VPj9Vbmxv4vz/4CfZbzSEDeOlZoo6aluFJ
      Zh/eYoWXV4BHz+WZWbT6fXyyuyPcCPb24jJ+7fzFY9PtBcdxYFkW2u02FEURGvwnhX994RLe
      Xlr2TxgShXgcXzqzhmiIfUakrr//6hv4eGcbG9UqZGk8RmkkEkE+n0e73Ua9Xh9rn4eVMm4f
      7AEAvr/+EOvVMiRJQkzT8Ob8EhK6gWu7O/ifD++NCD+eQJ+JJ3B1dh7ZaIy/F4j98LMAT+L7
      0eM4Dl6emcXLM7PCAWaoqnDV8STAW+U+6cWqYsgzwc8Lr84vYDGR4t6PQMZbIpFAq9XCYDAY
      ib303ura0Lh1HHxt7TyShgFJkvDB9hYeVcr4P4pFvD6/gOVkEopglwIw9Jr97cP7OJcvQJXl
      0ejQPM/O8wDR64KoXH7pRNKVNoBOYgCKyqU9VNOU/APLwnfv30WJCYnyIq8vvDK3gMIRc9J2
      J4tEIuE6EMhYtB0Hh0e31uRjMde2eXNhCb969jza7TZkAHOJ0e39//j0Me6XD58xBI7OnBBj
      elqVm4b3h6hCdJ6icN7lTgd/++gBupRbMIi6dlIh2kVCQ3RgZhrldQYDd03kfyWwazuSJOHm
      3i7+8u6naA8GI+0c1bSxQU+jYw7QP2p/SZKwkEzh37/8OXx+5TQAZh3gs1J5JlnM6lsWmv0e
      LGf01BgL0QLb88CksUODQFdV/NtLLwMA9ltN7DQbeHlm7sTKex5g+4/ur4uFIlKGgSi13dxL
      4BH86tkLY+80WcYP1h/ipcLM9GYAeoDxDNsgCMoEkiRhPpnEb7/0MhK67qv2EJqeN0zTdPXd
      k4LjOPjHJ49xa38PT6qVEytnGuD1U2cwwB/duI7H1crIe3rBr9XvQ5FlnPaIJ0RA3M9dcxjY
      ucYJX+lgqE61Bv3JV4J5EC1iAcFcqn7vvVyuIgagaThpkJmGNuD7/T4ikYjwdsZplHl1dg4b
      9RqyqoZmvQ7DMEbo4NFFviXwSs/7Pel37G/TspBVNWi2g3a77eZLrj3SdR1/dvsmzuUKeIe5
      W4xtB3qm75kWDttttAf9sUU7VVbwjZeHZ6XdS/JOcpBMy/ir1WpIpVIjM816tYKFZBJRTfdk
      ipNmAna2ocsjA/KktkkQbG9vI5fLcdtatNdGBNGAn9Z3fkdJu90uZFlGLBbDerWCQiyOpMds
      z4OmaSOLY7xv3UvyJEmCYRjuQQ/yQdCB4yVtpyn56HJ6loV/ePIIr84t4LX5xbG0z1vt4UlX
      xxke5CCrwydhEBNEo1FIkhT4DrPPEl42meM4MAwD+/v7iMfj7rFM2kPpxQiKokDX9ZHo3aK0
      Y25Q3g8PYdJOayCyC2URVcVvXbiEz83Nf+buP7pzeK5ky7Jcj9ZJMWaz2TxRw5tG3zLxj0/W
      0R6Eu8mFwG9sOY6DWCw24g4NCkVR3HhNtOubZ2SPMIBpmmN7gby4lJ32bdvGeqWMb9/9FPut
      5kjaaYCn4uRjcajy9Pa7nCRIHFFd10+ECSKRiGf80Gmi3uvh/uEBKkebzyaBlwAlswBPbVRV
      FaqqjuwJIgNdURT0+/2R8Xl9p4TvC7a/jDBAp9NBt9t1fwNwpRaZwolfmyzxkxj5pEM3GjUM
      bGtqV+HQYFWM49oW07JNwoCcI47FYlNxzdqOg43a8ObMQqEQ+tK+SfDTzae4f3iA//21N7GY
      Gr9UJQy8+rFcLiObzbptRMagaZquqk7GJGlLk1kXsmwbt3Z3YXJsDkmSRm+JlCQJW1tbMAwD
      siyjVqsNMznaoNTr9ZBKpdDtdtHv912bYWFhweXGd5dOYaNWdV1WQQdZEGNr2oP1s1r36Ha7
      0HUd0ejwZNtxPETrlTL+fv0hfv38RcwnU6Evl5sEEiTOVXqTgafTk34hB9oJ6FOABKzWQt5J
      koR6r4uPSltoDfp4Oze6N4qU6wbGchwHiqLAMAxEIhGkUimUSiVkMhn3vCvZ1yJJkvucDQ6r
      KQo3KGoQ8PaI0CCR2ETMEtR197zS+31H3sViMUQmPLW1ms3ha7Li3rwY9taaSfDWCWy04zEC
      z1PEa2faWXNtp4S9VgulRh1LqTQeVyv45VOr6JjmWLsDTGQ4xxlGPaD/JgeQaZBwFIZhcHUx
      8n0Y6U8zoqii8Xh87KxnEATxHHyWKJfL7uwalk5ZkrCSGd7vRdzELzos20al20EhFh8bkPQg
      JczMG18iD2XftGAoCi7ki1AVGYok4Z83niCqaZhPJN29SOR7octAkiShR4GeiljmEA1grwWY
      oKpIWJWFzvtFHPgEuVwOpmmiXC5DVVWkUim02233LjKigpIZUtM07kDvdDrIZDKfmWoXFDf3
      dvDB1ib+45VXIAH41q0beHd5xQ23TuhPp9M4PDxEPp/nCkh2HAHAO8sr7jPTsTGfSKJrmah3
      e8jFYnhcqSCiqZiNDy9/nJrP7H75EJVOG28tjk+PXmsDPM+OCGEXZESN9SJCVVVks1kMBgOU
      y2U4jjMS4IqWgu12GwcHB5BlGel0GsrRaSjDME5868U0cLEwg4RuIKZpsBwbZ7I55DhX8RKV
      exKGliQJuqyOHb75oLSBtBHBr6ydQ880h/cEK1NosFq3g4NOe+w5j3hWKgftML+GEKlRL/qA
      oKFp2tgNLyz9kUjEPX/caDTQ7/eRyWRQqVRcFfFFqzPdJ4aqutJelRT80ulVAHydP5FIuHef
      xaiLL1jQKlFrMEBU06AyaU3bRlI33E2DpWYD8m5LfHA7DN5YWMK/YnbeAdM9WONnaNKNLFr8
      +CxB0xXmG94sKUmS66xIp9Oo1+uYmZk5sStTjwvSN48r5ZEb7mnw6qqqKvL5PHRdx/sP7uP9
      p4+5UR9od+q3bn2CD7Y23HJJ2aZto9xpo20OIEkSzmRzkOcT4W8QAYZTsq6P77/hgSyS8Z5P
      ywZ4UQc9jbD1FYH1nWua5qpIO5UK/uTmJ9ibkmCbFgi9P3j8CB/vbAMYtsfD8uHIfn3Sj/QP
      ACiqisfdNm7v7uCwOZz12B/TNGGaJt5ZWML5bB6mabrR4yzLgi7L+A8vfw5r2dwzL9CkFSK6
      Jh2Kwg9BVBgvteVFHdhhwLYB6wUhCBJukv42m80O9xxJEgwJ7h1cLwoIrf/mpcuIa8O9SrVe
      F3+//hCfXz7lGWdIkiTIAM5m8/ho8ykGnS56kjw2XohwWY4nAGe4u5Q4D2i0+n18uLWBTDR6
      fCPYb1ATrvbzyARxg77o3o1JQNd3Eo8VPRMYhoG1lRUUarWpRoOjafUTUn6gg1NlIlH81sXL
      bjh1EUgdT2eyqHY7MHTddcGzaUR00/Q26jUc2Bbq3Y73Nal+0DTNvTM3KHg+eZ5PlycBSWx+
      HngNME3746QxDdWNqJrVahX5fH7k+TRmz5NeT/Gik+1LNgy814zZGQxwbbsE07bQNU189ex5
      OI6D7UbjeCfCBsz5zCDgTfkivY+FV1k/T4Odh2naBryTeJ3BAAft491pNm2vGs8mYhdFRScL
      JUka2YXgdfrw/Y0n2GrUcGNv140aaDk2vnP/zvGPRE7qo52kEf2++V+BCdgIfWzHBlE5VVV1
      N8WRvN5/+hjfvX/32PQRkAMrtEE+aZh8HgP41ZOsmVQq/sdAF5MpNHo9vDwzi6+snQMAKJKM
      Xzt/8Xgq0LTg13BERfJSgdj0wM+fzcDSzbMLyP9es6TjODg8PESxWHT/bw8GaA36mPXw+v1g
      /SHqvS5+8+Jlz7wlScLTp0/d3ZmOM9zP1Gq1EI/Hkclk8JONp4hpGq7OzXvWmVWr6MFP6ihS
      sSVJcoOPGUdxgkT5W44DleOCfiFcBV66Hztb8Ja/efn9PIKsfBJMwsj0N/v7++7FFDFNQ8Ln
      4o5T6Qw6png7Nd32ZNU5EomM7MgkadqDPmRp3HBm8yF//8vWBhK6gUvFmcC7AyRpePqt3W5z
      LyWhmUkTbBJ8IRjAD6y94PX+5x28wUL+D+pskCQJMzMz2Nvb4zoYRDiTy/snOsLc3HgIFnoF
      +70zZwEE8+5J0nDrMhmwvMjPIjiOM7IDtjMYwMHoNbFe378QDOA1wNnOC5P25xF+AyVMHXVd
      x2AwmOoWaVpNCaI606oNwJ8RAOCLp9fQPbJb/LbF02i1Wsgc7YYFgL979ACmbeNLq2v4H3dv
      4wunz2DRY4fsC8EAQDBX3c+7kXtchHUepNNpVCqVkQEyLTom/YbV8wl+vPEE9w8P8PuvvuG5
      JkJ/Sxa66DRvLi7BdhwYqoq5ZNKNISrCyd7ZGRBBG1TUGJ8VY5yE82CaPnZyrPU4eYra9nG1
      gnKnjVq3ix8+foR6bzwAlQg8t3cmEkVrMMBHpS03fiev7I1aDd/69AY6R1dTscw9m0hiPplC
      RFXx5TNnfRcEP/MZgF0Q88KLJP23t7fdMCSSJKHb7brnfOnwJ+SuWrKtN+az6jkt9EwTT6oV
      LCVT2Gk2ENd1pIzgq8M89yTdT3/38D5u7Q/96i8VZrCazYXKv2ea0KnQ8RcKRWw16ri+u42V
      TAYzR/v1WUQ1FdlIFIokhVLtHMdB37LGIoNP1Q3KM3j88g7jOw7qBn0eODw8dM9Gx+Nx1x1o
      2zai0ShqtZp7rWe320U2m0Wr1cLCgvflEl5tNrAsriuPh2vbW/iotIW3ogn8rNPEUibr+sCD
      QrT+IEkSKt0ObuzuoGea+PKZs5B8aKdRbrfx57dv4kura+62aFLGQbuFYjwxwoAkz4N2Cz96
      vI61ZApLsfhw/5Nto9rpYMHnJNz9wwP88PEj/M7lKyPbMabKADwvRRAff9Dyq9Xq1PXZSUEv
      UHU6HfeOKyL9yRYRsmOW3G8bJGgVz9it9br4s09HBw2JgylJkjvjuL9tG4ftNpKKgvXtbawu
      L3tebHFtewsLyTRmE3zJC/BP2NF00lEbvGDZNq7vlHCpODtCE4/hyOzabrdxt3KIe9UKTucL
      +OLqGoDhRYAPy2X8/mtveJbZHgxwZ38Pn5ubd+8nA05gBmAlBcmbqAA8L07Q8uv1ussAfp4I
      uoNeJNVpUtiOg+u7O/jc/AKiR8xG+9+JoCGrwLRtdHh4iEKh4NnO/8+1D3GpOJB2qe4AACAA
      SURBVOt54J3Xf+z/5MK7Vqvl2e68vuPlf3h4iGg0img0CkgSnlTKWEimoKsqJGl4L3C91+Ne
      CuLnPgcmZABRxl4MQD9jpUjQ8mu1GncG8PMTs41NyifxZE4yXOGk4K0Kh3EW0P2wsbGBeDw+
      snmMhZf7lX4vGtS8lVxJkvCoUsb9wwN87WgDGu8bugw2Ddn0xubPfltut7FZr+HK7BzXgBa1
      X2gvEM/zEoaB2GkurHRmyyd6t9emKXbPCvmxbdtdRn8RQOhiT42JOk/UfmQ2qPe6+G/XPsCO
      2YdjeKte0/A+8fYtmbaFAXXghaWf7js2Da098FQuGg8rZfcUGC8fUd0mYgBeJXhc+VmoHzz6
      RJLHcRz3NNFJuDTDgGZMAl6b0vBqX0mSEFU1nM8Vsdnp4C9u3Tg2fV4Q0XEuV3AvJeQJI145
      dP8YhoFarcZ9T+P1hUW8sbiEOnXcksc0PdPEH1z/CHf2hxfuhWaAk/TFX9su4Zs3P+aW6ddY
      IvoIjaL/eZJCdC3T80ZQGnjt7jgONEXBF9bO4msXXsK7nGgdYTDJbE9js1bD3z16AJtiai/7
      jfzE4/GxcIdcIesM7yK+f3gwRjP9tyrLOJvLu/GB1Ha77carJBKH/k0K5f3NZs5rJFrP92MQ
      w7QwF42hXC6PfQsMvS3TmlF6vR4WFhaE+YVh6CB1C5LHpGBtHBKJ2nGGsTJjioIi5fqbtAxC
      p586wkOr38NhqzXc5sBs+KPHj0jQ8cYWq4b/3tVXYVBXKNHfk+8UWXbvBwMA1SvUBA3WmAxj
      DPE8QLR7lPzNhgNhMQ0XKKH/8PBwKgOX4MPSFvZaTfza+YueeU5D1+blef/wAMV43PVx81zS
      5MbKScsQqZOAPzOcLxRxvlD0TcvSTZ845GkfNCLUIpfjOJ73MVi2jW/dujG5EcyCVRvojhad
      1iHqxvOC39Q7KRzHQSYawUw87qmuBVFpLNvGn9z8BHcP9gOXb9k2vn3nFv6vD37qOaPRv8OC
      Vy9eX08K0ffVapXrvWIZhVbD1ytldExzbGz1TBOm/cwgn0skprcVgjd9+UmH4+qVQeFnSHql
      DzpgzuUKni7XMLTmYzEkQtzyosgy/ssrr+OwPR6YjNDA1v+g1cLfrT/AV9fOIxsNph6xMyad
      7yRqkSj/nmlCUxQoR2H5wzLYD9Yf4uWFRRQjUTR7PfdQzl/cuYVcNIavrJ2DLEn44upacAaY
      tFMJ8SzHkv9lWcat/V1s1uv4+rkLofP3K5v+LQJvWg9r1NMS1nFG97TzGIOG7TiwHRuqrECW
      JHz5aC+9H2g6i7E4irE4t3xg2N6maUI9WkDSFQVJ3eAeFOE5CfyEGEnLazsek4jsSNO28P9+
      cg2vzS/ibCLp7q8KwwC5aAylWg13dncgSxKuzA7PLryxsIQYI1hCzQA8Cc8ObJFe7aVv64qK
      2NHqJsEkkpP+LqjU8DLqjwOyD590Nh3Co9lsIh5/Fhn5/aeP8bhawX/63GtwHAetVgsJjy0J
      PPDqQA+8YrGIR48eIZ1Ou3V+O19Et15Hh/HMEOah1VpSD9pvT1Rbkl4kcNiBL0qXTqehSDIu
      Z3Ioqio0TXO3jrBM4DWeXl9YxJNaFd1BHzLl1FnN5rBZr2FgWS7jq2G5iyWcbhzeFOkwjcvj
      /vP5Ai4WZwAM9dkPtjZxKpNxI/gGgcg4CwLWSJ+GR2d3dxeJxHBTV7fbhWEYaLfbWF5ehmVZ
      +PDDDzE7O4uFhQVE2h18bmYOnU4Hu7u7sG07EAMIXYLgq5fkMo7FxcWRPNjv6cFNr/GwUTt4
      bcxrO9EMS6PVarmbHc+lMygWiy7NbD5+zovldAbL6Qyu75TcEOySJOFJtYI//fQG3ltdw6tH
      lyrK0zBe/PKgG49lnt1WEzZVmfvlQzytV/HTzY2JbQMvfZ/u3GkOerYcNr8HDx6g0+mg0Whg
      e3sbsVgM2WwWt2/fxpnZOcjlCm7fvj0Sz2eadDiOg9OnT7u30vAkOu21I9diESmsaZqrj4tm
      A7Zd/dRIsnkOGN79IMsyut0uNyx/UJWUFravzi9iOZ1xx8NmvYZsJIors88O6k/FC8RKfd62
      BPo7QlC918V37t/FbcrjcS6Xx1IyPfVbSER082apSRivZ5r47oO72Gu3IEnDTWGVSgXlchnR
      aBSJRMK9BcZxnJG4qoPBAIuLi1PxpPBcheSIIdn7dNJOB1KuaNCSZ2xQtWQyiZ2dnTGtYlp4
      d/kU/uurb0Cl7COuDcDzZHjpmOwzNi3pADJ1kvdJI4JfOXMWS+ln/n1FlvHuyilumUGn3LAQ
      2Q1eeY+pexLQNU2Y1rBDi8Wiu8Uil8u5ElTXdaysrEDXdezu7uLixYvY2dlBPB7H6uoqms0m
      5ubmpt75dN8cHBwgn8975u+nZoQp0y8NXV46nR65DJ03xkQ2ZhBNhE3B3Q3Kcp+oIUSGp5cX
      QJKe7V2XJInr5vKb7rzoEjUEa6yTuDlhwjqGhV97AP4LinQ6No+gg4Olpdfrodvt+i4ssvmx
      cXr86iGqswiKoqBcLo8cegrDiKQMYtPZjoNbezs4ly+OLJLR8Lwiia2EH1iupVULr8FK0m83
      6vj+owf4tfMXkY1EhWUH6WSajs8K5FK/ZDI5siLp16ZBBAIrOYP0E+kPwzBQrVbH8vEDPfB5
      fc2rx0moMiKQcqrV6jBqXKeDfy5tYNDu4MrSMjqdjmvf6Lo+vG+YRxxPsrDvw6Th6f+8bxK6
      gYVkynWJ8hgnKEP6GbeO47gHSlhJJWJcWo3w69BWq4VSqeR6c+7du4fLly+jXq8jEomgVquh
      0+lgdXUVh4eHSKVSkCQJtVqNq54EnYW9QPeJJA2jqkUiEW47B1GPeDO/iD4RvfR3lmVN3N90
      /sS2SKgqvjK/hGw8jq2tLSQSCfT7fff61UQiAZUnaURTN8A/4iiSun4GM/mffJM0jLFFIBHD
      8BgsyKChaSX3GrADm2cD8fIhtg37HTE42+02LMty9ziRzrlx4wZWVlYgyzI2Nzehqiru3r0L
      x3GwsLDgXvbA2lQixqOf89LzviNMaJom1+VK6nF9u4S4ruMsc3aXl97vHa8OItWJl8ZP6BDV
      h9gQjuMgj6FqlUwm3UsEe72eu74wogLRDTepAcSzHejOEeE4RlcQA4j3TTKZ9L2L1ksyes0E
      pmni6tWruH37NjRNc9cBms0mDMNwI0qQQ/Pz8/PIZDJYX1+HLMtjRxiD2EUiumnGpJFOp9Fq
      tVAul117jMxEBJuNGjJGxJcBwkLU3ySYF3122suW4NWbF2GcOCAAjLhZZfKRnzEoSd4b13gD
      gRDHriiKvvcbxKzN4HUSTAR22mbz9zp9FKTx6Z+nT5+iUCi4blBi8C8tLSGXy6Hb7WJxcdHt
      kEajAU3TRoxT0jd+9SPp6LRBhEI8Hkc+n0c2m0WlUnHrNLAsrFfK+PXzL+G1hSVsNxue+bHa
      gx+tovoYhuHaTgSiPC3HwaNK2dc54AWVEHRcsIObN1h4Op4IXiqViNmC0smWQZ7zbBYRTX5p
      VVXFmTNnAAwZdWVlxZ11CNbW1uA4DlZWnt1tS59/nRSs9Kf/FqmJrU4H/7JdQmF+DslIFPcP
      D/DPG0/wO5eu4JPdbaxXyvgvr7zOFQ7H0RhYKIriMrLXirMkSXhcKeMfHj9C0jAwE0+gcnRL
      aTYaPPaSyivAq/NFBHk95xk85DnPWGWfi4xRUbkiPZn3m6QX5UF0fa+0fmDL9GLCIPU5jhAR
      YetgHw1DQ7nTQcKI4EKhCAeArih4Z2kFlwozXFonMVq97AUAyOfz2N3dxeys+N4wx3FwJptD
      UjfcIFo/fLwOAPitl/jh3bm0iNYBeMQGYQLRe9qoZvMhOxQJwvrmvQalSDqVy2UUCoVABpdo
      IIWRfF75BVEZ6HSTrl3w2slxhvcuqKo6ErVOkiT88Y2PkY/F8NW1c1x1UCTY6DQ0/V50aZo2
      cuMLAOzs7KBQKHC3RvDyINevpgLcj0Zo4ir1It2Wfsfqu6Jpl5cH+5y4rejoAEHhJ5HDGI7s
      M9txsHOk+3rNepOqK36MK9pfM2l5f377Jn6w/nDsuWEYY4MPAL66dm7k+CCPft4zul50moN2
      y40QQZcdi8W4V+7Oz88HvvfYcRwkDSPQ4KfhGsFsZuxVPfS7oAPCSxWhEdaQZcvjlcGTWOyP
      H+4d7uOv7t7GIedurbAeM1ZQBJX6vDyCfM+iZ1mYSySxmsmOqZiGYUDXdezv74+UW4jHkdB1
      T8cFe6GHQsX7ZOvxl3dv41+o0CXA0FvW6/XGDF/ybTwex8HBgXA8sumDOAvodCqrjgSV5l7T
      G80AbIeJCAyjXolo4eUXVM3g4WwuD11RkeMYVcc1+kRMyv7vZ48FxftPn2C7WccvLK1wvydX
      HIlmxSD9QwQnScPO5l89cw75eGxEiyAr5OwBIgLCnJVKBfF43A1B6QWRsc+rN3c7dFAJGVTa
      iySvSFKEAT1bkf/9DNygUGUFZ7I5bmOGmU2Cls9TJ71cz17Rkdm+eX1hAV84tTpWHg1yn4CD
      YSxSAtpGY+usKAoikYjrPn5areIPP/4ZWtRVS6SPFpJJRNXR+KReY4J+pifiqFDxgUQQjQOR
      IJF501iYAUM3DNtZlmWhWq266wC9Xs/dZ04Cu8qy7LpHebZFULCMELQetK4dZJql8w5TxkmA
      7Gmh/yftS/bwEwMyZUSwmPKOrB2JRGAYBj549BB/dO0jtI5ubCEh3tk8gWeHbADAtG2oioyl
      ZAr6ER0s/GxHkQ3457dv4frB3sieKj/bj+5bEVSedPMzHNm/6WhfJA9g6GmZmZlBtVp1Dd1W
      q+WGCyfMATyTZsQz41dBLwQdmDy7YxJV7KQGuF9fkDO+siyPdbTFhCOk60Lamrcuk8lk8Gos
      Bk1VEdd14Oh9v993txqwNNqOc3QZ9RY26zV84/LVkZAkdNk/2XyK5VQGS9SOzyBC55dWTiOh
      DAP/sl4hVuVxHAfNfg9xbdywZiF7qQ8i8PR5nocik8ng8PAQiqJAVVV3z0k8HodhGO6WADKN
      0hLjOKoLK9V5J6AmzZc1IB3n2dL7SUaUE6mYg8HAsz48SWuaphttbeA4Iye9TNOEoShYTaXd
      wU8gEhif7u3ij25cw0uFGfyrcxfd5/RAJf25Ua/hoNMay8Nv7K1mcygkk+79x+12G47j4Ceb
      T/HtO5+iRXmx9lpNfPPmJ3hSqwrzI3CN4KC6Oc9oZitCnquq6m4EI5LeMAw3XSbz7Liabdvu
      sbiTkqg8mkXgMTSvrehnok70cwAEBd02k+TFfmPbNv7w+kd4ZX4BbywshfqWfn46k4HjOEhH
      Iu5N7Kyg0TQNpmniG5evjn0vajOeLWdZlrtlpNFoYKtSQV8auljLnTaW0xkU4gm8ubCEhST/
      0gy6P2T2Be/2b7/gVUENDvr3cSR8UDpY0HUK6hYNIp1Y+4NXJt2WYevNBhybJt5eXMZaZjTw
      lB9zsW0S1w1cmZt3Bz8Pg8HA9Qx52Xn0TM17n8/nEY1Gkc1mcaNRw0I2hzfzRWw3G/jbRw8g
      SRJUWcbVufmRK5hEGNkLxNPjeQgqRVkEbdjjQGQ/iJ6zM58fI4elcxoDljcbTdoHNCRJwuWZ
      WU8PHp2W9zwMiE0QNg92JohGozBNE/3BANv7+1g5fwFvptI4ny+OCAryXSwWQ7fbdWckOj/h
      SrAXeGHp6N88ieo1aMLaIF7w8wwE+Z6dKYKm92IuAnIckRiv9JFQOh6PiH6e5LQdB3997w4e
      Vyq+9RPRz3vuOMOV8Ft7u2M08ujyA7GXaMiyDFVVRyJE0FuX2W8JHUNDt4+b9Qq+t/4Qu62m
      G/GZrhfJS0SfShdAPqQbwGvQstPypLOCSDqHxUkZn6J8RYJA9J0kSXj06BFWVlbw4MEDGIbh
      uhhjsRjq9brb7svLy6GMdRsOHEy2kk4vXtF96TgOHpYPsV4p4+XZuTEbj86DbQfeYKe9hoTx
      aYOcgHinSDrzKM4nsQHITtG3l1dgmCaymQy+e/8ufu3cxZHL8ogq5bWdYuxADMmcbQi2En5G
      M+97toH99O+TxDTK9BoIIrViYWHBPYooyzJSqRRkWUar1XIv0SP3+9LfeZUtSxJ+/fxLx64P
      m78kSXh3+RTeOVo9DmqAi97TNJNBLkpLTtvVOx3YznCfD61CHbTb0G0b6XgCn5udx8fbJZiU
      irNVr6FnmljNiq+FAjiH4mkmYIkPog6QPOj/6bx5uuVnxQTThJ/aR96z17wettvIRqOIU9M3
      6QNJkvCD9YeYSyTxpFbFW4tLyEaiU2srv/4h7xVpfFsD+x35Tdyyg8EAsVgMmqaNHB0l+ZL/
      LcsSrmg7joMfPH6Ivmnhty5eAvCsvX6w/hAwB2jYNlYLBRRicfTMZy7hm3u7aA36OONzkk0Y
      F4g1GFhDzK/x6GmQVqfohpiW6vNZIYgh6lW3WreLP799E59fPoVLM7Mj35Dvar0uYpqORq+H
      gWWHaisv1ZSUEUTNqnY6SBqGG2cTeLaDlGyT6Pf7cBwHnU4HnU4H9Xodc3PDcI/JZNI9+N/v
      92EcSfNWq4VYLOYZnuWdxWVXslc6HXz77qd4c2EJV/IFLCST0A0DEVUbOwPw3tE1ql6qvCRJ
      4tCIoo9E7is6Uy+jkP2hXV7PC351CJoHGx+HJ0G9ZriUYeCLp1ZxJpsbEQr04t2/eellXJ2b
      w9W5OcwmEqFmS5FEJ38HUWXagwH+9NMbuLm3MyawDMOAqqp4XKvij29+jM5RQGD6bHEsFkOn
      04Ft264K02q1YFkW0um0r4s9G4m6Ua/TkQhShoFPD/awkkpDV1REBHuLVFmGerRC7lXPkRNh
      fi5E9plogPPgZTPQU/60L8zwM9B59fADb7bjlRkE9E3pvHKA4S3nH2xt4lQ663nZtR9ooRME
      juPAUBT80sppN8YmqVuv13u2wq9pWEymoCkyVC3mqnPkBs7BYIBcLjc2vngGNVs+++7Lq2to
      9QcwDAOVSgWGYXBtUBFUVR29c6xUKrlf8HQ08owO9e1+HHI65jUAPQUHWXSbFthb58NKVq//
      /fJ8cHiA1qCPKzNz3LRsO9uOg9ZggDR12GOSGSyo+gqMtw8Lx3FG7lmmT3TRahI54+u3ZYOX
      v58x7TiOe3d0kFNjwHAbDtlGAVAHYngSjUhk3m5RkZdDNOWw+YvyeZ6qEIugZfNUuTAoNRp4
      erRPReRBo33eiiyPDP5JEaZtvepEh04n8YvIHh1SDnFxdrtd9Hq9qYag3G420DtyjeZyOdTr
      dXQ6HVi2jQflw5Fo4yx6vd5IO6i8RqElBeE2P1XC7x2Lk4zJOQl4hnnQgc0alH7f/vLpVWG5
      bL4iWqcpKFg1hLcfi6eq0Ls9ed/zdoNOg9YfPX2MV+fmcSE/vEMgm81ib28PdTj44dYGdEXB
      Spo/e7FrDtx5I4xORadjp9ggTMOmf14eIVblYBHWQ8Wr/6T2BUsn+/44g180c/ulY1XfIO1D
      vICid64awkQNF4Gk+/raeSQMYySvYrEIrVrFL8/Oo6gbrk2532ohYeiIafw717jUiS6Q4Om+
      9HN6UAVVEY6jShwHNJ3T2MbM1oHXdjz1kFcmrQLRqPe6+NGT9QnWe8fhxUhhvXJh03p5pkS0
      0enSkchIjH/yPpfL4fziErrdrquS/c3D+/jJ5ug5ZLqMiS1OL8aYVEe2bBvfvX/X1Y9PCl6e
      qmnt6ydtwu5qZG0hniooGpzXt0v4y7uf4v/84CduCJBJ6WLL4Xn0RJCkYRgT+n9WkLDCkC0z
      7CzGtqGXCp3NZtHr9dDpdPC1tbN4Z3FZaOcKTWfygchQZad3l6MEh5uDVnJgW7AC2AciSeLX
      cfTvsGpOGIgku9czkSOCIK7rSOkRvFScQWxCdyhPLaPbhR6gtP3H9iU5wMQLp0LnyyvLbwYg
      dPJoF9WBRSqVwu7urnvXmCg/X98RzW0s4TwdmiWS13i8SkmSNNzTcu5ioAHJU8do2vy+5THx
      NCFShdg28WsfGldn51GIxbHsc7Y3CF1esyD9m6ef00cwWb86Ly8vg5rnYJmWo0XjCAn2e1VE
      ZJBC2WlIZByJyhBJ8UkHppe6xZMuXum9ZkARgkztIlsqCDRFwalM9lgetCB15zEl3Tdk8HsN
      fK/Bz9IChPcKsv3DG3eEUWlXPtv+8iQGaNDpfVKpHGQg8abWIHWgddUgacMM6rAqH/n2RYRo
      MyRp4x5jg/Qta+RcLjA62H70ZB2b9WdhTWhDf1ptwOsDwqQs47szHMs5PAOWZwOQCtAV4v3t
      Na2JZgQiZYI0TFCD1W+GY3+8pJjom2lA5JV6WD7EH9+4jq45cJ//zYN7eH/jSaB8W/0+buzu
      wHLGN9Tx2pvuhyD4+/UH+NatT7j1kSQJe+0WGv2ecExNWxUl9gnvYA1Nw4gNQE8TDytlnMpk
      oQfcAsE2Hq+RWfipX35GKm2kTQre4GWZmQwEPyNtGhDVJWkYmI0noFKMUYzHhf5tFj/d2kC5
      O9xb/8r8Qqg289PNJUmCg2G8/rHnR8++cfnqiEEtUn3DYsSGpATy/YN9/HjrKf5dPgdNHh6+
      IfcfOI7jxiTlGsH1Xg8/erqOX7AsvHR0g/tx4NVw7PsguqNfvl7p6c4Meu4hqCo0DbAM/bB8
      iGvbJfzmxUt4j7k+6rX5RfZzIS7ki7i1v4PVbFaowvIMd/K/H75y5pwb+FbkFPHLbxJ1iNDN
      HpeM6zrm0xm0Gk2kUym0Wi1Eo1H3ruZOpzO8Gefhw4eOZVlj0rTcaSMTibp7wHnuK8dx3Ptv
      eaoUWyk6H9FzttFEwZgAjHmnSD50wCi6keifer2OZDLpyVhsp/G8YWE6zM92otuf/N6q13Br
      bxdfPnMWCsOsQYQErzy/mdNxHLRaLRQKBd/8RN8fR5oH/ZanprP1Ozg4wObmJlKpFE6fPj2e
      x9bWVihKWSYYDAZjV4BOqpKwA4CtGP1b9LckSSM7GXnMQqs0XmXwVCHeO/p9GIjUxKAqwSTe
      IC9VlE7TaDSQz4u3ahNc3ylhNp7EHHXRHrsnKky7BGUekY0qSRJu7e/i/uEhvry6hlQkAtM0
      cXh4iFgsNnLyDjhyg0qShKe1KnqWhfP5gksID+z2ZYPZk0GkdpBK8gxNlsEmCZRF9qlPApHR
      z9I2DXipHTw6WJpIW4tWk0k+QcC6Cf3aj+R/c28X3ewAs0cDa7NWHdoqHoF7g+QbFLx1io1a
      FV1zgL12C6lIBKqqQtM0V/2h4dbyfvkQrUEfFwpFX2L8OicMRDMGy9286Z5nlB53kNID8TjG
      mR+CDHCaBhHIrYoWc/GEn9PCr1z2t0go/O7Ln3Of1Xtd/O36A7w5v4Qrs3NjdPBA2oEwMRF4
      fvYdG4+Wfvel1bPYbTawks5gq15Ds99HtN3hXgfrngj7ypmzoTdZsYOXHjBBOlekS4v0OpKO
      l79INTkOTtLoFdlMYUEfNaRBG+5eefOECHn+T08fI2NEcHlGfFcXWW0dDAZI6ga+fu4iZuPx
      0DMQjyaRuiZSfQgiqopTmWFIzrsHBzhst/CFmTnurCbTHSBL/OmYB5JGZIiJbn1p9HqoHF1Q
      TeflEsTZjMaGPX9ep8ZOGqJZjdfB7HfkW6+9OLxyvNS7SCSCn+6U8Jd3b8NxHHRNE33LdG0m
      dmPf3cMD/MH1j+DIshvXdSGRhKYEUz/9BCYrAHkhLUUwTRP9fh9X0xm8t7gsjDyhstLYj2N5
      DRh0KrcdB995cBeWbeM3z780tqFLNK2FRbvd9owGNgn81CFVVbk6ph8mcRoEqVdYw5P8no8n
      EJcVdDodvDMz53qECGijNqkomNcjaNbr6Bzd80DCnIgOy9Cg3wUxlkVOD55qU6vVXLp1XUc0
      GkWj0RhxZjgOZzNcUCJow4v2qHjqbgDy0RgelA8BjsIlGvxhJL4kSYhEImMrgMeBSGrSaDQa
      EzOAl3eJl9brfZDyRM87nQ6WE0lIyRQODg7cSN7twQCKJME4UiHIBrgZw8AsFYFZkiRXzSDO
      EfK/aZpcVU1Ei5ddSNfDsizs7Oxgbm5uJG00GkWr1cLMzIxLA60WAsNxO5mrBOMcSxMt0m8l
      ScKrc/PYqFex02ziDBW1i5UGx4GiKNydgEHB0sLqybxB5HVdURD41T3I4PfSmf3KZvuSeE4A
      4K8e3ENS1/Gr5y+6HrZWq4Vat4vvPryHL50+g/lkikuD4wzXimRZHjk3HIQOkR1IQ9M01Gq1
      sfHY6/WQSqVGBCHPjpxYmaZ1MvY5z0onheYiUfzbC5exemSkvGhgp1nSsMe5yTJMmTwEsckI
      /uz2TXy6v3dsmmiB9s7SCl5fXHIXPEnoRkNVMROLI6pqbts8qVXxYWnLzYdcoeQ3+L3gxcQk
      uC7dPp1OB5VKBanU6P0APAY7ljXJkxyi6YtOm2JiudAETcOLEyYfnlE1ySA/LmN4lR0m70Is
      jqT+bG2G1KvHuQ6JdfnSbUbr8YupFAqxOL7/4B7+eeOJ28cRVcV7q2tIUWtBB+0Wtho17qxZ
      63bxrU9vYK/V9GwDmh7eD6FZlmVUKpUxG6DZbI6FoBTl76kCiVxkItDGVNhBKNrROYmRSNPi
      Fc6bN0PRNAUxzOj0k8JxnLEFHZ6tFQTsTZAA0Oz38c2bH+Pd5VO4SK3z0OWxIHF+IpEIbMfB
      v2xuYGBZyMn8i+8IXp9fdG+bYXVuRZKQ0g3o8vjWGQKRRkHPxKS9qtWqe80WjXg8PrJd26tv
      xi7JYyvmJRl9jV4fiUrek86njWny3SR2ATsrseX5MSfbcWHLnAQie+o4kCQJm/UaPiht4srs
      HE4JQoWQtDQNqqq6LlbTtnD3YA9vLS7jYqEo1PVZ2tk6xDQNv3K0oY/XL7xveONBkoZh0rvd
      LnRdR7PZHFFTe70eZmdnR2jiwXEEVySx0jiMRA87a/DyJRWdhr5N5yVS9KkV/gAAHNdJREFU
      AUSdGQbHHbCuUcacXiLYbzXx/sYT9AN6Usj3qiwjoqj43Oz8WFhFUX/vt1oY4NkagyYr+M9X
      X8WFfEGo9rLl0s/Yw/JsWh4IbWw62sZMp9Ouw6MnAd/beAw5FvXMl8UIA9BcRBMQdjB63S8Q
      5DueTj5t45NlDL9OfR7gzbAEH5a2UGrUcWd/L5RBPpdI4uvnLkAT7KnizbLfW3+An2w+Fc6E
      QZ0CvHesuus3E5P3luNgp9EYYaZoNOreX6wqKjRVRa1aHVN/eOo1qZcsqgCpXNhB2B708d+u
      f4Q7B/u+aQmB9G9SluiE0nHgNRuw5Z4kA4g63avcNxaWsJBIupsVSXpgGDv0bx7e414LymtL
      UbkkzVfPnMXbR6FEyI0s7JWzYcC2q0j9If+zAhAAbuzu4DsP7qJ95E1iZ4R0JIIvzC3CgORG
      gqDL5pUFeIRFIR/7GYPsu4iq4XJxBrloFNe2S7g6N49SvQbbdrDMscyDgjUK2emRNiT96hSm
      vJOCyD5qNBpIJpPuDSrkKqGMruMXlk9xB4/jOOiZJjecTFD1lc63EIsPdWnHO3pzEPBmV5p2
      GjSd7PuXZ2ZRiMVGdg/QArrX66Hf748MfjofUR0ChUUhGYmmtBHXlCThrcVlPK1VcX13G8uZ
      DG7s73IZwMs4YfNn39NHFMNOwyRfUZqTHvyiQVCr1WAYBra3t2Hb9vCwUTSKR9Uy8paDXCbj
      XkrR7/ehKAqSySS63S5+I+AVSWEHdFCdnQc6reUMI1xno1FXUPF2sIoEmaYoWEql3UFf6XaQ
      i8bc94oy3L7Bo4GuQ8808Se3PsGbC0s4ny/4rwMENUjZgbqSyeJ3r7yCmXgCX1s7j6+tneN+
      Q+cf9hZ3li56imY3bwX9IfUod9pYr5QD0xIGIklHVlg1TUOr1YIkSfhZaRN/dPMTXGs3UWs0
      YNs2ms2mexKvVquh3W5zfdysgFAUhTu4WLWD6M0ktj+9QZFcgEH/8KLBsfh4dxvfvvspQOXt
      tV3FSwg1ej3899u3UD1akDNNE5ubm4jFnjEEK+DIjyJJWM1kkT9iHpXt+KnBGV6u4DgONEWB
      TUkenlHFA68Tg0igIPXgSf0RnXNvF9uNuu8la2Hh5QmJx+OIRqNQFMWdylO9LlRZxpNqBTPx
      ON4tLoztlOVJdfKMFjKSJEHXdXQ6nbFZiGxxoOP4a5qGwWAwcuiJB3ILvOhgjiRJuFScRS4a
      g21ZGBxt4RYJO78+Tug63ltdQzoSQa/Xw507d7C4uIhc7llficaYLA0v/iMYuyaVgB140/JL
      kzxF+bEDJMzAZ79hyxTRw/4NAJ9fPoVByNloGmBPwL2xsIjLMzM4aLeROdpsxzvOSUCrpKzu
      3e/3oWmaK3npwe44DqLRqDsLSZLkG/qQgLgiacai6QGGawBnsjlftZXQT6u4vLFILr+zbRvR
      aNTzMg8vjF2TShfIEurFBA6A9mCAGLXzzusbPyOIV35Q8AY2r+FFNJBZSwuxwS2ogAgqUGiJ
      Fdd0JDLGiEcjaL/QkI+2LBPVhi2P3N1FP2NnEB6N3W4XjuMgEo2iNxhAEtwIL+pf0Vih34nG
      gaIoSCQSng4Quh4suF/xdH4/O+BfSpv49t1P8ahS5jYYPW3zbgv3Cm5FdFLWf+y1fYKkofNg
      f3j5+DEcazOwZQZBEJuK940on6CuSRIpg6yislva+/2+633ilcnWndhZ5Ju/vfMpvvnxtRE7
      wo85/WwHQpuofrquo9Xv4R+fPsbA5gf98mrvka0QXA7x4Kxqr4t7B/t4c3EZ0aPb+oyQh9GD
      NBChzWvap+knjU+/9/J+BDG8eYOCXigk0zZbJo2teg25aAxRTZuICYLCq56KorhbB7xwY28X
      CUXBTCTKlaA8yf1SYQaLyRS3Hbykuxe8+g0Yes5sXcej3W20BwO8sbCI958+wbl8wV259sLI
      LZGEsKDYbTZx52Afr8wv4pW5eVydnYPjsZDEVmaS+JyiwU/+9mpUnn4sqq+XHcErw2/wA8PL
      Gs7nC/jFldNCGv3gNyC8pnt6cdMrD0mScPdgH3ldx8z84siMzvYt3TaFWAyFWAyO46DUqGMm
      noB2tI7BGxOT2pWEls3NTbTbbeRzOfzGyir+5O6nsPp9dFottDQdlaONeyyz0XWRSqWSw76k
      pa0XWION1lEBuIs4NNiwKmEqDQSbMSqViucNkCIGFXkO/NrCcRw30BZNI/vNfquFdCQCfUqH
      Z0gZQWcTSRqe2BIdpGfz7Pf7ME0TkUhEaFzzaKu1W/j2w3u4lMnj3TNrbp9bjoP9VhPzyVRg
      6S8qU5ZltFot2LbttvuPN57i1t4Ofv/VN9zz7ezMzGLEC8R2OLs7k1dZ0VTmZ/wSZgnCaF75
      hYXf4Pd6x5uNWDuH1Vfp90UmKNMksGwb++0W5hLJ0N9KkjR2myP9m007iYrWaDRgmyZeT2WR
      VYentRzHgWma+NlOCQ+bTfz2uQuI6rp7g+Ty8rLvjMTSu7m5CVmWMT8/7w7w1+bmcSqVBhwn
      0CUrAMcI9tOXaXhZ6aKBTRtIx72GKAh40t8rnRezi/ZHiYztk8Cdg318594dVLvPVj2DlkdL
      QpZJRcYjbecEsZUsy8JgMMBqoYhUIgHbtl33aDQaRX3QR6vVQrvddjUE0zR9Z2j6/cOHD1Eo
      FLCwsDCSTlMUzCXDCQZ3Bgg6UFi0Wi0YkQhu7u3iYnEGxtH0Lssy+v0+HGd4hC6Xy7kNSGJ3
      hi0rLCYZiDzmF+UTVK+dVJrycD5fQELXkTZGD+CH7TsvRicgRrPoPcmHrAZbljVyIzxBKjVU
      eXb2dhAzdPRiEZwpzo60i5eXixYqlmWh2WyOxKP1qoMXJMnjRFjQTmu329itVvH+xmM0KxVc
      nl9Ar9dD7MgYInEZyaIL0SnJsnqz2UQ8Hh87vzkJggz4IPXieTzod2waUs9mszl2PG9SwSIC
      uSWGhZfR7pXWjy7ajuPp47IsuzYCOYyy12ig0u1gjVlFf3txCevVClYzuZGBzdp3fqr17Oys
      K0B534ZB4CORIpAQJP96dQ36URx2XddHCMzn81BVdaQhFWqmmEagq616DQ8rFXxx9YyrYonq
      xGMCvwHE6xA6n8zRRjWym5OAxMmZFhOI7AuaRq/BENRgBp6tOHt9a1mWu3JM0tw53MfjagVr
      zMrvQiKJxaMwKqJBTvePyEZkw8+wTED2SbG3wvP63XMGCAIi8cg0xxqIdDRe8p7+nUqlAtsb
      XnTV+z3sNhuBwzuKVBr2PcsEbP3ofKLRKJrN5tAQPJKGvV4PhmGMxa0JCj9pHUbFCzP42fz9
      PD8krSRJeGdpBa/Mzo8NuNagj4iiQvE4nEOXy6OX7IKly6NhHAVcYHeGimYbLgOw3Bm0kXlq
      A12RSacprymR4KXCDC4VZzGp6clKTkKj16k4VkcFhgKBnEiKxWKQZRnNZhO1Wg3pdHqkI0Sd
      zANbDg1WUtPpvYxdv7LJvREiiGYbRZIQ1/WxAfdnt2/hYr6ItxaXxr6haSLp2TSlUgndbhdr
      a2sjNNBgpb4X7W5gLNE04Tfo/MB+P4nkCiO1gjBZ2PrwdFU2f5ZG/ajzCdLpNPb39xGPxzEY
      DBCNRgMLAx69pUYDP958gq+fveAeEPFS6SYFj4l4aejfdFuxbfQLSyuYicXH6PNT1drtNqrV
      KrLZ7FgEiKDtKFK3VPZDOhHRpY/bmCKd+zjMJQJpuGkyAPkuqGOAp64lk0k3VmWr1XLXDMi1
      Pfv7+4jFYhgMBshkMkJ7w3EcGKqCpG5ApsoiOzKD7N6k82RppssSbbWmv/Wa9Vmcy41euOGX
      nqDX62FnZwezs6NRqlnmmwRcFYh3b9a0mSDIQORJkaDfimgQlcNLw0qyMO3AM9yI8SZJknuD
      Yb1ex8HBAYrFIgaDgRvAVQTHcZCPxvDVtXNjahH5/aRawXI6415vFYSJ/fqHpw57tUWQmYMO
      vuCVPhKJ4PTp057OhEmYQZKOIsOxuiFr4E06+Hn6P4DnsgAWFjxdmXQOLw2djoVf3RzHceNu
      ptNpzMzMQJKG3rNCoYC9vT00m8Poae12G/V6nZsPPWiIL77UqON7jx7gSbXipuHtpCU/9Ikv
      9nQX7441un50ukkigbCzNW9X7sHBAUqlEhKJhKcAm8TABzgLYWyn0scKRR3uVcHjqByTvJ+U
      Hp4QoMsTpRepkEHq7jgOPt3fxW6ziS+ePgNg6MLL5/MolUojaQ8ODpDJZNBoNGCaJmZnZ7G5
      uQld193nuq5jIZnC18+ex8KRu1GSJLRaLcRiMZTLZXfbMzlLbJomBoMBEokEcrncmOEqqjsv
      zSQDkMwEAMaYlOS3urrKDT48qWZC99GIEcwzXqaBMIROQ68LC15H8wx49n8vLwb9jRcjmJYN
      k9lioCgK5ubmYJqma/SZpolyuYxIJALLsvDkyRPYEQO7nbbr+qvX64jH41hMDb1NBwcH6Ha7
      SCQS2N/fRzQaRSwWg6IowxtdkkmX3maziVKphMVF76tXvVZgJwUrwWnhQqJKB42+7SW4eMJq
      4vDox4Gf4R3WoucZcOTvSaUET/cPkk9YtfHK7ByucJ5rmjYS4l1VVczMDO9srlQqiMViuNdu
      4kH5EL9w7rw70NvtNg4ODtDv95HNZt2tCWx7sVtR4vFhKJSbN28in8+jUChw7YBEIoFGozFG
      73GYgm0z0m+lUmnEEcNTwegDPOyFgez/JI+RvOhrUkWrp34qkFenk2+CbKQKOlh5DUY3QqVS
      QZa6ENpLnbpzsI+FZAppZnWRvVY1LHjq1LRhOw5M2x7bXt3tdt1ZIahKSf6WpOE1sxsbGwCA
      l19+eexbnkfPS1Vk33VNE/+08QSvzy2MhEkBnu0MILNcIpFwmVGSJDSbTXQ6HXS7XWSzWTiO
      414USMaZruvo9/su45CzzZGjK1NJ24zMAJMavGRKFH3Hm95ECONh8dKxWTWKlSw0/sfd24hq
      Gn736ivIRWMjNExyD68f000TsiRxzxbQWwX86OBJ+Uwmg0wmg263i1Kp5LpvVVV1F6Hotg0z
      +AFgYFuodbvomqabBztDWZaFSCTiznoEtm2j2+1CVVV0u130+30YhgHLsqCqKnq9nhulQlVV
      N/oE2XcWjUbdm28kSXp2TzANkUfES3XxagC2kYIMjt1mEw4c4b53XscRnZGtB2/6JLg8M4vD
      ThvtwQAZQzzgg8xO7DHMMMKE59Lzsh/IrSu2bR/r8glSHq9vI5EIFhYW3P/L5TLuHh7g+nYJ
      37h8JZCqykNSN/DbL13mpqM1jb29PSSTyZG9VbFYzA3TIkkS2u22O+DJAiP5PxaLYW9vD9ls
      FuVyGcViEZIk4eOdbUQ1DReLM8/iAnlVQjR4CKfyIOq4rjnAT7c28dr8AlJGRDhQPtzehAPg
      189dFNImKpOOBclKcbY+v7J2Ds1+H5lIZIRZad0zzECeVPKHnXkjR/TSF9hNCh7z8dQcAEgZ
      EfdWeHomPq5hTA98SZLczZO1Wm2EAVRVdW+EcRwHqVTKVXsAuGkJPWTxjByckWUZu60m4rqO
      iwgQGnESeOno3YGJrXodZ3N5pCNRYR7vra5Bmnhnzzgt5G+WNk1RkKWW19nBENYrNaknjaeC
      ejETzxD1A2EaOnqyF2j/vqqqqFQqmE8kMEtFYGNpnaTeIntpeVl8valfv4gcI47j4FfOnHWf
      nQgDeDVCOhLBf3z5qq+kJFEmRPl76f+sKuJFoyj9tF19QRFkBiGD5h+erCOuqljN5vDX9+7g
      TDaHd5dPCSUyuduLhUhtJBJTkiT0er0xozpIOBav9uxb1kgUEZYRMpkMNjc3kUwmPdXBIBAx
      zNRvnPbzFPGImibYAR30m6CGugi8XaNBZgIy0Fi9389ZIMsyMvE44sbwCqOH5UPcOdh3DxtN
      A44zPBjf6/XG9gUFsVNIOl4b1Ps9/NGtj/GQiiPFfrO9vT0S7tAPopmEVa9o+tVp6G8sESLj
      l4dpM4HX7ECDZ9iz+j/9LEz57N9esxDPABTh5t4O+paFzXoNXzt7Aa/PzuMnG0/wh9c+xFwy
      iVcWFqFpmlDSB6GdZwyTZ7Zto1KpjD2n68r7Tdtc7gAEsBqJIWE7qNVq3O0a3W4X8/PzXDpZ
      enlOETotz349ERVIkiTXNWoeubloQk4avBmAJ6VYw15En+g9qw5MA375XN/ZxkatiuV0BpI0
      3K+/msliLpmEA8C0LNze2cZSfGikfryzjbZl4QurZ1y/uKIo3MjZfnBnnUxm5E43QndYISFJ
      Et7L57ltSMra3NxEuVxGPv8sDiibzgui9qSfy14JJ0HQRg1apkh18vNciZ6zt5ywKkgQOghD
      /f/tXVtvG8cV/na5vKxI8SJT1M26xUZSx3KtAAWauG7RAn1tgaJBUaC/oj+r6UOR5LFA2/Sa
      PqQoHMuujUiWdaUp8SJeltwll9sH8qxnh7O7s5QEI00/gJC4nJ37nDnnzJlzeLfgfnGTZetJ
      dfHDL7fu49ZcEU3TxOHFBQAgl9KxWZjDw7UN1HtdPH516slPUUe38khlGovFkEgkAscpzgWh
      4OvHukS0bduNAi/7Yd0pivqTFlixWPRo4viPDIIWgWcHkKWIMphGC+KHqtHB58eH2F5Ycg28
      qAxA3EDRdidDpYJ2AZaPFJUlErKiTP6wd9qWid/95wkevypjLZfHQjqDk1YTv915hKOLkcvF
      B2vr+MHGW3DGi2h7aRmmbeOkeg597CXNNM1Q9a5t29B1HbZte25YiXhoWfCsMf9clH44HLrO
      Elj2lM1DRlUdtAg85tAiKhd1d3Acx13pMpMhLP8XjTqMQR+7gmAVLDXgg2vw+fq5LpQdUJm+
      ELFJsmnDnttDB6qi4J3iPH7yrXcxm0zirwf7iCkq9Hgcmqri7wcvMeTOZf7y8gU+ebLjfqeD
      s6D2ki8fy7KEfUX/RxnTKH1DeRcKBZydeWPN8XNqmphlLK5cBohC2WQW1/2FJehafMLFhl95
      MlskS9FEA3MdE/2yyoZcKoWf39mCpqqu2/bthSVUMm3cnruBncorbJUWJ+ryneUVXPR6aFsW
      MgERWUTYrVVRMTp4f2XVbQu14Xn1HF+cHuPDcZ14xQffXv773w5fYr9Rx4d3v+2J+0VpgdFd
      CIr6TgddIqIq2llkceVq0CCIVFFhldZUFe/OlyJ5nZbh69k0fjx8UP1k+FFeWxGVf+WR0jRo
      zJZ/e+4GHqyuo5TO4Eebt4SuF/MpHbv1Gj599tR9Fka96bemaaLaNSbSf3F6jI+fPUU2mUIs
      IOQp9Skf97hh9rBzVkFe1z22TDwbmcvl0O12PYaJfq4n4/G4FEHlNUdvxBz6OsELbUCwJof9
      n3/XT87w4/uDFs80WpLLggTf7cUltAV3hUW7Evv9vaVlvIfXtkD0OWg0YPQt/HDzLY+LE1F7
      RfkXUjp+dW8bs2OrTMKjV6fYrdXwszt33T5YXFwceR9kDNgI/y6fjHaRrfuuBWgY+DwuvQPY
      zhADJ7rVZBjq3S4+evIlzo2Rrcs0WiN+W/ajwkFU2U9/LBpYXr0YVMega6E8pZtm11CUke2+
      pmmY02ewlnvtLZvd9WSpJvv/T9+5g1+//xCZeGKqheo4DjKJyXezyRTm02lPHxeLRZimiXq9
      PqF1m00kcXhxgVetJgzDkCqbnROVTvvyC+BP+y/wCbO9XhUSsRhyyRSSMa8LPFlMS0FFlD8q
      CxM2+VmWgf+I6jLNAnAcB/1+XxiJkb1sI9tPbB1iqorsmCKzFPUyMg4AbOQL+B4TC9lxRodk
      AFzbf/a3m9kcCrqO87GbdFFdg/rv86PDyfgAUVFut9AbDLBZmHSK+ibgOCMLSbruFzQ4okk3
      zR0AGfjxyTyCJntUEwdFUdxIj+yEIItKOjGWWdCO46Ddbrt2OXw5tGsBwJnRQTKmIRsQXZI/
      9WXLoWfVahW9Xg/ZbNYNgSqrpPAbb/pdURR0LOvyO8BiZhYb+YK0S8Lrhh/15iGjqnvT4Nk5
      wkmziceVsu97mqYhPg7DZFnWxKkv3R+Q3Vn4iROGz17u45/Hh4FpRJSZV0aQe0m/+L8y4JUu
      7POZePxqhOCm2cNvHj/Cd0uL2Mh5I7OQRWEYW0CdK5Oez5+lJMPh0NNhQe8S/AQ2WciwADKL
      MExwPmk18a/TY8xocVQ6HWyVxP5GqQ80TXN98/NliaKqB0FRFCSTSXS73QnvbPQ7Cd0/3ryF
      RCyYtvKESjSxKZg2T8xEuza/M4jyFS14zwKYlhXKJFN4O5fH2ys3oUf0GsBW/CrZD78JR8+v
      qiy+46PKB5H63AEcB3iwtoHU+MKIqDya+EHBqKNCUUY3xCjiC7m/pwnJmjHMjQlQWNn0rqgN
      5LIll8sJWdkw1lZUFgt30ZAMQF63pr1hZBgG6u0WrNlZ3CstoB/RRR9R76vCNIKZ32CEvRPE
      brF5itopWjx+W3aQ2pYHv5OIbGpktUB8e6rVKorFouc2IC/I8yfzQfnxGrFGo4F6vY61tbVQ
      2S1qW1gDPoDZAVRVRaVSQalUmooVSKfTaKgKPnv2FAVFxer8vLSfSlne8jpBHXjVcoAfH08Q
      lSdTh7A0/CLy8yDtV6+gctPpNLrdrns3lxAUwd6vfqK0hmEgk8n4tlEkhMu2gWevNf5H2j5F
      hYZRoNtzN7DxwUO06nUPTyiDNy2AsgNymbrwFJ9Xx8nWg9KK5CHLtmEOBpgN0LIE5XnZxW6a
      JrLZrGd8RQKtn6EaO5f4iVsul5FMJpHP5698TojqIQyS5/cy34EiihJzHJRKJZyenk64CY9S
      uctCdsIReDPpMIj6wHFGPmjS6bTHXUyUeogEYb6cfxwd4NPn8mcvIkofRW7hkUql0G63PeYH
      ooUuYm/oeSKREDq7NU3T47QrDFHZOHZMhsMhVH4gpxFg+QrYto2ZmRnU63Xouu6xL/9fgZ/w
      SybEUdyUh4Efk+3FJXx/fVMqrZ88wf8WZdwTiQS63a5HXuT7QuRTltLQRXfeo4ht28hmsx6X
      jdcNdwfo9/uB/mX8Fgg1jF3pg8HAPbw4OjpybTm+CSDde7lcRq/XQ7PZdBdEvV5Hp9OJpIIU
      Tc5cMoX1fGGC8IjShskYLDvEp6UdXHRpfmVlBefn576sDC0C+q3caeOk3YIy9vpGBIIt8+zs
      zPWELaLqMtS+bVkTvlbZ9/mrlyrFde33+5ifnw+MIM42LJlMuhewRZUiW/Ll5WXYto1GoyE8
      lv+6gr0ZxU8eVVWh6zoMw3Bj4nY6HbRaLdfENzBvx8FXtSqGAWcCQRM7SO4QTSK/iUXOpXiz
      CbrRRc652HxEdbKHQ/x+7yv8YX8P/fH8YncFIhqaprm8v6wAzKLSaePj50/wx/1daQ2ZxvNh
      fls3z5eapol8Pg9N02AYhrBAcmOXz+dRq9VgmiZ0XZeO4/R1gagt5M2AAmGQ9kTGu/Jx8wJ/
      PngBPR53oyoCI+vH4kwaN7O5iXJ5TRrLfhCC+H6RUEzjp+u6e0BpWZZ7vlAsFrG3t4fV1dVA
      2RF4HR0mwQS4Y3cJUsDMzs4KFScy1D+uxqBAQcrHpQ5LGNwFOK0tEFG5TCaDdruNXq/n0Qjw
      0HUdtVoNlmVhYWFhas8F3wQ4joMzw8DCOCgE9edHO19iI1/AB2vrbjp+EfB9zzueBTBxW8/v
      XZdNUFWk02koyuiciJwdKIriqs7pux/1Zi05RWU6joNarebxZj3NWcXQcaBAzJKJ2jcRJE+6
      oPHVOtoxwsyADcNANptFs9nEYDBwPQD/H2LMcyetAPCLu/egKGJ3j/SX5+/Z7+RAltKKqD6v
      uqX3Wq2Wq/bkJzrFQpZlO/zK4y/Li96TYQXp7kAYHMfBfwGo03L3J69yfgAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='84' name='poverty by race' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='states w least fb' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top fi by county' width='192'>
      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
      0Y8oRvwf4X8BInXoQqPnX2IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top fi by state' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
